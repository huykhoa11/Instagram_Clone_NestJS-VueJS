{"ast":null,"code":"import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Infinity;\n  }\n\n  return mergeMap(identity, concurrent);\n}","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AA8DA,OAAM,SAAUC,QAAV,CAAmDC,UAAnD,EAAgF;EAA7B;IAAAA;EAA6B;;EACpF,OAAOH,QAAQ,CAACC,QAAD,EAAWE,UAAX,CAAf;AACD","names":["mergeMap","identity","mergeAll","concurrent"],"sourceRoot":"","sources":["../../../../src/internal/operators/mergeAll.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}