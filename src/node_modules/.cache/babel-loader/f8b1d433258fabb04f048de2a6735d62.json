{"ast":null,"code":"import { reduce } from './reduce';\nexport function count(predicate) {\n  return reduce(function (total, value, i) {\n    return !predicate || predicate(value, i) ? total + 1 : total;\n  }, 0);\n}","map":{"version":3,"mappings":"AACA,SAASA,MAAT,QAAuB,UAAvB;AAyDA,OAAM,SAAUC,KAAV,CAAmBC,SAAnB,EAAmE;EACvE,OAAOF,MAAM,CAAC,UAACG,KAAD,EAAQC,KAAR,EAAeC,CAAf,EAAgB;IAAK,OAAC,CAACH,SAAD,IAAcA,SAAS,CAACE,KAAD,EAAQC,CAAR,CAAvB,GAAoCF,KAAK,GAAG,CAA5C,GAAgDA,KAAjD;EAAuD,CAA7E,EAA+E,CAA/E,CAAb;AACD","names":["reduce","count","predicate","total","value","i"],"sourceRoot":"","sources":["../../../../src/internal/operators/count.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}