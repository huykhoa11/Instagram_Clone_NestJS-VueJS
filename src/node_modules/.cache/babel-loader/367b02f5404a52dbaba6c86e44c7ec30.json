{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \" this is dashboard \", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, _toDisplayString($setup.tasks), 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputTask = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.inputTask]]), _createElementVNode(\"div\", {\n    class: \"\"\n  }, [_createElementVNode(\"button\", {\n    onClick: $setup.createTask\n  }, \"Create Task\")])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACIA,oBAEM,KAFN,EAEM,IAFN,EAAK,qBAAL,EAEA;AAAA;AAFA;;;EAGKC,KAAK,EAAC;;;6DAHXC,YAGAF,oBAA+B,KAA/B,cAA+BG,iBAAdC,YAAc,CAA/B,EAAsB;EAAA;EAAtB,mBACAJ,oBAAuC,OAAvC,EAAuC;IAAhCK,IAAI,EAAC,MAA2B;+DAAXD,mBAASE;EAAE,CAAvC;;EAAA,kBAA4BF,qBAC5BJ,oBAEM,KAFN,EAEM;IAFDC,KAAK,EAAC;EAEL,CAFN,EAAa,CACTD,oBAAgD,QAAhD,EAAgD;IAAvCO,OAAK,EAAEH;EAAgC,CAAhD,EAA4B,aAA5B,CADS,CAAb","names":["_createElementVNode","class","_hoisted_1","_toDisplayString","$setup","type","$event","onClick"],"sourceRoot":"","sources":["E:\\LapTrinh\\NestJS\\social-media-clone\\frontend\\src\\components\\DashBoard.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        this is dashboard\r\n    </div>\r\n    <div class=\"\">{{ tasks }}</div>\r\n    <input type=\"text\" v-model=\"inputTask\">\r\n    <div class=\"\">\r\n        <button @click=\"createTask\">Create Task</button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted  } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\n// const state = reactive({todos: []});\r\nconst inputTask = ref('');\r\nconst tasks = ref(null);\r\n\r\nconst createTask = async() => {\r\n    const data = inputTask.value;\r\n    await axios\r\n    .post('http://localhost:3000/tasks', data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n    })\r\n    .then(({data}) => {\r\n        console.log(data);\r\n    });\r\n    getTasks();\r\n}\r\n\r\nconst getTasks = async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks');\r\n    tasks.value = response.data;\r\n}\r\n\r\nonMounted( async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks');\r\n    tasks.value = response.data;\r\n})\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}