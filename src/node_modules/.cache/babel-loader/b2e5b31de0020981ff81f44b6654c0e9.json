{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nexport default {\n  __name: 'SignIn',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const store = useStore();\n    const router = useRouter();\n    const username = ref('');\n    const password = ref('');\n    const usernameError = ref('');\n    const passwordError = ref(''); // const returnValue = ref('');\n\n    const isRememberMeCheck = ref(false);\n    const signInRef = ref(null);\n    console.log(signInRef);\n\n    const inputFocus = id => {\n      const inputElement = document.getElementById(id);\n      inputElement.style.border = 'solid 1px black';\n\n      if (id === 'usernameInput' && username.value.length > 0) {\n        usernameError.value = '';\n      } else if (id === 'passwordInput' && password.value.length > 0) {\n        passwordError.value = '';\n      }\n    };\n\n    const validateOnBlur = () => {\n      console.log('inside signIn');\n\n      if (username.value === '' && password.value === '') {\n        const usernameInputElement = document.getElementById('usernameInput');\n        usernameInputElement.style.border = \"solid 1px red\";\n        usernameError.value = \"Username can't be blank\";\n        const passwordInputElement = document.getElementById('passwordInput');\n        passwordInputElement.style.border = \"solid 1px red\";\n        passwordError.value = \"Password can't be blank\";\n      } else if (username.value === '') {\n        const usernameInputElement = document.getElementById('usernameInput');\n        usernameInputElement.style.border = \"solid 1px red\";\n        usernameError.value = \"Username can't be blank\";\n      } else if (password.value === '') {\n        const passwordInputElement = document.getElementById('passwordInput');\n        passwordInputElement.style.border = \"solid 1px red\";\n        passwordError.value = \"Password can't be blank\";\n      } else {\n        return true;\n      }\n    };\n\n    const signIn = async () => {\n      const validate = validateOnBlur();\n\n      if (validate === true) {\n        const data = {\n          username: username.value,\n          password: password.value\n        };\n\n        try {\n          console.log('remember me ', isRememberMeCheck.value);\n          signInRef.value.disabled = true;\n          signInRef.value.classList.toggle('hover:text-zinc-600');\n          signInRef.value.innerText = 'loading...';\n          const response = await axios.post(`http://localhost:3000/auth/signin?rememberMe=${isRememberMeCheck.value}`, data, {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json;charset=UTF-8\"\n            },\n            withCredentials: true\n          });\n          returnValue.value = response.data; // store.dispatch('getCurrentUser', {username: username.value})\n\n          localStorage.setItem('username', username.value); // router.push('/dashboard')\n\n          window.location.replace(\"http://localhost:8080/dashboard\"); // console.log(returnValue.value);\n        } catch (error) {\n          console.log(error);\n        } // try {\n        //   const response = await fetch('http://localhost:3000/auth/signin', {\n        //     method: \"POST\",\n        //     headers: {'Content-Type': 'application/json',},\n        //     body: JSON.stringify(data),\n        //   })\n        //   returnValue.value = await response.json();\n        // } catch (error) {\n        //   console.log(error);\n        // }\n\n      }\n    };\n\n    const __returned__ = {\n      store,\n      router,\n      username,\n      password,\n      usernameError,\n      passwordError,\n      isRememberMeCheck,\n      signInRef,\n      inputFocus,\n      validateOnBlur,\n      signIn,\n      ref,\n      axios,\n      useRouter,\n      useStore\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","axios","useRouter","useStore","store","router","username","password","usernameError","passwordError","isRememberMeCheck","signInRef","console","log","inputFocus","id","inputElement","document","getElementById","style","border","value","length","validateOnBlur","usernameInputElement","passwordInputElement","signIn","validate","data","disabled","classList","toggle","innerText","response","post","headers","Accept","withCredentials","returnValue","localStorage","setItem","window","location","replace","error"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/auth/SignIn.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\" relative w-screen h-screen bg-gray-200 \">\r\n      <div class=\" absolute left-0 right-0 top-10 mx-auto w-1/3 h-[500px] rounded-sm border border-gray-100 bg-white p-10\">\r\n        <header class=\" w-full h-1/6 flex items-center pl-2 bg-sky-200 text-3xl mb-5\">Sign In</header>\r\n        <label for=\"\" class=\" text-lg block\">Username<span class=\"text-red-500\">*</span></label>\r\n        <input id=\"usernameInput\" type=\"text\" class=\"border border-gray-200 h-10 w-full pl-2\" \r\n              v-model=\"username\" @blur=\"validateOnBlur()\" @focus=\"inputFocus('usernameInput')\">\r\n        <p class=\" h-4 text-red-500\">{{ usernameError }}</p>\r\n        <br>\r\n        <label for=\"\" class=\" text-lg block\">Password<span class=\"text-red-500\">*</span></label>\r\n        <input id=\"passwordInput\" type=\"password\" class=\"border border-gray-200 h-10 w-full pl-2\" \r\n              v-model=\"password\" @blur=\"validateOnBlur()\" @focus=\"inputFocus('passwordInput')\">\r\n        <p class=\" h-4 text-red-500\">{{ passwordError }}</p>\r\n        <br>\r\n        <input type=\"checkbox\" class=\" mt-2 mr-2\" id=\"rememberMe\" v-model=\"isRememberMeCheck\">\r\n        <label for=\"rememberMe\">Remember me</label>\r\n        <div>\r\n          <router-link to=\"/auth/signup\" class=\" text-sm text-sky-500 hover:underline hover:decoration-solid\">\r\n            Don't have account? Sign up here \r\n          </router-link>\r\n        </div>\r\n\r\n        <button @mousedown=\"signIn()\" class=\" block mt-7 py-1 px-3 bg-black rounded-md \r\n                                    text-xl text-white hover:text-zinc-600 hover:bg-slate-200\" ref=\"signInRef\">Login</button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </section>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport {useRouter} from \"vue-router\"\r\nimport {useStore} from \"vuex\"\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst username = ref('');\r\nconst password = ref('');\r\nconst usernameError = ref('');\r\nconst passwordError = ref('');\r\n\r\n// const returnValue = ref('');\r\nconst isRememberMeCheck = ref(false);\r\nconst signInRef = ref(null);\r\n\r\nconsole.log(signInRef);\r\n\r\nconst inputFocus = (id) => {\r\n  const inputElement = document.getElementById(id);\r\n  inputElement.style.border = 'solid 1px black';\r\n  if(id === 'usernameInput' && username.value.length > 0) {\r\n    usernameError.value = '';\r\n  }\r\n  else if(id === 'passwordInput' && password.value.length > 0) {\r\n    passwordError.value = '';\r\n  }\r\n}\r\n\r\nconst validateOnBlur = () => {\r\n   console.log('inside signIn');\r\n  if (username.value === '' && password.value === '') {\r\n    const usernameInputElement = document.getElementById('usernameInput');\r\n    usernameInputElement.style.border = \"solid 1px red\";\r\n    usernameError.value = \"Username can't be blank\";\r\n\r\n    const passwordInputElement = document.getElementById('passwordInput');\r\n    passwordInputElement.style.border = \"solid 1px red\";\r\n    passwordError.value = \"Password can't be blank\";\r\n  }\r\n  else if(username.value === '') {\r\n    const usernameInputElement = document.getElementById('usernameInput');\r\n    usernameInputElement.style.border = \"solid 1px red\";\r\n    usernameError.value = \"Username can't be blank\";\r\n  } \r\n  else if(password.value === '') {\r\n    const passwordInputElement = document.getElementById('passwordInput');\r\n    passwordInputElement.style.border = \"solid 1px red\";\r\n    passwordError.value = \"Password can't be blank\";\r\n  }\r\n  else {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst signIn = async () => {\r\n\r\n  const validate = validateOnBlur();\r\n  if(validate === true) {\r\n    const data = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n\r\n    try {\r\n      console.log('remember me ', isRememberMeCheck.value);\r\n      signInRef.value.disabled = true;\r\n      signInRef.value.classList.toggle('hover:text-zinc-600');\r\n      signInRef.value.innerText = 'loading...';\r\n      const response = await axios.post(`http://localhost:3000/auth/signin?rememberMe=${isRememberMeCheck.value}`, data, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n      });\r\n      returnValue.value = response.data;\r\n      // store.dispatch('getCurrentUser', {username: username.value})\r\n      localStorage.setItem('username' ,username.value);\r\n      // router.push('/dashboard')\r\n      window.location.replace(\"http://localhost:8080/dashboard\");\r\n      // console.log(returnValue.value);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    // try {\r\n    //   const response = await fetch('http://localhost:3000/auth/signin', {\r\n    //     method: \"POST\",\r\n    //     headers: {'Content-Type': 'application/json',},\r\n    //     body: JSON.stringify(data),\r\n    //   })\r\n    //   returnValue.value = await response.json();\r\n    // } catch (error) {\r\n    //   console.log(error);\r\n    // }\r\n  }\r\n  \r\n  \r\n};\r\n\r\n</script>\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}