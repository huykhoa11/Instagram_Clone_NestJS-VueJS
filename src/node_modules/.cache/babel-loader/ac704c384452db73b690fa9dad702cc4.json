{"ast":null,"code":"import { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { displayToast } from '/src/composables/DisplayToast';\nimport { login, spin } from '/src/composables/Fetch.js';\nexport default {\n  __name: 'SignIn',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const store = useStore();\n    const router = useRouter();\n    const username = ref('');\n    const password = ref('');\n    const usernameError = ref('');\n    const passwordError = ref(''); // const returnValue = ref('');\n\n    const isRememberMeCheck = ref(false);\n    const signInRef = ref(null);\n    console.log(signInRef);\n\n    const inputChange = () => {\n      if (username.value.length > 0) {\n        usernameError.value = '';\n      }\n\n      if (password.value.length >= 6 && password.value.length <= 12) {\n        passwordError.value = '';\n      }\n    };\n\n    const inputFocus = id => {\n      const inputElement = document.getElementById(id);\n      inputElement.style.border = 'solid 1px black';\n    };\n\n    const validateOnBlur = () => {\n      const usernameConditionBlank = username.value.length < 4 || password.value.length > 12;\n      const usernameConditionContainWhiteSpace = /\\s/.test(username.value);\n      const passwordCondition = password.value.length < 6 || password.value.length > 12;\n\n      if (usernameConditionBlank && passwordCondition) {\n        setError('username', \"Username can't be blank\");\n        setError('password', \"Password must contains 6-12 characters\");\n        return false;\n      } else if (usernameConditionContainWhiteSpace) {\n        setError('username', \"Username can't contain white space\");\n        return false;\n      } else if (usernameConditionBlank) {\n        setError('username', \"Username can't be blank\");\n        return false;\n      }\n\n      if (passwordCondition) {\n        setError('password', \"Password must contains 6-12 characters\");\n        return false;\n      }\n\n      return true;\n    };\n\n    const errorElement = {\n      username: usernameError,\n      password: passwordError\n    };\n\n    const setError = (ele, text) => {\n      document.getElementById(`${ele}Input`).style.border = \"solid 1px red\";\n      errorElement[ele].value = text;\n    };\n\n    const signIn = async () => {\n      const validate = validateOnBlur();\n\n      if (validate === true) {\n        const data = {\n          username: username.value,\n          password: password.value\n        };\n        const tmp = signInRef.value.innerHTML;\n\n        try {\n          console.log('remember me ', isRememberMeCheck.value);\n          signInRef.value.disabled = true;\n          signInRef.value.innerHTML = spin('pink');\n          const response = await login(isRememberMeCheck.value, data);\n          localStorage.setItem('username', username.value);\n          window.location.replace(\"http://localhost:8080/homepage\");\n        } catch (error) {\n          console.log(error);\n          signInRef.value.disabled = false;\n          signInRef.value.innerHTML = tmp;\n          username.value = '';\n          password.value = '';\n          displayToast('Account not found, please input again', '#EC6A71');\n        }\n      }\n    };\n\n    const __returned__ = {\n      store,\n      router,\n      username,\n      password,\n      usernameError,\n      passwordError,\n      isRememberMeCheck,\n      signInRef,\n      inputChange,\n      inputFocus,\n      validateOnBlur,\n      errorElement,\n      setError,\n      signIn,\n      ref,\n      axios,\n      useRouter,\n      useStore,\n      displayToast,\n      login,\n      spin\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","axios","useRouter","useStore","displayToast","login","spin","store","router","username","password","usernameError","passwordError","isRememberMeCheck","signInRef","console","log","inputChange","value","length","inputFocus","id","inputElement","document","getElementById","style","border","validateOnBlur","usernameConditionBlank","usernameConditionContainWhiteSpace","test","passwordCondition","setError","errorElement","ele","text","signIn","validate","data","tmp","innerHTML","disabled","response","localStorage","setItem","window","location","replace","error"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/auth/SignIn.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\" relative w-screen h-screen bg-gray-200 \">\r\n      <div class=\" absolute left-0 right-0 top-10 mx-auto w-1/3 h-[500px] rounded-sm border border-gray-100 bg-white p-10\">\r\n        <header class=\" w-full h-1/6 flex items-center pl-2 bg-gradient-to-r from-blue-600 to-sky-400 text-white text-3xl mb-5\">Sign In</header>\r\n        <label for=\"\" class=\" text-lg block\">Username<span class=\"text-red-500\">*</span></label>\r\n        <input id=\"usernameInput\" type=\"text\" class=\"border border-gray-200 h-10 w-full pl-2\" \r\n              v-model=\"username\" @blur=\"validateOnBlur()\" @focus=\"inputFocus('usernameInput')\" @input=\"inputChange\">\r\n        <p class=\" h-4 text-red-500\">{{ usernameError }}</p>\r\n        <br>\r\n        <label for=\"\" class=\" text-lg block\">Password<span class=\"text-red-500\">*</span></label>\r\n        <input id=\"passwordInput\" type=\"password\" class=\"border border-gray-200 h-10 w-full pl-2\" \r\n              v-model=\"password\" @blur=\"validateOnBlur()\" @focus=\"inputFocus('passwordInput')\" @input=\"inputChange\">\r\n        <p class=\" h-4 text-red-500\">{{ passwordError }}</p>\r\n        <br>\r\n        <input type=\"checkbox\" class=\" mt-2 mr-2\" id=\"rememberMe\" v-model=\"isRememberMeCheck\">\r\n        <label for=\"rememberMe\">Remember me</label>\r\n        <div>\r\n          <router-link to=\"/auth/signup\" class=\" text-sm text-sky-500 hover:underline hover:decoration-solid\">\r\n            Don't have account? Sign up here \r\n          </router-link>\r\n        </div>\r\n\r\n        <button @mousedown=\"signIn()\" class=\" flex justify-center items-center mt-7 py-1 px-3 bg-black rounded-md \r\n                                    text-xl text-white \" ref=\"signInRef\">Login</button>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </section>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport {useRouter} from \"vue-router\"\r\nimport {useStore} from \"vuex\"\r\nimport { displayToast } from '/src/composables/DisplayToast';\r\nimport { login, spin } from '/src/composables/Fetch.js';\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst username = ref('');\r\nconst password = ref('');\r\nconst usernameError = ref('');\r\nconst passwordError = ref('');\r\n\r\n// const returnValue = ref('');\r\nconst isRememberMeCheck = ref(false);\r\nconst signInRef = ref(null);\r\n\r\nconsole.log(signInRef);\r\n\r\nconst inputChange = () => {\r\n  if(username.value.length > 0) {\r\n    usernameError.value = '';\r\n  }\r\n  if(password.value.length >= 6 && password.value.length <= 12) {\r\n    passwordError.value = '';\r\n  }\r\n}\r\n\r\nconst inputFocus = (id) => {\r\n  const inputElement = document.getElementById(id);\r\n  inputElement.style.border = 'solid 1px black';\r\n}\r\n\r\nconst validateOnBlur = () => {\r\n  const usernameConditionBlank = username.value.length < 4 || password.value.length > 12;\r\n  const usernameConditionContainWhiteSpace = /\\s/.test(username.value);\r\n  const passwordCondition = password.value.length < 6 || password.value.length > 12;\r\n\r\n  if (usernameConditionBlank && passwordCondition) {\r\n    setError('username', \"Username can't be blank\");\r\n    setError('password', \"Password must contains 6-12 characters\");\r\n    return false;\r\n  }\r\n  else if (usernameConditionContainWhiteSpace) {\r\n    setError('username', \"Username can't contain white space\");\r\n    return false;\r\n  }\r\n  else if(usernameConditionBlank) {\r\n    setError('username', \"Username can't be blank\");\r\n    return false;\r\n  }\r\n  if(passwordCondition) {\r\n    setError('password', \"Password must contains 6-12 characters\");\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst errorElement = {\r\n  username: usernameError,\r\n  password: passwordError,\r\n}\r\n\r\nconst setError = (ele, text) => {\r\n  document.getElementById(`${ele}Input`).style.border = \"solid 1px red\";\r\n  errorElement[ele].value = text;\r\n}\r\n\r\nconst signIn = async () => {\r\n\r\n  const validate = validateOnBlur();\r\n  if(validate === true) {\r\n    const data = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    const tmp = signInRef.value.innerHTML;\r\n\r\n    try {\r\n      console.log('remember me ', isRememberMeCheck.value);\r\n      signInRef.value.disabled = true;\r\n      signInRef.value.innerHTML = spin('pink');\r\n      const response = await login(isRememberMeCheck.value, data);\r\n\r\n      localStorage.setItem('username' ,username.value);\r\n      window.location.replace(\"http://localhost:8080/homepage\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      signInRef.value.disabled = false;\r\n      signInRef.value.innerHTML = tmp;\r\n      username.value = '';\r\n      password.value = '';\r\n      displayToast('Account not found, please input again', '#EC6A71');\r\n    }\r\n  }\r\n  \r\n};\r\n\r\n</script>\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}