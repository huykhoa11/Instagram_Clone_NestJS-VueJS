{"ast":null,"code":"import { reactive, ref, onMounted } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'DashBoard',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const state = reactive({\n      tasks: []\n    });\n    const inputTask = ref('');\n    const inputComment = ref('');\n    const tasks = ref(null);\n    const commentsOfOneTask = ref(null);\n    const createTaskBtnRef = ref(null);\n    const addCmtBtnRef = ref(null);\n\n    const createTask = async () => {\n      createTaskBtnRef.value.disabled = true;\n      createTaskBtnRef.value.innerText = 'Loading...';\n      const data = {\n        content: inputTask.value\n      };\n      console.log(data);\n      const response = await axios.post('http://localhost:3000/tasks', data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        withCredentials: true\n      });\n      inputTask.value = '';\n      getTasks();\n      createTaskBtnRef.value.disabled = false;\n      createTaskBtnRef.value.innerText = 'Create Task';\n    };\n\n    const getTasks = async () => {\n      const response = await axios.get('http://localhost:3000/tasks', {\n        withCredentials: true\n      });\n      tasks.value = response.data;\n    };\n\n    const addComment = async taskId => {\n      addCmtBtnRef.value.disabled = true;\n      addCmtBtnRef.value.innerText = 'Loading...';\n      const data = {\n        content: inputComment.value\n      };\n      console.log(data);\n      const response = await axios.post(`http://localhost:3000/tasks/${taskId}/comments`, data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        withCredentials: true\n      });\n      inputComment.value = '';\n      getCmtsFromOneTask(taskId);\n      addCmtBtnRef.value.disabled = false;\n      addCmtBtnRef.value.innerText = 'add comment';\n    };\n\n    const getCmtsFromOneTask = async taskId => {\n      const response = await axios.get(`http://localhost:3000/tasks/${taskId}/comments`, {\n        withCredentials: true\n      });\n      commentsOfOneTask.value = response.data;\n    };\n\n    onMounted(async () => {\n      const response = await axios.get('http://localhost:3000/tasks', {\n        withCredentials: true\n      });\n      tasks.value = response.data;\n      state.tasks = response.data.json();\n      console.log(response.data);\n      console.log(tasks.value);\n      console.log('state.tasks', state.tasks);\n    });\n    const __returned__ = {\n      state,\n      inputTask,\n      inputComment,\n      tasks,\n      commentsOfOneTask,\n      createTaskBtnRef,\n      addCmtBtnRef,\n      createTask,\n      getTasks,\n      addComment,\n      getCmtsFromOneTask,\n      reactive,\n      ref,\n      onMounted,\n      axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["reactive","ref","onMounted","axios","state","tasks","inputTask","inputComment","commentsOfOneTask","createTaskBtnRef","addCmtBtnRef","createTask","value","disabled","innerText","data","content","console","log","response","post","headers","Accept","withCredentials","getTasks","get","addComment","taskId","getCmtsFromOneTask","json"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/DashBoard.vue"],"sourcesContent":["<template>\r\n    <h3>\r\n        this is dashboard\r\n    </h3>\r\n    <ul>\r\n        <li v-for=\"task in tasks\" :key=\"task\" class=\"border border-red-400 my-3\">\r\n            <p>{{ task.content }}</p>\r\n            <ul>\r\n                <li v-for=\"comment in commentsOfOneTask\" :key=\"comment\">{{comment.content}}</li>\r\n            </ul>\r\n            <input type=\"text\" v-model=\"inputComment\" class=\"border border-gray-200\" placeholder=\"add comment\">\r\n            <button @click=\"addComment(task.id)\" ref=\"addCmtBtnRef\" class=\"border border-black bg-slate-200\">Add comment</button>\r\n        </li>\r\n    </ul>\r\n\r\n\r\n    <div class=\"\">\r\n        <input type=\"text\" v-model=\"inputTask\" class=\"border border-gray-200\" placeholder=\"create task\"> \r\n        <button @click=\"createTask()\" ref=\"createTaskBtnRef\" class=\"border border-black bg-slate-200\">Create Task</button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted  } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst state = reactive({tasks: []});\r\nconst inputTask = ref('');\r\nconst inputComment = ref('');\r\n\r\nconst tasks = ref(null);\r\nconst commentsOfOneTask = ref(null);\r\nconst createTaskBtnRef = ref(null);\r\nconst addCmtBtnRef = ref(null);\r\n\r\nconst createTask = async() => {\r\n\r\n    createTaskBtnRef.value.disabled = true;\r\n    createTaskBtnRef.value.innerText = 'Loading...'\r\n    const data = {content: inputTask.value};\r\n    console.log(data);\r\n    \r\n    const response = await axios\r\n    .post('http://localhost:3000/tasks', data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n    inputTask.value = '';\r\n    getTasks();\r\n    createTaskBtnRef.value.disabled = false;\r\n    createTaskBtnRef.value.innerText = 'Create Task';\r\n}\r\n\r\nconst getTasks = async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n}\r\n\r\nconst addComment = async(taskId) => {\r\n    addCmtBtnRef.value.disabled = true;\r\n    addCmtBtnRef.value.innerText = 'Loading...'\r\n    const data = {content: inputComment.value};\r\n    console.log(data);\r\n    \r\n    const response = await axios\r\n    .post(`http://localhost:3000/tasks/${taskId}/comments`, data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n    inputComment.value = '';\r\n    getCmtsFromOneTask(taskId);\r\n    addCmtBtnRef.value.disabled = false;\r\n    addCmtBtnRef.value.innerText = 'add comment';\r\n}\r\n\r\nconst getCmtsFromOneTask = async(taskId) => {\r\n    const response = await axios.get(\r\n        `http://localhost:3000/tasks/${taskId}/comments`, \r\n        {withCredentials: true}\r\n    );\r\n    commentsOfOneTask.value = response.data;\r\n}\r\n\r\n\r\n\r\nonMounted( async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n    state.tasks = (response.data).json();\r\n\r\n    console.log(response.data);\r\n    console.log(tasks.value);\r\n    console.log('state.tasks', state.tasks);\r\n})\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}