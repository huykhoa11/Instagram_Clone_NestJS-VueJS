{"ast":null,"code":"import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\nexport function multicast(subjectOrSubjectFactory, selector) {\n  var subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () {\n    return subjectOrSubjectFactory;\n  };\n\n  if (isFunction(selector)) {\n    return connect(selector, {\n      connector: subjectFactory\n    });\n  }\n\n  return function (source) {\n    return new ConnectableObservable(source, subjectFactory);\n  };\n}","map":{"version":3,"mappings":"AAEA,SAASA,qBAAT,QAAsC,qCAAtC;AAEA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AA4EA,OAAM,SAAUC,SAAV,CACJC,uBADI,EAEJC,QAFI,EAE+C;EAEnD,IAAMC,cAAc,GAAGL,UAAU,CAACG,uBAAD,CAAV,GAAsCA,uBAAtC,GAAgE;IAAM;EAAuB,CAApH;;EAEA,IAAIH,UAAU,CAACI,QAAD,CAAd,EAA0B;IAIxB,OAAOH,OAAO,CAACG,QAAD,EAAW;MACvBE,SAAS,EAAED;IADY,CAAX,CAAd;EAGD;;EAED,OAAO,UAACE,MAAD,EAAsB;IAAK,WAAIR,qBAAJ,CAA+BQ,MAA/B,EAAuCF,cAAvC;EAAsD,CAAxF;AACD","names":["ConnectableObservable","isFunction","connect","multicast","subjectOrSubjectFactory","selector","subjectFactory","connector","source"],"sourceRoot":"","sources":["../../../../src/internal/operators/multicast.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}