{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { innerFrom } from '../observable/innerFrom';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n  var buffer = [];\n  var active = 0;\n  var index = 0;\n  var isComplete = false;\n\n  var checkComplete = function () {\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  var outerNext = function (value) {\n    return active < concurrent ? doInnerSub(value) : buffer.push(value);\n  };\n\n  var doInnerSub = function (value) {\n    expand && subscriber.next(value);\n    active++;\n    var innerComplete = false;\n    innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, function (innerValue) {\n      onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n\n      if (expand) {\n        outerNext(innerValue);\n      } else {\n        subscriber.next(innerValue);\n      }\n    }, function () {\n      innerComplete = true;\n    }, undefined, function () {\n      if (innerComplete) {\n        try {\n          active--;\n\n          var _loop_1 = function () {\n            var bufferedValue = buffer.shift();\n\n            if (innerSubScheduler) {\n              executeSchedule(subscriber, innerSubScheduler, function () {\n                return doInnerSub(bufferedValue);\n              });\n            } else {\n              doInnerSub(bufferedValue);\n            }\n          };\n\n          while (buffer.length && active < concurrent) {\n            _loop_1();\n          }\n\n          checkComplete();\n        } catch (err) {\n          subscriber.error(err);\n        }\n      }\n    }));\n  };\n\n  source.subscribe(createOperatorSubscriber(subscriber, outerNext, function () {\n    isComplete = true;\n    checkComplete();\n  }));\n  return function () {\n    additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n  };\n}","map":{"version":3,"mappings":";AACA,SAASA,SAAT,QAA0B,yBAA1B;AAGA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AAeA,OAAM,SAAUC,cAAV,CACJC,MADI,EAEJC,UAFI,EAGJC,OAHI,EAIJC,UAJI,EAKJC,YALI,EAMJC,MANI,EAOJC,iBAPI,EAQJC,mBARI,EAQ4B;EAGhC,IAAMC,MAAM,GAAQ,EAApB;EAEA,IAAIC,MAAM,GAAG,CAAb;EAEA,IAAIC,KAAK,GAAG,CAAZ;EAEA,IAAIC,UAAU,GAAG,KAAjB;;EAKA,IAAMC,aAAa,GAAG;IAIpB,IAAID,UAAU,IAAI,CAACH,MAAM,CAACK,MAAtB,IAAgC,CAACJ,MAArC,EAA6C;MAC3CR,UAAU,CAACa,QAAX;IACD;EACF,CAPD;;EAUA,IAAMC,SAAS,GAAG,UAACC,KAAD,EAAS;IAAK,OAACP,MAAM,GAAGN,UAAT,GAAsBc,UAAU,CAACD,KAAD,CAAhC,GAA0CR,MAAM,CAACU,IAAP,CAAYF,KAAZ,CAA3C;EAA8D,CAA9F;;EAEA,IAAMC,UAAU,GAAG,UAACD,KAAD,EAAS;IAI1BX,MAAM,IAAIJ,UAAU,CAACkB,IAAX,CAAgBH,KAAhB,CAAV;IAIAP,MAAM;IAKN,IAAIW,aAAa,GAAG,KAApB;IAGAxB,SAAS,CAACM,OAAO,CAACc,KAAD,EAAQN,KAAK,EAAb,CAAR,CAAT,CAAmCW,SAAnC,CACEvB,wBAAwB,CACtBG,UADsB,EAEtB,UAACqB,UAAD,EAAW;MAGTlB,YAAY,SAAZ,gBAAY,WAAZ,GAAY,MAAZ,eAAY,CAAGkB,UAAH,CAAZ;;MAEA,IAAIjB,MAAJ,EAAY;QAGVU,SAAS,CAACO,UAAD,CAAT;MACD,CAJD,MAIO;QAELrB,UAAU,CAACkB,IAAX,CAAgBG,UAAhB;MACD;IACF,CAfqB,EAgBtB;MAGEF,aAAa,GAAG,IAAhB;IACD,CApBqB,EAsBtBG,SAtBsB,EAuBtB;MAIE,IAAIH,aAAJ,EAAmB;QAKjB,IAAI;UAIFX,MAAM;;;YAMJ,IAAMe,aAAa,GAAGhB,MAAM,CAACiB,KAAP,EAAtB;;YAIA,IAAInB,iBAAJ,EAAuB;cACrBT,eAAe,CAACI,UAAD,EAAaK,iBAAb,EAAgC;gBAAM,iBAAU,CAACkB,aAAD,CAAV;cAAyB,CAA/D,CAAf;YACD,CAFD,MAEO;cACLP,UAAU,CAACO,aAAD,CAAV;YACD;;;UATH,OAAOhB,MAAM,CAACK,MAAP,IAAiBJ,MAAM,GAAGN,UAAjC,EAA2C;;UAU1C;;UAEDS,aAAa;QACd,CAtBD,CAsBE,OAAOc,GAAP,EAAY;UACZzB,UAAU,CAAC0B,KAAX,CAAiBD,GAAjB;QACD;MACF;IACF,CA1DqB,CAD1B;EA8DD,CA9ED;;EAiFA1B,MAAM,CAACqB,SAAP,CACEvB,wBAAwB,CAACG,UAAD,EAAac,SAAb,EAAwB;IAE9CJ,UAAU,GAAG,IAAb;IACAC,aAAa;EACd,CAJuB,CAD1B;EAUA,OAAO;IACLL,mBAAmB,SAAnB,uBAAmB,WAAnB,GAAmB,MAAnB,sBAAmB,EAAnB;EACD,CAFD;AAGD","names":["innerFrom","executeSchedule","createOperatorSubscriber","mergeInternals","source","subscriber","project","concurrent","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","buffer","active","index","isComplete","checkComplete","length","complete","outerNext","value","doInnerSub","push","next","innerComplete","subscribe","innerValue","undefined","bufferedValue","shift","err","error"],"sourceRoot":"","sources":["../../../../src/internal/operators/mergeInternals.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}