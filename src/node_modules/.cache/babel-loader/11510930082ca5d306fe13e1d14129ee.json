{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-22009874\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \" Loggin as \", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = {\n  class: \"\"\n};\nconst _hoisted_3 = {\n  class: \"relative mx-auto w-3/4 flex justify-around border border-black my-3\"\n};\nconst _hoisted_4 = {\n  class: \"border border-red-400 space-y-4 w-2/4\"\n};\nconst _hoisted_5 = {\n  class: \"font-semibold\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_7 = {\n  class: \"overflow-auto\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"\"\n};\nconst _hoisted_9 = [\"id\"];\nconst _hoisted_10 = [\"onClick\", \"id\"];\n\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"border border-gray-400 w-1/4\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Suggest Friend\"), /*#__PURE__*/_createElementVNode(\"ul\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.inputTask = $event),\n    class: \"border border-gray-200\",\n    placeholder: \"create task\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.inputTask]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.createTask()),\n    ref: \"createTaskBtnRef\",\n    class: \"border border-black bg-slate-200\"\n  }, \"Create Task\", 512\n  /* NEED_PATCH */\n  )]), _createElementVNode(\"section\", _hoisted_3, [_createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task,\n      class: \"border border-gray-300 drop-shadow-md\"\n    }, [_createElementVNode(\"p\", _hoisted_5, _toDisplayString(task.content), 1\n    /* TEXT */\n    ), _hoisted_6, _createElementVNode(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.comments.comments[task.id], comment => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: comment\n      }, _toDisplayString(comment.content), 1\n      /* TEXT */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]), _ctx.like ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"input\", {\n      type: \"text\",\n      id: 'inputComment' + task.id,\n      class: \"border border-gray-200\",\n      placeholder: \"add comment\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_9), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.addComment(task.id),\n      id: 'buttonComment' + task.id,\n      class: \"border border-black bg-slate-200 hover:bg-slate-100\"\n    }, \"Add comment\", 8\n    /* PROPS */\n    , _hoisted_10)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_11])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEACIA,oBAEK,IAFL,EAEK,IAFL,EAAI,aAAJ,EAEA;AAAA;AAFA;;;EAIKC,KAAK,EAAC;;;EAKFA,KAAK,EAAC;;;EACPA,KAAK,EAAC;;;EAECA,KAAK,EAAC;;;gEAAuCD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;EAC5CC,KAAK,EAAC;;;;EAGOA,KAAK,EAAC;;;;;iEAO/BD,oBAGM,KAHN,EAGM;EAHDC,KAAK,EAAC;AAGL,CAHN,EAA0C,cACtCD,oBAAqB,GAArB,EAAqB,IAArB,EAAG,gBAAH,CADsC,eAEtCA,oBAAS,IAAT,CAFsC,CAA1C;;AAAA;;;6DAvBJE,YAIAF,oBAGM,KAHN,cAGM,iBAFFA,oBAAgG,OAAhG,EAAgG;IAAzFG,IAAI,EAAC,MAAoF;+DAApEC,iBAASC,OAA2D;IAAzDJ,KAAK,EAAC,wBAAmD;IAA1BK,WAAW,EAAC;EAAc,CAAhG;;EAAA,kBAA4BF,iBAE1B,EADFJ,oBAAkH,QAAlH,EAAkH;IAAzGO,OAAK,sCAAEH,iBAAF,CAAoG;IAApFI,GAAG,EAAC,kBAAgF;IAA7DP,KAAK,EAAC;EAAuD,CAAlH,EAA8F,aAA9F,EAAyG;EAAA;EAAzG,CACE,CAHN,GAKAD,oBAkBU,SAlBV,cAkBU,CAjBNA,oBAWK,IAXL,cAWK,oBAVDS,oBASKC,SATL,EASK,IATL,EASKC,YATcP,UASd,EATMQ,IAAa,IAAT;yBAAfH,oBASK,IATL,EASK;MATsBI,GAAG,EAAED,IAS3B;MATiCX,KAAK,EAAC;IASvC,CATL,GACID,oBAAgD,GAAhD,cAAgDc,iBAAnBF,IAAI,CAACG,OAAc,CAAhD,EAAyC;IAAA;IAAzC,GAAgDC,YAChDhB,oBAEK,IAFL,cAEK,oBADDS,oBAAyFC,SAAzF,EAAyF,IAAzF,EAAyFC,YAAnEP,cAASa,QAAT,CAAkBL,IAAI,CAACM,EAAvB,CAAmE,EAA9EC,OAAoC,IAA7B;2BAAlBV,oBAAyF,IAAzF,EAAyF;QAAtCI,GAAG,EAAEM;MAAiC,CAAzF,EAA+DL,iBAAIK,OAAO,CAACJ,OAAZ,CAA/D,EAAkF;MAAA;MAAlF;KAAyF,CAAzF;;IAAA,CACC,EAFL,GAGWX,2BAAXK,oBAAgC,KAAhC,oDACAT,oBAA2G,OAA3G,EAA2G;MAApGG,IAAI,EAAC,MAA+F;MAAvFe,EAAE,mBAAmBN,IAAI,CAACM,EAA6D;MAAzDjB,KAAK,EAAC,wBAAmD;MAA1BK,WAAW,EAAC;IAAc,CAA3G;;IAAA,eACAN,oBACwF,QADxF,EACwF;MAD/EO,OAAK,YAAEH,gBAAWQ,IAAI,CAACM,EAAhB,CACwE;MADlDA,EAAE,oBAAoBN,IAAI,CAACM,EACuB;MAAhFjB,KAAK,EAAC;IAA0E,CADxF,EACoE,aADpE,EAC+E;IAAA;IAD/E,EAC+EmB,WAD/E,EAPJ;GASK,CATL;;EAAA,CAUC,EAXL,CAiBM,EAJNC,WAIM,CAlBV","names":["_createElementVNode","class","_hoisted_1","type","_ctx","$event","placeholder","onClick","ref","_createElementBlock","_Fragment","_renderList","task","key","_toDisplayString","content","_hoisted_6","comments","id","comment","_hoisted_10","_hoisted_11"],"sourceRoot":"","sources":["E:\\LapTrinh\\NestJS\\social-media-clone\\frontend\\src\\components\\DashBoard.vue"],"sourcesContent":["<template>\r\n    <h3>\r\n        Loggin as \r\n    </h3>\r\n\r\n    <div class=\"\">\r\n        <input type=\"text\" v-model=\"inputTask\" class=\"border border-gray-200\" placeholder=\"create task\"> \r\n        <button @click=\"createTask()\" ref=\"createTaskBtnRef\" class=\"border border-black bg-slate-200\">Create Task</button>\r\n    </div>\r\n\r\n    <section class=\" relative mx-auto w-3/4 flex justify-around border border-black my-3\">\r\n        <ul class=\" border border-red-400 space-y-4 w-2/4\">\r\n            <li v-for=\"task in tasks\" :key=\"task\" class=\" border border-gray-300 drop-shadow-md\">\r\n                <p class=\" font-semibold\">{{ task.content }}</p><hr>\r\n                <ul class=\" overflow-auto \">\r\n                    <li v-for=\"comment in comments.comments[task.id]\" :key=\"comment\">{{comment.content}}</li>\r\n                </ul>\r\n                <div v-if=\"like\" class=\"\"></div>\r\n                <input type=\"text\" :id=\"'inputComment' + task.id\" class=\"border border-gray-200\" placeholder=\"add comment\">\r\n                <button @click=\"addComment(task.id)\" :id=\"'buttonComment' + task.id\" \r\n                        class=\"border border-black bg-slate-200 hover:bg-slate-100\">Add comment</button>\r\n            </li>\r\n        </ul>\r\n\r\n        <div class=\" border border-gray-400 w-1/4\">\r\n            <p>Suggest Friend</p>\r\n            <ul></ul>\r\n        </div>\r\n    </section>\r\n\r\n    \r\n\r\n\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted  } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst state = reactive({tasks: []});\r\nconst inputTask = ref('');\r\nconst inputComment = ref('');\r\n\r\nconst tasks = ref(null);\r\nconst commentsOfOneTask = ref(null);\r\nconst comments = reactive({comments: []});\r\n\r\nconst like\r\n\r\nconst createTaskBtnRef = ref(null);\r\n// const addCmtBtnRef = ref(null);\r\n// const addCmtInputRef = ref(null);\r\n\r\n\r\nconst createTask = async() => {\r\n\r\n    createTaskBtnRef.value.disabled = true;\r\n    createTaskBtnRef.value.innerText = 'Loading...'\r\n    const data = {content: inputTask.value};\r\n    console.log(data);\r\n    \r\n    const response = await axios\r\n    .post('http://localhost:3000/tasks', data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n    inputTask.value = '';\r\n    getTasks();\r\n    createTaskBtnRef.value.disabled = false;\r\n    createTaskBtnRef.value.innerText = 'Create Task';\r\n}\r\n\r\nconst getTasks = async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n}\r\n\r\nconst addComment = async(taskId) => {\r\n\r\n    const inputCommentElement  = document.getElementById(`inputComment${taskId}`);\r\n    const buttonCommentElement = document.getElementById(`buttonComment${taskId}`);\r\n    console.log(inputCommentElement.value);\r\n    buttonCommentElement.disabled = true;\r\n    buttonCommentElement.innerText = 'Loading...';\r\n\r\n    const data = {content: inputCommentElement.value};\r\n    console.log(data);\r\n    \r\n    const response = await axios\r\n    .post(`http://localhost:3000/tasks/${taskId}/comments`, data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n\r\n    inputCommentElement.value = '';\r\n    buttonCommentElement.disabled = false;\r\n    buttonCommentElement.innerText = 'Add comment';\r\n    comments.comments[taskId].push(response.data)\r\n}\r\n\r\nconst getCmtsFromOneTask = async(taskId) => {\r\n    const response = await axios.get(\r\n        `http://localhost:3000/tasks/${taskId}/comments`, \r\n        {withCredentials: true}\r\n    );\r\n    commentsOfOneTask.value = response.data;\r\n}\r\n\r\n\r\n\r\nonMounted( async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n    state.tasks = (response.data)\r\n\r\n    let count = 0;\r\n    state.tasks.forEach(async(ele) => {\r\n        const response = await axios.get(\r\n            `http://localhost:3000/tasks/${ele.id}/comments`, \r\n            {withCredentials: true}\r\n        );\r\n        comments.comments[ele.id] = response.data;\r\n        console.log(comments.comments[ele.id]);\r\n    })\r\n    // console.log(response.data);\r\n    // console.log(tasks.value);\r\n    // console.log('state.tasks', state.tasks);\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.liked {\r\n    color: dodgerblue;\r\n}\r\n\r\n.unliked {\r\n    color: darkgray;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}