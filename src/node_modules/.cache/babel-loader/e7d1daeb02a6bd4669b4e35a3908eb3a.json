{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __values } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferCount(bufferSize, startBufferEvery) {\n  if (startBufferEvery === void 0) {\n    startBufferEvery = null;\n  }\n\n  startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;\n  return operate(function (source, subscriber) {\n    var buffers = [];\n    var count = 0;\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var e_1, _a, e_2, _b;\n\n      var toEmit = null;\n\n      if (count++ % startBufferEvery === 0) {\n        buffers.push([]);\n      }\n\n      try {\n        for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {\n          var buffer = buffers_1_1.value;\n          buffer.push(value);\n\n          if (bufferSize <= buffer.length) {\n            toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];\n            toEmit.push(buffer);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      if (toEmit) {\n        try {\n          for (var toEmit_1 = __values(toEmit), toEmit_1_1 = toEmit_1.next(); !toEmit_1_1.done; toEmit_1_1 = toEmit_1.next()) {\n            var buffer = toEmit_1_1.value;\n            arrRemove(buffers, buffer);\n            subscriber.next(buffer);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (toEmit_1_1 && !toEmit_1_1.done && (_b = toEmit_1.return)) _b.call(toEmit_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    }, function () {\n      var e_3, _a;\n\n      try {\n        for (var buffers_2 = __values(buffers), buffers_2_1 = buffers_2.next(); !buffers_2_1.done; buffers_2_1 = buffers_2.next()) {\n          var buffer = buffers_2_1.value;\n          subscriber.next(buffer);\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (buffers_2_1 && !buffers_2_1.done && (_a = buffers_2.return)) _a.call(buffers_2);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n\n      subscriber.complete();\n    }, undefined, function () {\n      buffers = null;\n    }));\n  });\n}","map":{"version":3,"mappings":";;AACA,SAASA,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAqDA,OAAM,SAAUC,WAAV,CAAyBC,UAAzB,EAA6CC,gBAA7C,EAAmF;EAAtC;IAAAA;EAAsC;;EAGvFA,gBAAgB,GAAGA,gBAAgB,SAAhB,oBAAgB,WAAhB,sBAAoBD,UAAvC;EAEA,OAAOJ,OAAO,CAAC,UAACM,MAAD,EAASC,UAAT,EAAmB;IAChC,IAAIC,OAAO,GAAU,EAArB;IACA,IAAIC,KAAK,GAAG,CAAZ;IAEAH,MAAM,CAACI,SAAP,CACET,wBAAwB,CACtBM,UADsB,EAEtB,UAACI,KAAD,EAAM;;;MACJ,IAAIC,MAAM,GAAiB,IAA3B;;MAKA,IAAIH,KAAK,KAAKJ,gBAAV,KAAgC,CAApC,EAAuC;QACrCG,OAAO,CAACK,IAAR,CAAa,EAAb;MACD;;;QAGD,KAAqB,mCAAOC,8BAA5B,EAA4B,iBAA5B,EAA4BA,8BAA5B,EAA8B;UAAzB,IAAMC,MAAM,oBAAZ;UACHA,MAAM,CAACF,IAAP,CAAYF,KAAZ;;UAMA,IAAIP,UAAU,IAAIW,MAAM,CAACC,MAAzB,EAAiC;YAC/BJ,MAAM,GAAGA,MAAM,SAAN,UAAM,WAAN,YAAU,EAAnB;YACAA,MAAM,CAACC,IAAP,CAAYE,MAAZ;UACD;QACF;;;;;;;;;;;;;MAED,IAAIH,MAAJ,EAAY;;UAIV,KAAqB,iCAAMK,4BAA3B,EAA2B,gBAA3B,EAA2BA,4BAA3B,EAA6B;YAAxB,IAAMF,MAAM,mBAAZ;YACHb,SAAS,CAACM,OAAD,EAAUO,MAAV,CAAT;YACAR,UAAU,CAACW,IAAX,CAAgBH,MAAhB;UACD;;;;;;;;;;;;MACF;IACF,CAnCqB,EAoCtB;;;;QAGE,KAAqB,mCAAOI,8BAA5B,EAA4B,iBAA5B,EAA4BA,8BAA5B,EAA8B;UAAzB,IAAMJ,MAAM,oBAAZ;UACHR,UAAU,CAACW,IAAX,CAAgBH,MAAhB;QACD;;;;;;;;;;;;;MACDR,UAAU,CAACa,QAAX;IACD,CA3CqB,EA6CtBC,SA7CsB,EA8CtB;MAEEb,OAAO,GAAG,IAAV;IACD,CAjDqB,CAD1B;EAqDD,CAzDa,CAAd;AA0DD","names":["operate","createOperatorSubscriber","arrRemove","bufferCount","bufferSize","startBufferEvery","source","subscriber","buffers","count","subscribe","value","toEmit","push","buffers_1_1","buffer","length","toEmit_1_1","next","buffers_2_1","complete","undefined"],"sourceRoot":"","sources":["../../../../src/internal/operators/bufferCount.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}