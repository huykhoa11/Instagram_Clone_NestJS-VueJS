{"ast":null,"code":"import { reactive, ref, onMounted } from \"vue\";\nimport axios from \"axios\"; // const state = reactive({todos: []});\n\nexport default {\n  __name: 'DashBoard',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const inputTask = ref('');\n    const inputComment = ref('');\n    const tasks = ref(null);\n    const comments = ref(null);\n    const createTaskBtnRef = ref(null);\n\n    const createTask = async () => {\n      createTaskBtnRef.value.disabled = true;\n      createTaskBtnRef.value.innerText = 'Loading...';\n      const data = {\n        content: inputTask.value\n      };\n      inputTask.value = '';\n      const response = await axios.post('http://localhost:3000/tasks', data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        withCredentials: true\n      });\n      createTaskBtnRef.value.disabled = false;\n      createTaskBtnRef.value.innerText = 'Create Task';\n      getTasks();\n    };\n\n    const getTasks = async () => {\n      const response = await axios.get('http://localhost:3000/tasks', {\n        withCredentials: true\n      });\n      tasks.value = response.data;\n    };\n\n    onMounted(async () => {\n      const response = await axios.get('http://localhost:3000/tasks', {\n        withCredentials: true\n      });\n      tasks.value = response.data;\n    });\n    const __returned__ = {\n      inputTask,\n      inputComment,\n      tasks,\n      comments,\n      createTaskBtnRef,\n      createTask,\n      getTasks,\n      reactive,\n      ref,\n      onMounted,\n      axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAoBA,SAASA,QAAT,EAAmBC,GAAnB,EAAwBC,SAAxB,QAA0C,KAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;;;;;;IACA,MAAMC,SAAS,GAAGH,GAAG,CAAC,EAAD,CAArB;IACA,MAAMI,YAAY,GAAGJ,GAAG,CAAC,EAAD,CAAxB;IAEA,MAAMK,KAAK,GAAGL,GAAG,CAAC,IAAD,CAAjB;IACA,MAAMM,QAAQ,GAAGN,GAAG,CAAC,IAAD,CAApB;IACA,MAAMO,gBAAgB,GAAGP,GAAG,CAAC,IAAD,CAA5B;;IAEA,MAAMQ,UAAU,GAAG,YAAW;MAE1BD,gBAAgB,CAACE,KAAjB,CAAuBC,QAAvB,GAAkC,IAAlC;MACAH,gBAAgB,CAACE,KAAjB,CAAuBE,SAAvB,GAAmC,YAAnC;MACA,MAAMC,IAAI,GAAG;QAACC,OAAO,EAAEV,SAAS,CAACM;MAApB,CAAb;MACAN,SAAS,CAACM,KAAV,GAAkB,EAAlB;MACA,MAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAC3Ba,IADsB,CACjB,6BADiB,EACcH,IADd,EACoB;QACvCI,OAAO,EAAE;UACTC,MAAM,EAAE,kBADC;UAET,gBAAgB;QAFP,CAD8B;QAKvCC,eAAe,EAAE;MALsB,CADpB,CAAvB;MAQAX,gBAAgB,CAACE,KAAjB,CAAuBC,QAAvB,GAAkC,KAAlC;MACAH,gBAAgB,CAACE,KAAjB,CAAuBE,SAAvB,GAAmC,aAAnC;MACAQ,QAAQ;IACX,CAjBD;;IAmBA,MAAMA,QAAQ,GAAG,YAAW;MACxB,MAAML,QAAQ,GAAG,MAAMZ,KAAK,CAACkB,GAAN,CAAU,6BAAV,EAAyC;QAACF,eAAe,EAAE;MAAlB,CAAzC,CAAvB;MACAb,KAAK,CAACI,KAAN,GAAcK,QAAQ,CAACF,IAAvB;IACH,CAHD;;IAKAX,SAAS,CAAE,YAAW;MAClB,MAAMa,QAAQ,GAAG,MAAMZ,KAAK,CAACkB,GAAN,CAAU,6BAAV,EAAyC;QAACF,eAAe,EAAE;MAAlB,CAAzC,CAAvB;MACAb,KAAK,CAACI,KAAN,GAAcK,QAAQ,CAACF,IAAvB;IACH,CAHQ,CAAT","names":["reactive","ref","onMounted","axios","inputTask","inputComment","tasks","comments","createTaskBtnRef","createTask","value","disabled","innerText","data","content","response","post","headers","Accept","withCredentials","getTasks","get"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/DashBoard.vue"],"sourcesContent":["<template>\r\n    <h3>\r\n        this is dashboard\r\n    </h3>\r\n    <ul>\r\n        <li v-for=\"task in tasks\" :key=\"task\" class=\"border border-red-400 my-3\">\r\n            <p>{{ task.content }}</p>\r\n            <ul>\r\n                <li v-for=\"comment in task.comments\" :key=\"comment\">{{comment.content}}</li>\r\n            </ul>\r\n            <input type=\"text\" v-model=\"inputTask\" class=\"border border-gray-200\" placeholder=\"add comment\">\r\n        </li>\r\n    </ul>\r\n    <input type=\"text\" v-model=\"inputComment\" class=\"border border-gray-200\" placeholder=\"create task\">\r\n    <div class=\"\">\r\n        <button @click=\"createTask()\" ref=\"createTaskBtnRef\" class=\"border border-black bg-slate-200\">Create Task</button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted  } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\n// const state = reactive({todos: []});\r\nconst inputTask = ref('');\r\nconst inputComment = ref('');\r\n\r\nconst tasks = ref(null);\r\nconst comments = ref(null);\r\nconst createTaskBtnRef = ref(null);\r\n\r\nconst createTask = async() => {\r\n\r\n    createTaskBtnRef.value.disabled = true;\r\n    createTaskBtnRef.value.innerText = 'Loading...'\r\n    const data = {content: inputTask.value};\r\n    inputTask.value = '';\r\n    const response = await axios\r\n    .post('http://localhost:3000/tasks', data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n    createTaskBtnRef.value.disabled = false;\r\n    createTaskBtnRef.value.innerText = 'Create Task';\r\n    getTasks();\r\n}\r\n\r\nconst getTasks = async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n}\r\n\r\nonMounted( async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n})\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}