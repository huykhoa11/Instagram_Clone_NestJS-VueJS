{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nexport default {\n  __name: 'SignIn',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const store = useStore();\n    const username = ref('');\n    const password = ref('');\n    const returnValue = ref('');\n    const isAuthenticated = ref(false);\n    const router = useRouter();\n    const signInRef = ref(null);\n    console.log(signInRef);\n\n    const signIn = async () => {\n      console.log('inside signIn');\n      const data = {\n        username: username.value,\n        password: password.value\n      };\n\n      try {\n        signInRef.value.disabled = true;\n        signInRef.value.classList.toggle('hover:bg-slate-200');\n        signInRef.value.innerText = 'loading...';\n        const response = await axios.post('http://localhost:3000/auth/signin', data, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\"\n          },\n          withCredentials: true\n        });\n        returnValue.value = response.data;\n        isAuthenticated.value = true;\n        store.dispatch('getCurrentUser', {\n          username: username.value\n        });\n        router.push('/dashboard');\n        console.log(returnValue.value);\n      } catch (error) {\n        console.log(error);\n      } // try {\n      //   const response = await fetch('http://localhost:3000/auth/signin', {\n      //     method: \"POST\",\n      //     headers: {'Content-Type': 'application/json',},\n      //     body: JSON.stringify(data),\n      //   })\n      //   returnValue.value = await response.json();\n      // } catch (error) {\n      //   console.log(error);\n      // }\n\n    };\n\n    const __returned__ = {\n      store,\n      username,\n      password,\n      returnValue,\n      isAuthenticated,\n      router,\n      signInRef,\n      signIn,\n      ref,\n      axios,\n      useRouter,\n      useStore\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AAoBA,SAASA,GAAT,QAAoB,KAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,QAAR,QAAuB,MAAvB;;;;;;;;IAEA,MAAMC,KAAK,GAAGD,QAAQ,EAAtB;IAEA,MAAME,QAAQ,GAAGL,GAAG,CAAC,EAAD,CAApB;IACA,MAAMM,QAAQ,GAAGN,GAAG,CAAC,EAAD,CAApB;IACA,MAAMO,WAAW,GAAGP,GAAG,CAAC,EAAD,CAAvB;IACA,MAAMQ,eAAe,GAAGR,GAAG,CAAC,KAAD,CAA3B;IACA,MAAMS,MAAM,GAAGP,SAAS,EAAxB;IACA,MAAMQ,SAAS,GAAGV,GAAG,CAAC,IAAD,CAArB;IAEAW,OAAO,CAACC,GAAR,CAAYF,SAAZ;;IAEA,MAAMG,MAAM,GAAG,YAAY;MACzBF,OAAO,CAACC,GAAR,CAAY,eAAZ;MACA,MAAME,IAAI,GAAG;QACXT,QAAQ,EAAEA,QAAQ,CAACU,KADR;QAEXT,QAAQ,EAAEA,QAAQ,CAACS;MAFR,CAAb;;MAKA,IAAI;QACFL,SAAS,CAACK,KAAV,CAAgBC,QAAhB,GAA2B,IAA3B;QACAN,SAAS,CAACK,KAAV,CAAgBE,SAAhB,CAA0BC,MAA1B,CAAiC,oBAAjC;QACAR,SAAS,CAACK,KAAV,CAAgBI,SAAhB,GAA4B,YAA5B;QACA,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAW,mCAAX,EAAgDP,IAAhD,EAAsD;UAC3EQ,OAAO,EAAE;YACPC,MAAM,EAAE,kBADD;YAEP,gBAAgB;UAFT,CADkE;UAK3EC,eAAe,EAAE;QAL0D,CAAtD,CAAvB;QAOAjB,WAAW,CAACQ,KAAZ,GAAoBK,QAAQ,CAACN,IAA7B;QACAN,eAAe,CAACO,KAAhB,GAAwB,IAAxB;QACAX,KAAK,CAACqB,QAAN,CAAe,gBAAf,EAAiC;UAACpB,QAAQ,EAAEA,QAAQ,CAACU;QAApB,CAAjC;QACAN,MAAM,CAACiB,IAAP,CAAY,YAAZ;QACAf,OAAO,CAACC,GAAR,CAAYL,WAAW,CAACQ,KAAxB;MACD,CAhBD,CAgBE,OAAOY,KAAP,EAAc;QACdhB,OAAO,CAACC,GAAR,CAAYe,KAAZ;MACD,CAzBwB,CA4BzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;IAKD,CA1CD","names":["ref","axios","useRouter","useStore","store","username","password","returnValue","isAuthenticated","router","signInRef","console","log","signIn","data","value","disabled","classList","toggle","innerText","response","post","headers","Accept","withCredentials","dispatch","push","error"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/auth/SignIn.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\" relative w-screen h-screen bg-gray-200\">\r\n      <div class=\" absolute left-0 right-0  mx-auto w-1/3 h-96 border border-stone-700\">\r\n        <header class=\" w-full h-1/6 bg-sky-200 text-3xl mb-5\">Sign In</header>\r\n        <label for=\"\">Username</label>\r\n        <input type=\"text\" class=\"border border-black\" v-model=\"username\"><br><br>\r\n        <label for=\"\">Password</label>\r\n        <input type=\"password\" class=\"border border-black\" v-model=\"password\"><br>\r\n        <button @click=\"signIn()\" class=\"border border-black bg-slate-300 hover:bg-slate-200\" ref=\"signInRef\">Sign In</button>\r\n\r\n      </div>\r\n    </div>\r\n    <p>{{ returnValue }}</p>\r\n\r\n  </section>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport {useRouter} from \"vue-router\"\r\nimport {useStore} from \"vuex\"\r\n\r\nconst store = useStore();\r\n\r\nconst username = ref('');\r\nconst password = ref('');\r\nconst returnValue = ref('');\r\nconst isAuthenticated = ref(false);\r\nconst router = useRouter();\r\nconst signInRef = ref(null);\r\n\r\nconsole.log(signInRef);\r\n\r\nconst signIn = async () => {\r\n  console.log('inside signIn');\r\n  const data = {\r\n    username: username.value,\r\n    password: password.value,\r\n  };\r\n\r\n  try {\r\n    signInRef.value.disabled = true;\r\n    signInRef.value.classList.toggle('hover:bg-slate-200');\r\n    signInRef.value.innerText = 'loading...';\r\n    const response = await axios.post('http://localhost:3000/auth/signin', data, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    returnValue.value = response.data;\r\n    isAuthenticated.value = true;\r\n    store.dispatch('getCurrentUser', {username: username.value})\r\n    router.push('/dashboard')\r\n    console.log(returnValue.value);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n\r\n  // try {\r\n  //   const response = await fetch('http://localhost:3000/auth/signin', {\r\n  //     method: \"POST\",\r\n  //     headers: {'Content-Type': 'application/json',},\r\n  //     body: JSON.stringify(data),\r\n  //   })\r\n  //   returnValue.value = await response.json();\r\n  // } catch (error) {\r\n  //   console.log(error);\r\n  // }\r\n\r\n\r\n\r\n  \r\n};\r\n\r\n</script>\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}