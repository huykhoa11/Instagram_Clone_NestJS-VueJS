{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, onMounted } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'DashBoard',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const state = reactive({\n      tasks: [],\n      comments: [],\n      likes: []\n    });\n    const tasks = ref([]);\n    const comments = ref([]);\n    const likes = ref([]);\n    const inputTask = ref('');\n    const commentsOfOneTask = ref(null);\n    const likeStatus = ref('text-gray-400');\n    const createTaskBtnRef = ref(null); // const addCmtBtnRef = ref(null);\n    // const addCmtInputRef = ref(null);\n    // Tasks\n\n    const createTask = async () => {\n      createTaskBtnRef.value.disabled = true;\n      createTaskBtnRef.value.innerText = 'Loading...';\n      const data = {\n        content: inputTask.value\n      };\n      const response = await axios.post('http://localhost:3000/tasks', data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        withCredentials: true\n      });\n      inputTask.value = '';\n      tasks.value.push(response.data); // getTasks();\n\n      createTaskBtnRef.value.disabled = false;\n      createTaskBtnRef.value.innerText = 'Create Task';\n    };\n\n    const getTasks = async () => {\n      const response = await axios.get('http://localhost:3000/tasks', {\n        withCredentials: true\n      });\n      tasks.value = response.data; // state.tasks = response.data;\n    }; // Comments\n\n\n    const addComment = async taskId => {\n      const inputCommentElement = document.getElementById(`inputComment${taskId}`);\n      const buttonCommentElement = document.getElementById(`buttonComment${taskId}`);\n      console.log(inputCommentElement.value);\n      buttonCommentElement.disabled = true;\n      buttonCommentElement.classList.toggle('hover:bg-slate-100');\n      buttonCommentElement.innerText = 'Loading...';\n      const data = {\n        content: inputCommentElement.value\n      };\n      const response = await axios.post(`http://localhost:3000/tasks/${taskId}/comments`, data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        withCredentials: true\n      });\n      inputCommentElement.value = '';\n      buttonCommentElement.disabled = false;\n      buttonCommentElement.innerText = 'Add comment';\n      buttonCommentElement.classList.toggle('hover:bg-slate-100');\n      comments.value[taskId].push(response.data);\n    };\n\n    const deleteComment = async (commentId, taskId) => {\n      comments.value[taskId] = comments.value[taskId].filter(item => item.id !== commentId);\n      await axios.delete(`http://localhost:3000/tasks/comments/${commentId}`, {\n        withCredentials: true\n      }); // arr = arr.filter(item => item !== value)\n\n      console.log(comments.value[taskId]);\n    };\n\n    const getCmtsFromOneTask = async taskId => {\n      const response = await axios.get(`http://localhost:3000/tasks/${taskId}/comments`, {\n        withCredentials: true\n      });\n      commentsOfOneTask.value = response.data;\n    }; // Likes\n\n\n    const likeClick = async taskId => {\n      if (likes.value[taskId].status === false || likes.value[taskId] === '') {\n        if (likes.value[taskId] === '') {\n          likes.value[taskId] = {};\n        }\n\n        const data = {\n          status: true\n        };\n        await axios.post(`http://localhost:3000/tasks/${taskId}/likes`, data, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\"\n          },\n          withCredentials: true\n        });\n        likes.value[taskId].status = true;\n      } else if (likes.value[taskId].status === true) {\n        // const data = {status: false};\n        likes.value[taskId].status = false;\n        await axios.delete(`http://localhost:3000/tasks/${taskId}/likes`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\"\n          },\n          withCredentials: true\n        });\n      }\n    };\n\n    onMounted(async () => {\n      const response = await axios.get('http://localhost:3000/tasks', {\n        withCredentials: true\n      });\n      console.log(response.data);\n      tasks.value = response.data;\n      let count = 0;\n      tasks.value.forEach(async ele => {\n        // const commentsLink = `http://localhost:3000/tasks/${ele.id}/comments`;\n        // const likesLink = `http://localhost:3000/tasks/${ele.id}/likes`;\n        // const requestComments = axios.get(commentsLink, {withCredentials: true});\n        // const requestLikes = axios.get(likesLink, {withCredentials: true});\n        // await axios.all([requestComments, requestLikes]).then(\n        //     axios.spread((...responses) => {\n        //     comments.value[ele.id] = responses[0];\n        //     likes.value[ele.id] = responses[1];\n        //     })\n        // );\n        let response;\n        response = await axios.get(`http://localhost:3000/tasks/${ele.id}/comments`, {\n          withCredentials: true\n        });\n        comments.value[ele.id] = response.data;\n        response = await axios.get(`http://localhost:3000/tasks/${ele.id}/likes`, {\n          withCredentials: true\n        });\n        likes.value[ele.id] = response.data;\n      });\n      console.log(tasks.value);\n      console.log(comments.value);\n      console.log(likes.value);\n    });\n    const __returned__ = {\n      state,\n      tasks,\n      comments,\n      likes,\n      inputTask,\n      commentsOfOneTask,\n      likeStatus,\n      createTaskBtnRef,\n      createTask,\n      getTasks,\n      addComment,\n      deleteComment,\n      getCmtsFromOneTask,\n      likeClick,\n      reactive,\n      ref,\n      onMounted,\n      axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["reactive","ref","onMounted","axios","state","tasks","comments","likes","inputTask","commentsOfOneTask","likeStatus","createTaskBtnRef","createTask","value","disabled","innerText","data","content","response","post","headers","Accept","withCredentials","push","getTasks","get","addComment","taskId","inputCommentElement","document","getElementById","buttonCommentElement","console","log","classList","toggle","deleteComment","commentId","filter","item","id","delete","getCmtsFromOneTask","likeClick","status","count","forEach","ele"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/DashBoard.vue"],"sourcesContent":["<template>\r\n    <h3>\r\n        Loggin as \r\n    </h3>\r\n\r\n    <div class=\"\">\r\n        <input type=\"text\" v-model=\"inputTask\" class=\"border border-gray-200\" placeholder=\"create task\"> \r\n        <button @click=\"createTask()\" ref=\"createTaskBtnRef\" class=\"border border-black bg-slate-200\">Create Task</button>\r\n    </div>\r\n\r\n    <section class=\" relative mx-auto w-3/4 flex justify-around border border-black my-3\">\r\n        <ul class=\" border border-red-400 space-y-10 w-2/4\">\r\n            <li v-for=\"task in tasks\" :key=\"task\" class=\" border border-gray-300 drop-shadow-md\">\r\n                <p class=\" font-semibold\">{{ task.content }}</p><hr>\r\n                <ul class=\" overflow-auto \">\r\n                    <li v-for=\"comment in comments[task.id]\" :key=\"comment\" class=\"flex justify-between items-center group\">\r\n                        <p>{{comment.content}}</p>\r\n                        <i @click=\"deleteComment(comment.id, task.id)\" class=\"fa-solid fa-x mr-4 text-sm hidden opacity-50 \r\n                            hover:cursor-pointer hover:opacity-80 hover:text-red-500 group-hover:inline-block\"></i>\r\n                    </li>\r\n                </ul>\r\n                <button :class=\"[likes[task.id] === '' ?  'text-gray-400' : 'text-blue-400 bg-sky-100'  ]\" \r\n                        @click=\"likeClick(task.id)\" \r\n                        class=\" font-semibold px-2 block border border-gray-200 hover:bg-slate-200 hover:cursor-pointer\">\r\n                        <i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like\r\n                </button>\r\n                <div class=\" space-x-1\">\r\n                    <input type=\"text\" :id=\"'inputComment' + task.id\" class=\"border border-gray-200\" placeholder=\"add comment\">\r\n                    <button @click=\"addComment(task.id)\" :id=\"'buttonComment' + task.id\" \r\n                            class=\" px-2 border border-black bg-slate-200 hover:bg-slate-100\">Add comment</button>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <div class=\" border border-gray-400 w-1/4 h-96\">\r\n            <p>Suggest Friend</p>\r\n            <ul></ul>\r\n        </div>\r\n    </section>\r\n\r\n    \r\n\r\n\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted  } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst state = reactive({tasks: [], comments: [], likes: []});\r\nconst tasks = ref([]);\r\nconst comments = ref([]);\r\nconst likes = ref([]);\r\nconst inputTask = ref('');\r\n\r\nconst commentsOfOneTask = ref(null);\r\nconst likeStatus = ref('text-gray-400')\r\n\r\nconst createTaskBtnRef = ref(null);\r\n// const addCmtBtnRef = ref(null);\r\n// const addCmtInputRef = ref(null);\r\n\r\n// Tasks\r\nconst createTask = async() => {\r\n\r\n    createTaskBtnRef.value.disabled = true;\r\n    createTaskBtnRef.value.innerText = 'Loading...'\r\n    const data = {content: inputTask.value};\r\n    \r\n    const response = await axios\r\n    .post('http://localhost:3000/tasks', data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n    inputTask.value = '';\r\n    tasks.value.push(response.data);\r\n    // getTasks();\r\n    createTaskBtnRef.value.disabled = false;\r\n    createTaskBtnRef.value.innerText = 'Create Task';\r\n}\r\n\r\nconst getTasks = async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n    // state.tasks = response.data;\r\n}\r\n\r\n\r\n// Comments\r\nconst addComment = async(taskId) => {\r\n\r\n    const inputCommentElement  = document.getElementById(`inputComment${taskId}`);\r\n    const buttonCommentElement = document.getElementById(`buttonComment${taskId}`);\r\n    console.log(inputCommentElement.value);\r\n    buttonCommentElement.disabled = true;\r\n    buttonCommentElement.classList.toggle('hover:bg-slate-100');\r\n    buttonCommentElement.innerText = 'Loading...';\r\n\r\n    const data = {content: inputCommentElement.value};\r\n    \r\n    const response = await axios\r\n    .post(`http://localhost:3000/tasks/${taskId}/comments`, data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n\r\n    inputCommentElement.value = '';\r\n    buttonCommentElement.disabled = false;\r\n    buttonCommentElement.innerText = 'Add comment';\r\n    buttonCommentElement.classList.toggle('hover:bg-slate-100');\r\n    comments.value[taskId].push(response.data)\r\n}\r\n\r\nconst deleteComment = async(commentId, taskId) => {\r\n    comments.value[taskId] = comments.value[taskId].filter(item => item.id !== commentId);\r\n    await axios.delete(`http://localhost:3000/tasks/comments/${commentId}`, {withCredentials: true});\r\n    // arr = arr.filter(item => item !== value)\r\n    console.log(comments.value[taskId]);\r\n\r\n}\r\n\r\nconst getCmtsFromOneTask = async(taskId) => {\r\n    const response = await axios.get(\r\n        `http://localhost:3000/tasks/${taskId}/comments`, \r\n        {withCredentials: true}\r\n    );\r\n    commentsOfOneTask.value = response.data;\r\n}\r\n\r\n\r\n// Likes\r\nconst likeClick = async(taskId) => {\r\n\r\n    if(likes.value[taskId].status === false || likes.value[taskId]  === '') {\r\n        if(likes.value[taskId]  === '') {\r\n           likes.value[taskId] = {};\r\n        }\r\n\r\n        const data = {status: true};\r\n        await axios.post(`http://localhost:3000/tasks/${taskId}/likes`, data, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n            withCredentials: true,\r\n        });\r\n        likes.value[taskId].status  = true;\r\n    }\r\n    else if (likes.value[taskId].status  === true) {\r\n        // const data = {status: false};\r\n        likes.value[taskId].status  = false;\r\n        await axios.delete(`http://localhost:3000/tasks/${taskId}/likes`, {\r\n            headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n            withCredentials: true,\r\n        });\r\n    }\r\n}\r\n\r\nonMounted( async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    console.log(response.data);\r\n    tasks.value = response.data;\r\n\r\n    let count = 0;\r\n    tasks.value.forEach(async(ele) => {\r\n        // const commentsLink = `http://localhost:3000/tasks/${ele.id}/comments`;\r\n        // const likesLink = `http://localhost:3000/tasks/${ele.id}/likes`;\r\n\r\n        // const requestComments = axios.get(commentsLink, {withCredentials: true});\r\n        // const requestLikes = axios.get(likesLink, {withCredentials: true});\r\n\r\n        // await axios.all([requestComments, requestLikes]).then(\r\n        //     axios.spread((...responses) => {\r\n        //     comments.value[ele.id] = responses[0];\r\n        //     likes.value[ele.id] = responses[1];\r\n        //     })\r\n        // );\r\n\r\n        let response;\r\n        response = await axios.get(\r\n            `http://localhost:3000/tasks/${ele.id}/comments`, \r\n            {withCredentials: true}\r\n        );\r\n        comments.value[ele.id] = response.data;\r\n\r\n        response = await axios.get(\r\n            `http://localhost:3000/tasks/${ele.id}/likes`, \r\n            {withCredentials: true}\r\n        );\r\n        likes.value[ele.id] = response.data;\r\n\r\n\r\n    })\r\n\r\n    console.log(tasks.value);\r\n    console.log(comments.value);\r\n    console.log(likes.value);\r\n    \r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.liked {\r\n    color: dodgerblue;\r\n}\r\n\r\n.unliked {\r\n    color: darkgray;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}