{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __extends } from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nvar VirtualTimeScheduler = function (_super) {\n  __extends(VirtualTimeScheduler, _super);\n\n  function VirtualTimeScheduler(schedulerActionCtor, maxFrames) {\n    if (schedulerActionCtor === void 0) {\n      schedulerActionCtor = VirtualAction;\n    }\n\n    if (maxFrames === void 0) {\n      maxFrames = Infinity;\n    }\n\n    var _this = _super.call(this, schedulerActionCtor, function () {\n      return _this.frame;\n    }) || this;\n\n    _this.maxFrames = maxFrames;\n    _this.frame = 0;\n    _this.index = -1;\n    return _this;\n  }\n\n  VirtualTimeScheduler.prototype.flush = function () {\n    var _a = this,\n        actions = _a.actions,\n        maxFrames = _a.maxFrames;\n\n    var error;\n    var action;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  VirtualTimeScheduler.frameTimeFactor = 10;\n  return VirtualTimeScheduler;\n}(AsyncScheduler);\n\nexport { VirtualTimeScheduler };\n\nvar VirtualAction = function (_super) {\n  __extends(VirtualAction, _super);\n\n  function VirtualAction(scheduler, work, index) {\n    if (index === void 0) {\n      index = scheduler.index += 1;\n    }\n\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.index = index;\n    _this.active = true;\n    _this.index = scheduler.index = index;\n    return _this;\n  }\n\n  VirtualAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return _super.prototype.schedule.call(this, state, delay);\n      }\n\n      this.active = false;\n      var action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      return Subscription.EMPTY;\n    }\n  };\n\n  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    this.delay = scheduler.frame + delay;\n    var actions = scheduler.actions;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return 1;\n  };\n\n  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return undefined;\n  };\n\n  VirtualAction.prototype._execute = function (state, delay) {\n    if (this.active === true) {\n      return _super.prototype._execute.call(this, state, delay);\n    }\n  };\n\n  VirtualAction.sortActions = function (a, b) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n\n  return VirtualAction;\n}(AsyncAction);\n\nexport { VirtualAction };","map":{"version":3,"mappings":"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","names":["AsyncAction","Subscription","AsyncScheduler","__extends","schedulerActionCtor","maxFrames","VirtualAction","_super","frame","_this","VirtualTimeScheduler","actions","error","action","delay","shift","execute","state","unsubscribe","scheduler","work","index","Number","isFinite","id","schedule","call","active","add","EMPTY","push","sort","sortActions","undefined","_execute","a","b"],"sourceRoot":"","sources":["../../../../src/internal/scheduler/VirtualTimeScheduler.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}