{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \" this is dashboard \", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task\n    }, _toDisplayString(task.content), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputTask = $event),\n    class: \"border border-gray-200\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.inputTask]]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.createTask()),\n    ref: \"createTaskBtnRef\",\n    class: \"border border-black bg-slate-200\"\n  }, \"Create Task\", 512\n  /* NEED_PATCH */\n  )])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACIA,oBAEM,KAFN,EAEM,IAFN,EAAK,qBAAL,EAEA;AAAA;AAFA;;;EAOKC,KAAK,EAAC;;;6DAPXC,YAGAF,oBAEK,IAFL,EAEK,IAFL,EAEK,oBADDG,oBAA6DC,SAA7D,EAA6D,IAA7D,EAA6DC,YAA1CC,YAA0C,EAAlDC,IAAa,IAAT;yBAAfJ,oBAA6D,IAA7D,EAA6D;MAAlCK,GAAG,EAAED;IAA6B,CAA7D,EAAoCE,iBAAKF,IAAI,CAACG,OAAV,CAApC,EAAqD;IAAA;IAArD;GAA6D,CAA7D;;EAAA,CACC,EAFL,mBAGAV,oBAAsE,OAAtE,EAAsE;IAA/DW,IAAI,EAAC,MAA0D;+DAA1CL,mBAASM,OAAiC;IAA/BX,KAAK,EAAC;EAAyB,CAAtE;;EAAA,kBAA4BK,qBAC5BN,oBAEM,KAFN,cAEM,CADFA,oBAAkH,QAAlH,EAAkH;IAAzGa,OAAK,sCAAEP,mBAAF,CAAoG;IAApFQ,GAAG,EAAC,kBAAgF;IAA7Db,KAAK,EAAC;EAAuD,CAAlH,EAA8F,aAA9F,EAAyG;EAAA;EAAzG,CACE,CAFN","names":["_createElementVNode","class","_hoisted_1","_createElementBlock","_Fragment","_renderList","$setup","task","key","_toDisplayString","content","type","$event","onClick","ref"],"sourceRoot":"","sources":["E:\\LapTrinh\\NestJS\\social-media-clone\\frontend\\src\\components\\DashBoard.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        this is dashboard\r\n    </div>\r\n    <ul>\r\n        <li v-for=\"task in tasks\" :key=\"task\">{{ task.content }}</li>\r\n    </ul>\r\n    <input type=\"text\" v-model=\"inputTask\" class=\"border border-gray-200\">\r\n    <div class=\"\">\r\n        <button @click=\"createTask()\" ref=\"createTaskBtnRef\" class=\"border border-black bg-slate-200\">Create Task</button>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted  } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\n// const state = reactive({todos: []});\r\nconst inputTask = ref('');\r\nconst tasks = ref(null);\r\nconst createTaskBtnRef = ref(null);\r\n\r\nconst createTask = async() => {\r\n\r\n    createTaskBtnRef.value.disabled = true;\r\n    createTaskBtnRef.innerText = 'Loading...'\r\n    const data = {content: inputTask.value};\r\n    inputTask.value = '';\r\n    const response = await axios\r\n    .post('http://localhost:3000/tasks', data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n    getTasks();\r\n}\r\n\r\nconst getTasks = async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n}\r\n\r\nonMounted( async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n})\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}