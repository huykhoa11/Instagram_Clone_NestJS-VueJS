{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { Observable } from '../Observable';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { observeOn } from '../operators/observeOn';\nimport { AsyncSubject } from '../AsyncSubject';\nexport function bindCallbackInternals(isNodeStyle, callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        return bindCallbackInternals(isNodeStyle, callbackFunc, scheduler).apply(this, args).pipe(mapOneOrManyArgs(resultSelector));\n      };\n    }\n  }\n\n  if (scheduler) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return bindCallbackInternals(isNodeStyle, callbackFunc).apply(this, args).pipe(subscribeOn(scheduler), observeOn(scheduler));\n    };\n  }\n\n  return function () {\n    var _this = this;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var subject = new AsyncSubject();\n    var uninitialized = true;\n    return new Observable(function (subscriber) {\n      var subs = subject.subscribe(subscriber);\n\n      if (uninitialized) {\n        uninitialized = false;\n        var isAsync_1 = false;\n        var isComplete_1 = false;\n        callbackFunc.apply(_this, __spreadArray(__spreadArray([], __read(args)), [function () {\n          var results = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            results[_i] = arguments[_i];\n          }\n\n          if (isNodeStyle) {\n            var err = results.shift();\n\n            if (err != null) {\n              subject.error(err);\n              return;\n            }\n          }\n\n          subject.next(1 < results.length ? results : results[0]);\n          isComplete_1 = true;\n\n          if (isAsync_1) {\n            subject.complete();\n          }\n        }]));\n\n        if (isComplete_1) {\n          subject.complete();\n        }\n\n        isAsync_1 = true;\n      }\n\n      return subs;\n    });\n  };\n}","map":{"version":3,"mappings":";AACA,SAASA,WAAT,QAA4B,qBAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAM,SAAUC,qBAAV,CACJC,WADI,EAEJC,YAFI,EAGJC,cAHI,EAIJC,SAJI,EAIqB;EAEzB,IAAID,cAAJ,EAAoB;IAClB,IAAIT,WAAW,CAACS,cAAD,CAAf,EAAiC;MAC/BC,SAAS,GAAGD,cAAZ;IACD,CAFD,MAEO;MAEL,OAAO;QAAqB;;aAAA,yCAAc;UAAdE;;;QAC1B,OAAQL,qBAAqB,CAACC,WAAD,EAAcC,YAAd,EAA4BE,SAA5B,CAArB,CACLE,KADK,CACC,IADD,EACOD,IADP,EAELE,IAFK,CAEAV,gBAAgB,CAACM,cAAD,CAFhB,CAAR;MAGD,CAJD;IAKD;EACF;;EAID,IAAIC,SAAJ,EAAe;IACb,OAAO;MAAqB;;WAAA,yCAAc;QAAdC;;;MAC1B,OAAQL,qBAAqB,CAACC,WAAD,EAAcC,YAAd,CAArB,CACLI,KADK,CACC,IADD,EACOD,IADP,EAELE,IAFK,CAEAX,WAAW,CAACQ,SAAD,CAFX,EAEyBN,SAAS,CAACM,SAAD,CAFlC,CAAR;IAGD,CAJD;EAKD;;EAED,OAAO;IAAA;;IAAqB;;SAAA,yCAAc;MAAdC;;;IAG1B,IAAMG,OAAO,GAAG,IAAIT,YAAJ,EAAhB;IAGA,IAAIU,aAAa,GAAG,IAApB;IACA,OAAO,IAAId,UAAJ,CAAe,UAACe,UAAD,EAAW;MAE/B,IAAMC,IAAI,GAAGH,OAAO,CAACI,SAAR,CAAkBF,UAAlB,CAAb;;MAEA,IAAID,aAAJ,EAAmB;QACjBA,aAAa,GAAG,KAAhB;QAMA,IAAII,SAAO,GAAG,KAAd;QAGA,IAAIC,YAAU,GAAG,KAAjB;QAKAZ,YAAY,CAACI,KAAb,CAEES,KAFF,EAEMC,uCAGCX,IAHD,IAGK,CAEP;UAAC;;eAAA,yCAAiB;YAAjBY;;;UACC,IAAIhB,WAAJ,EAAiB;YAIf,IAAMiB,GAAG,GAAGD,OAAO,CAACE,KAAR,EAAZ;;YACA,IAAID,GAAG,IAAI,IAAX,EAAiB;cACfV,OAAO,CAACY,KAAR,CAAcF,GAAd;cAGA;YACD;UACF;;UAKDV,OAAO,CAACa,IAAR,CAAa,IAAIJ,OAAO,CAACK,MAAZ,GAAqBL,OAArB,GAA+BA,OAAO,CAAC,CAAD,CAAnD;UAGAH,YAAU,GAAG,IAAb;;UAMA,IAAID,SAAJ,EAAa;YACXL,OAAO,CAACe,QAAR;UACD;QACF,CA/BM,CAHL,CAFN;;QA0CA,IAAIT,YAAJ,EAAgB;UACdN,OAAO,CAACe,QAAR;QACD;;QAIDV,SAAO,GAAG,IAAV;MACD;;MAGD,OAAOF,IAAP;IACD,CAxEM,CAAP;EAyED,CAhFD;AAiFD","names":["isScheduler","Observable","subscribeOn","mapOneOrManyArgs","observeOn","AsyncSubject","bindCallbackInternals","isNodeStyle","callbackFunc","resultSelector","scheduler","args","apply","pipe","subject","uninitialized","subscriber","subs","subscribe","isAsync_1","isComplete_1","_this","__spreadArray","results","err","shift","error","next","length","complete"],"sourceRoot":"","sources":["../../../../src/internal/observable/bindCallbackInternals.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}