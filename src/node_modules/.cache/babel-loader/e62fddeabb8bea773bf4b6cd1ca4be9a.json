{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport { displayToast } from './../composables/DisplayToast.js';\nimport { addLike, deleteLike, spin } from './../composables/Fetch.js'; // import splide\n\nimport { Splide, SplideSlide } from '@splidejs/vue-splide';\nimport '@splidejs/vue-splide/css';\nexport default {\n  __name: 'Task',\n  props: {\n    passData: Object\n  },\n  emits: ['sendFromTaskVue'],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const router = useRouter();\n    const users = ref([]);\n    const currentUser = ref({});\n    const userId = ref(null);\n    const currentUserId = ref(null);\n    const slideIndex = ref(0);\n\n    const likeClick = async task => {\n      const isLiked = props.passData.task.likes.find(ele => ele.user.id === currentUserId.value) !== undefined;\n\n      if (isLiked === false) {\n        const btnLikeElement = document.getElementById('btnLike');\n        btnLikeElement.disabled = true;\n        btnLikeElement.innerHTML = spin();\n        btnLikeElement.classList.remove('hover:bg-slate-200', 'hover:cursor-pointer');\n        const newLike = await addLike(task.id);\n        btnLikeElement.disabled = false;\n        btnLikeElement.innerHTML = `<i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like`;\n        btnLikeElement.classList.add('hover:bg-slate-200', 'hover:cursor-pointer');\n        props.passData.task.likes.unshift(newLike);\n        emit('sendFromTaskVue', props.passData.task); // props.passData.task.user.likes.push({id: newLike.id, status: newLike.status});  //for changing color of like button\n      } else {\n        deleteLike(task.id);\n        const likeNeedRemove = props.passData.task.likes.find(ele => ele.user.id === currentUserId.value);\n        const indexOfLikeNeedRemove = task.likes.indexOf(likeNeedRemove);\n        props.passData.task.likes.splice(indexOfLikeNeedRemove, 1);\n        emit('sendFromTaskVue', props.passData.task); // props.passData.task.user.likes.pop(); //for changing color of like button\n      }\n    };\n\n    const addComment = async task => {\n      try {\n        const inputCommentElement = document.getElementById(`inputComment${task.id}`);\n        const buttonCommentElement = document.getElementById(`buttonComment${task.id}`);\n        console.log(inputCommentElement.value);\n        const data = {\n          content: inputCommentElement.value\n        };\n        const newCmt = addComment(task.id, data);\n        buttonCommentElement.disabled = true;\n        buttonCommentElement.classList.toggle('hover:bg-slate-100');\n        buttonCommentElement.innerText = 'Loading...';\n        inputCommentElement.value = '';\n        buttonCommentElement.disabled = false;\n        buttonCommentElement.innerText = 'Send';\n        buttonCommentElement.classList.toggle('hover:bg-slate-100');\n        props.passData.task.comments.unshift(newCmt);\n      } catch (error) {\n        displayToast('Comment must has its content!', dangerColor);\n      }\n    };\n\n    onMounted(async () => {\n      console.log(props.passData);\n      userId.value = parseInt(router.currentRoute.value.params.id);\n      currentUserId.value = parseInt(router.currentRoute.value.query.currentUserId);\n      console.log(userId.value, currentUserId.value);\n      const prev = document.getElementById('prev');\n      const next = document.getElementById('next');\n      const images = document.querySelectorAll('.image');\n      const dots = document.querySelectorAll('.dot');\n\n      (() => {\n        for (let i = 0; i < images.length; i++) {\n          images[i].style.display = \"none\";\n        }\n\n        images[0].style.display = 'block';\n\n        if (dots.length > 0) {\n          dots[0].classList.add('bg-opacity-100');\n        }\n      })();\n\n      const resetSlideIndex = () => {\n        if (slideIndex.value < 0) {\n          slideIndex.value = images.length - 1;\n        } else if (slideIndex.value > images.length - 1) {\n          slideIndex.value = 0;\n        }\n      };\n\n      const showSlide = () => {\n        for (let i = 0; i < images.length; i++) {\n          images[i].style.display = \"none\";\n        }\n\n        images[slideIndex.value].style.display = \"block\";\n\n        for (let i = 0; i < dots.length; i++) {\n          dots[i].classList.remove(\"bg-opacity-100\");\n        }\n\n        dots[slideIndex.value].classList.add(\"bg-opacity-100\");\n      };\n\n      if (prev) {\n        prev.addEventListener('click', () => {\n          slideIndex.value -= 1;\n          resetSlideIndex();\n          showSlide();\n        });\n      }\n\n      if (next) {\n        next.addEventListener('click', () => {\n          slideIndex.value += 1;\n          resetSlideIndex();\n          showSlide();\n        });\n      }\n    });\n    const __returned__ = {\n      router,\n      users,\n      currentUser,\n      userId,\n      currentUserId,\n      slideIndex,\n      props,\n      emit,\n      likeClick,\n      addComment,\n      ref,\n      onMounted,\n      useRouter,\n      axios,\n      displayToast,\n      addLike,\n      deleteLike,\n      spin,\n      Splide,\n      SplideSlide\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AA4FA,SAASA,GAAT,EAAcC,SAAd,QAA+B,KAA/B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,IAA9B,QAA0C,2BAA1C,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,sBAApC;AACA,OAAO,0BAAP;;;;;;;;;;;;;;IAEA,MAAMC,MAAM,GAAGR,SAAS,EAAxB;IAEA,MAAMS,KAAK,GAAGX,GAAG,CAAC,EAAD,CAAjB;IACA,MAAMY,WAAW,GAAGZ,GAAG,CAAC,EAAD,CAAvB;IAEA,MAAMa,MAAM,GAAGb,GAAG,CAAC,IAAD,CAAlB;IACA,MAAMc,aAAa,GAAGd,GAAG,CAAC,IAAD,CAAzB;IAEA,MAAMe,UAAU,GAAGf,GAAG,CAAC,CAAD,CAAtB;;IAOA,MAAMgB,SAAS,GAAG,MAAMC,IAAN,IAAe;MAE7B,MAAMC,OAAO,GAAGC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,KAApB,CAA0BC,IAA1B,CAA+BC,GAAG,IAAEA,GAAG,CAACC,IAAJ,CAASC,EAAT,KAAcX,aAAa,CAACY,KAAhE,MAA2EC,SAA3F;;MACA,IAAGT,OAAO,KAAK,KAAf,EAAsB;QAClB,MAAMU,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAvB;QACAF,cAAc,CAACG,QAAf,GAA0B,IAA1B;QACAH,cAAc,CAACI,SAAf,GAA2BzB,IAAI,EAA/B;QACAqB,cAAc,CAACK,SAAf,CAAyBC,MAAzB,CAAgC,oBAAhC,EAAsD,sBAAtD;QAEA,MAAMC,OAAO,GAAG,MAAM9B,OAAO,CAACY,IAAI,CAACQ,EAAN,CAA7B;QAEAG,cAAc,CAACG,QAAf,GAA0B,KAA1B;QACAH,cAAc,CAACI,SAAf,GAA4B,yDAA5B;QACAJ,cAAc,CAACK,SAAf,CAAyBG,GAAzB,CAA6B,oBAA7B,EAAmD,sBAAnD;QAEAjB,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,KAApB,CAA0BgB,OAA1B,CAAkCF,OAAlC;QACAG,IAAI,CAAC,iBAAD,EAAoBnB,KAAK,CAACC,QAAN,CAAeH,IAAnC,CAAJ,CAbkB,CAelB;MACH,CAhBD,MAiBK;QAEDX,UAAU,CAACW,IAAI,CAACQ,EAAN,CAAV;QACA,MAAMc,cAAc,GAAGpB,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,KAApB,CAA0BC,IAA1B,CAA+BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,EAAT,KAAgBX,aAAa,CAACY,KAApE,CAAvB;QACA,MAAMc,qBAAqB,GAAGvB,IAAI,CAACI,KAAL,CAAWoB,OAAX,CAAmBF,cAAnB,CAA9B;QACApB,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,KAApB,CAA0BqB,MAA1B,CAAiCF,qBAAjC,EAAwD,CAAxD;QACAF,IAAI,CAAC,iBAAD,EAAoBnB,KAAK,CAACC,QAAN,CAAeH,IAAnC,CAAJ,CANC,CAOD;MACH;IACJ,CA7BD;;IAgCA,MAAM0B,UAAU,GAAG,MAAM1B,IAAN,IAAe;MAC9B,IAAI;QACA,MAAM2B,mBAAmB,GAAIf,QAAQ,CAACC,cAAT,CAAyB,eAAcb,IAAI,CAACQ,EAAG,EAA/C,CAA7B;QACA,MAAMoB,oBAAoB,GAAGhB,QAAQ,CAACC,cAAT,CAAyB,gBAAeb,IAAI,CAACQ,EAAG,EAAhD,CAA7B;QACAqB,OAAO,CAACC,GAAR,CAAYH,mBAAmB,CAAClB,KAAhC;QACA,MAAMsB,IAAI,GAAG;UAACC,OAAO,EAAEL,mBAAmB,CAAClB;QAA9B,CAAb;QAEA,MAAMwB,MAAM,GAAGP,UAAU,CAAC1B,IAAI,CAACQ,EAAN,EAAUuB,IAAV,CAAzB;QAEAH,oBAAoB,CAACd,QAArB,GAAgC,IAAhC;QACAc,oBAAoB,CAACZ,SAArB,CAA+BkB,MAA/B,CAAsC,oBAAtC;QACAN,oBAAoB,CAACO,SAArB,GAAiC,YAAjC;QAEAR,mBAAmB,CAAClB,KAApB,GAA4B,EAA5B;QACAmB,oBAAoB,CAACd,QAArB,GAAgC,KAAhC;QACAc,oBAAoB,CAACO,SAArB,GAAiC,MAAjC;QACAP,oBAAoB,CAACZ,SAArB,CAA+BkB,MAA/B,CAAsC,oBAAtC;QACAhC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBoC,QAApB,CAA6BhB,OAA7B,CAAqCa,MAArC;MACH,CAjBD,CAiBE,OAAOI,KAAP,EAAc;QACZlD,YAAY,CAAC,+BAAD,EAAkCmD,WAAlC,CAAZ;MACH;IACJ,CArBD;;IAuBAtD,SAAS,CAAE,YAAW;MAClB6C,OAAO,CAACC,GAAR,CAAY5B,KAAK,CAACC,QAAlB;MAEAP,MAAM,CAACa,KAAP,GAAe8B,QAAQ,CAAC9C,MAAM,CAAC+C,YAAP,CAAoB/B,KAApB,CAA0BgC,MAA1B,CAAiCjC,EAAlC,CAAvB;MACAX,aAAa,CAACY,KAAd,GAAsB8B,QAAQ,CAAC9C,MAAM,CAAC+C,YAAP,CAAoB/B,KAApB,CAA0BiC,KAA1B,CAAgC7C,aAAjC,CAA9B;MACAgC,OAAO,CAACC,GAAR,CAAYlC,MAAM,CAACa,KAAnB,EAA0BZ,aAAa,CAACY,KAAxC;MAEA,MAAMkC,IAAI,GAAG/B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;MACA,MAAM+B,IAAI,GAAGhC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;MACA,MAAMgC,MAAM,GAAGjC,QAAQ,CAACkC,gBAAT,CAA0B,QAA1B,CAAf;MACA,MAAMC,IAAI,GAAGnC,QAAQ,CAACkC,gBAAT,CAA0B,MAA1B,CAAb;;MAEA,CAAC,MAAM;QACH,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,MAAM,CAACI,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;UAC/BH,MAAM,CAACG,CAAD,CAAN,CAAUE,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;QACH;;QACDN,MAAM,CAAC,CAAD,CAAN,CAAUK,KAAV,CAAgBC,OAAhB,GAA0B,OAA1B;;QACA,IAAGJ,IAAI,CAACE,MAAL,GAAc,CAAjB,EAAoB;UAChBF,IAAI,CAAC,CAAD,CAAJ,CAAQ/B,SAAR,CAAkBG,GAAlB,CAAsB,gBAAtB;QACH;MACJ,CARD;;MAUA,MAAMiC,eAAe,GAAG,MAAM;QAC1B,IAAGtD,UAAU,CAACW,KAAX,GAAmB,CAAtB,EAAyB;UACrBX,UAAU,CAACW,KAAX,GAAmBoC,MAAM,CAACI,MAAP,GAAe,CAAlC;QACH,CAFD,MAGK,IAAGnD,UAAU,CAACW,KAAX,GAAmBoC,MAAM,CAACI,MAAP,GAAc,CAApC,EAAuC;UACxCnD,UAAU,CAACW,KAAX,GAAmB,CAAnB;QACH;MACJ,CAPD;;MASA,MAAM4C,SAAS,GAAG,MAAM;QACpB,KAAI,IAAIL,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,MAAM,CAACI,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;UAC/BH,MAAM,CAACG,CAAD,CAAN,CAAUE,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;QACH;;QACDN,MAAM,CAAC/C,UAAU,CAACW,KAAZ,CAAN,CAAyByC,KAAzB,CAA+BC,OAA/B,GAAyC,OAAzC;;QAEA,KAAI,IAAIH,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,IAAI,CAACE,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;UAC7BD,IAAI,CAACC,CAAD,CAAJ,CAAQhC,SAAR,CAAkBC,MAAlB,CAAyB,gBAAzB;QACH;;QACD8B,IAAI,CAACjD,UAAU,CAACW,KAAZ,CAAJ,CAAuBO,SAAvB,CAAiCG,GAAjC,CAAqC,gBAArC;MACH,CAVD;;MAYA,IAAGwB,IAAH,EAAS;QACLA,IAAI,CAACW,gBAAL,CAAsB,OAAtB,EAA+B,MAAI;UAC/BxD,UAAU,CAACW,KAAX,IAAoB,CAApB;UACA2C,eAAe;UACfC,SAAS;QACZ,CAJD;MAKH;;MAED,IAAGT,IAAH,EAAS;QACLA,IAAI,CAACU,gBAAL,CAAsB,OAAtB,EAA+B,MAAI;UAC/BxD,UAAU,CAACW,KAAX,IAAoB,CAApB;UACA2C,eAAe;UAEfC,SAAS;QACZ,CALD;MAMH;IACJ,CA3DQ,CAAT","names":["ref","onMounted","useRouter","axios","displayToast","addLike","deleteLike","spin","Splide","SplideSlide","router","users","currentUser","userId","currentUserId","slideIndex","likeClick","task","isLiked","props","passData","likes","find","ele","user","id","value","undefined","btnLikeElement","document","getElementById","disabled","innerHTML","classList","remove","newLike","add","unshift","emit","likeNeedRemove","indexOfLikeNeedRemove","indexOf","splice","addComment","inputCommentElement","buttonCommentElement","console","log","data","content","newCmt","toggle","innerText","comments","error","dangerColor","parseInt","currentRoute","params","query","prev","next","images","querySelectorAll","dots","i","length","style","display","resetSlideIndex","showSlide","addEventListener"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/Task.vue"],"sourcesContent":["<template>\r\n    <div class=\"fixed z-50 left-0 right-0 top-0 bottom-0 m-auto w-2/3 h-5/6 bg-white border border-gray-400 flex\">\r\n        <!-- splide images -->\r\n        <!-- <Splide :options=\"{ rewind: true }\" aria-label=\"Vue Splide Example\" class=\" w-fulll h-full\">\r\n                <SplideSlide v-for=\"image in Object.assign({}, passData.task.images)\" :key=\"image.id\" class=\" w-full h-full border-2 border-red-500\">\r\n                    <img :src=\"require(`./../assets/${image.name}`)\" alt=\"Sample 1\" class=\" w-full h-full object-cover\">\r\n                </SplideSlide>\r\n        </Splide> -->\r\n\r\n         <div class=\" relative w-3/5 h-full bg-yellow-400\">\r\n            <div v-for=\"image in Object.assign({}, passData.task.images)\" :key=\"image.id\" class=\" image w-full h-full bg-blue-400\">\r\n                <img :src=\"require(`./../assets/${image.name}`)\" alt=\"Sample 1\" class=\" w-full h-full\">\r\n            </div>\r\n\r\n            <div v-if=\"passData.task.images.length > 1\">\r\n\r\n                <div id=\"prev\" class=\" absolute top-1/2 left-2 text-black font-bold w-7 h-7 flex items-center justify-center \r\n                                        -translate-y-1/2 cursor-pointer rounded-full bg-white bg-opacity-50\">\r\n                    <i class=\"fa-solid fa-angle-left\"></i>\r\n                </div>\r\n                <div id=\"next\" class=\" absolute top-1/2 right-2 text-black font-bold w-7 h-7 flex items-center justify-center \r\n                                        -translate-y-1/2 cursor-pointer rounded-full bg-white bg-opacity-50\">\r\n                    <i class=\"fa-solid fa-angle-right\"></i>\r\n                </div>\r\n\r\n                <div class=\" absolute flex bottom-8 left-1/2 -translate-x-1/2 space-x-2\">\r\n                    <div v-for=\"image in Object.assign({}, passData.task.images)\" :key=\"image.id\" class=\" \">\r\n                        <div class=\"dot h-2 w-2 rounded-full bg-white bg-opacity-50\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div> \r\n\r\n\r\n        <div class=\" w-2/5 relative\">\r\n            <!-- {{ passData.task }} -->\r\n\r\n            <div class=\" flex items-center h-16 border border-b-gray-100\">\r\n                <div class=\" flex items-center space-x-3 ml-3\">\r\n                    <img :src=\"require('./../assets/' + passData.task.user.avatar)\" alt=\"\" class=\" w-8 h-8 rounded-full border border-gray-50\">\r\n                    <p class=\" font-semibold\">\r\n                        <router-link :to=\"'/user/' +passData.task.user.id+ '?currentUserId=' +currentUserId\" \r\n                                    class=\" hover:underline hover:decoration-solid\">\r\n                            {{ passData.task.user.username }}\r\n                        </router-link>\r\n                    </p>\r\n                    <button v-if=\"userId !== currentUserId\" class=\"text-blue-400 font-semibold\">Follow</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\" mt-4 h-4/5 border border-green-400\">\r\n                <div class=\" flex items-center space-x-3 ml-3 border border-red-400\">\r\n                    <img :src=\"require('./../assets/' + passData.task.user.avatar)\" alt=\"\" class=\" w-8 h-8 rounded-full border border-gray-50\">\r\n                    <p class=\"\">\r\n                        <router-link :to=\"'/user/' +passData.task.user.id+ '?currentUserId=' +currentUserId\" \r\n                                    class=\" font-semibold hover:underline hover:decoration-solid\">\r\n                            {{ passData.task.user.username }}\r\n                        </router-link>\r\n                        {{ passData.task.content }}\r\n                    </p>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n\r\n            <div class=\" relative flex justify-between px-3\">\r\n                <div class=\"\">\r\n                    <button id=\"btnLike\"\r\n                        :class=\"[passData.task.likes.find(ele=>ele.user.id===currentUserId) === undefined ?  'text-gray-400' : 'text-pink-400 bg-pink-100'  ]\" \r\n                            @click=\"likeClick(passData.task)\" \r\n                            class=\" px-2 text-sm  hover:bg-slate-200 hover:cursor-pointer\">\r\n                            <i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like\r\n                    </button>\r\n                    <span class=\" flex justify-center items-center text-white bg-pink-500\r\n                                        h-4 w-4 text-[13px] rounded-full absolute left-16 -top-1\">{{ passData.task.likes.length }}</span>\r\n                </div>\r\n                <p class=\" text-xs text-gray-400\">{{ passData.task.updatedAt.split('T')[0] }}</p>\r\n            </div>\r\n\r\n            <div class=\" flex absolute bottom-0 w-full\">\r\n                <input type=\"text\" :id=\"'inputComment' + passData.task.id\"  placeholder=\"leave a comment\" maxlength=\"50\"\r\n                        class=\" h-9 outline-none flex-1 pl-3 border border-t-gray-200\">\r\n                <button @click=\"addComment(passData.task)\" :id=\"'buttonComment' + passData.task.id\"\r\n                        class=\" px-2 border border-gray-200 bg-pink-500 hover:bg-pink-400 text-gray-100\">Send</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from \"vue-router\"\r\nimport axios from \"axios\";\r\nimport { displayToast } from './../composables/DisplayToast.js';\r\nimport { addLike, deleteLike, spin } from './../composables/Fetch.js';\r\n\r\n// import splide\r\nimport { Splide, SplideSlide } from '@splidejs/vue-splide';\r\nimport '@splidejs/vue-splide/css';\r\n\r\nconst router = useRouter();\r\n\r\nconst users = ref([]);\r\nconst currentUser = ref({});\r\n\r\nconst userId = ref(null);\r\nconst currentUserId = ref(null);\r\n\r\nconst slideIndex = ref(0);\r\n\r\nconst props = defineProps({\r\n    passData: Object\r\n});\r\nconst emit = defineEmits(['sendFromTaskVue']);\r\n\r\nconst likeClick = async(task) => {\r\n\r\n    const isLiked = props.passData.task.likes.find(ele=>ele.user.id===currentUserId.value) !== undefined;\r\n    if(isLiked === false) {\r\n        const btnLikeElement = document.getElementById('btnLike');\r\n        btnLikeElement.disabled = true;\r\n        btnLikeElement.innerHTML = spin();\r\n        btnLikeElement.classList.remove('hover:bg-slate-200', 'hover:cursor-pointer');\r\n        \r\n        const newLike = await addLike(task.id);\r\n\r\n        btnLikeElement.disabled = false;\r\n        btnLikeElement.innerHTML = `<i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like`;\r\n        btnLikeElement.classList.add('hover:bg-slate-200', 'hover:cursor-pointer');\r\n\r\n        props.passData.task.likes.unshift(newLike);\r\n        emit('sendFromTaskVue', props.passData.task);\r\n\r\n        // props.passData.task.user.likes.push({id: newLike.id, status: newLike.status});  //for changing color of like button\r\n    }\r\n    else {\r\n\r\n        deleteLike(task.id);\r\n        const likeNeedRemove = props.passData.task.likes.find(ele => ele.user.id === currentUserId.value);\r\n        const indexOfLikeNeedRemove = task.likes.indexOf(likeNeedRemove);\r\n        props.passData.task.likes.splice(indexOfLikeNeedRemove, 1);\r\n        emit('sendFromTaskVue', props.passData.task);\r\n        // props.passData.task.user.likes.pop(); //for changing color of like button\r\n    }\r\n}\r\n\r\n\r\nconst addComment = async(task) => {\r\n    try {\r\n        const inputCommentElement  = document.getElementById(`inputComment${task.id}`);\r\n        const buttonCommentElement = document.getElementById(`buttonComment${task.id}`);\r\n        console.log(inputCommentElement.value);\r\n        const data = {content: inputCommentElement.value};\r\n        \r\n        const newCmt = addComment(task.id, data);\r\n        \r\n        buttonCommentElement.disabled = true;\r\n        buttonCommentElement.classList.toggle('hover:bg-slate-100');\r\n        buttonCommentElement.innerText = 'Loading...';\r\n    \r\n        inputCommentElement.value = '';\r\n        buttonCommentElement.disabled = false;\r\n        buttonCommentElement.innerText = 'Send';\r\n        buttonCommentElement.classList.toggle('hover:bg-slate-100');\r\n        props.passData.task.comments.unshift(newCmt)\r\n    } catch (error) {\r\n        displayToast('Comment must has its content!', dangerColor);\r\n    }\r\n}\r\n\r\nonMounted( async() => {\r\n    console.log(props.passData);\r\n\r\n    userId.value = parseInt(router.currentRoute.value.params.id);\r\n    currentUserId.value = parseInt(router.currentRoute.value.query.currentUserId);\r\n    console.log(userId.value, currentUserId.value);\r\n\r\n    const prev = document.getElementById('prev');\r\n    const next = document.getElementById('next');\r\n    const images = document.querySelectorAll('.image');\r\n    const dots = document.querySelectorAll('.dot');\r\n\r\n    (() => {\r\n        for(let i=0; i<images.length; i++) {\r\n            images[i].style.display = \"none\";\r\n        }\r\n        images[0].style.display = 'block';\r\n        if(dots.length > 0) {\r\n            dots[0].classList.add('bg-opacity-100');\r\n        }\r\n    })();\r\n\r\n    const resetSlideIndex = () => {\r\n        if(slideIndex.value < 0) {\r\n            slideIndex.value = images.length -1;\r\n        }\r\n        else if(slideIndex.value > images.length-1) {\r\n            slideIndex.value = 0;\r\n        }\r\n    }\r\n\r\n    const showSlide = () => {\r\n        for(let i=0; i<images.length; i++) {\r\n            images[i].style.display = \"none\";\r\n        }\r\n        images[slideIndex.value].style.display = \"block\";\r\n\r\n        for(let i=0; i<dots.length; i++) {\r\n            dots[i].classList.remove(\"bg-opacity-100\");\r\n        }\r\n        dots[slideIndex.value].classList.add(\"bg-opacity-100\");\r\n    }\r\n    \r\n    if(prev) {\r\n        prev.addEventListener('click', ()=>{\r\n            slideIndex.value -= 1;\r\n            resetSlideIndex();\r\n            showSlide();\r\n        })\r\n    }\r\n\r\n    if(next) {\r\n        next.addEventListener('click', ()=>{\r\n            slideIndex.value += 1;\r\n            resetSlideIndex();\r\n\r\n            showSlide();\r\n        })\r\n    }\r\n})\r\n\r\n\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}