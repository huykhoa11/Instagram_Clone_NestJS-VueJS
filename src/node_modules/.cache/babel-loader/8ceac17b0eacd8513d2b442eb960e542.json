{"ast":null,"code":"import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n  return distinctUntilChanged(function (x, y) {\n    return compare ? compare(x[key], y[key]) : x[key] === y[key];\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,oBAAT,QAAqC,wBAArC;AAoEA,OAAM,SAAUC,uBAAV,CAAwDC,GAAxD,EAAgEC,OAAhE,EAAuG;EAC3G,OAAOH,oBAAoB,CAAC,UAACI,CAAD,EAAOC,CAAP,EAAW;IAAK,cAAO,GAAGF,OAAO,CAACC,CAAC,CAACF,GAAD,CAAF,EAASG,CAAC,CAACH,GAAD,CAAV,CAAV,GAA6BE,CAAC,CAACF,GAAD,CAAD,KAAWG,CAAC,CAACH,GAAD,CAAhD;EAAqD,CAAtE,CAA3B;AACD","names":["distinctUntilChanged","distinctUntilKeyChanged","key","compare","x","y"],"sourceRoot":"","sources":["../../../../src/internal/operators/distinctUntilKeyChanged.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}