{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-22009874\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"bg-gray-50 h-screen\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \" Loggin as \", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"\"\n};\nconst _hoisted_4 = {\n  class: \"relative mx-auto w-3/4 flex justify-around my-3\"\n};\nconst _hoisted_5 = {\n  class: \"space-y-10 w-2/4\"\n};\nconst _hoisted_6 = {\n  class: \"\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"flex\"\n};\nconst _hoisted_8 = [\"id\"];\nconst _hoisted_9 = {\n  key: 0,\n  class: \"\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = {\n  key: 1,\n  class: \"\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"px-2 flex justify-between items-center\"\n};\nconst _hoisted_14 = {\n  class: \"font-semibold\"\n};\nconst _hoisted_15 = {\n  class: \"fa-solid fa-ellipsis pl-3 mr-3 inline-block hover:cursor-pointer group relative\"\n};\nconst _hoisted_16 = {\n  class: \"absolute -right-6 top-4 w-20 border border-gray-200 bg-white hidden group-hover:inline-block\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = [\"onClick\"];\n\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_20 = {\n  class: \"overflow-auto\"\n};\nconst _hoisted_21 = {\n  class: \"text-sm\"\n};\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = {\n  class: \"relative\"\n};\nconst _hoisted_24 = [\"onClick\"];\n\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-sharp fa-solid fa-thumbs-up mr-2\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_26 = {\n  class: \"flex justify-center items-center bg-white border border-blue-500 h-4 w-4 text-[14px] rounded-full absolute left-14 -top-2\"\n};\nconst _hoisted_27 = {\n  class: \"flex\"\n};\nconst _hoisted_28 = [\"id\"];\nconst _hoisted_29 = [\"onClick\", \"id\"];\n\nconst _hoisted_30 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"bg-white border border-gray-400 w-1/4 h-96\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Suggest Friend\"), /*#__PURE__*/_createElementVNode(\"ul\")], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.inputTask = $event),\n    class: \"border border-gray-200\",\n    placeholder: \"create task\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $setup.inputTask]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $setup.createTask()),\n    ref: \"createTaskBtnRef\",\n    class: \"border border-black bg-slate-200\"\n  }, \"Create Task\", 512\n  /* NEED_PATCH */\n  )]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tasks, task => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: task,\n      class: \"border border-gray-400 rounded-md bg-white\"\n    }, [_createElementVNode(\"div\", _hoisted_6, [$setup.isEdit[task.id] === true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"input\", {\n      type: \"text\",\n      id: 'editInput' + task.id,\n      placeholder: \"edit task content\",\n      class: \"flex-1 pl-1\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_8), $setup.isEditting === false ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.editTask(task.id),\n      class: \"bg-green-500 text-white hover:bg-green-400 px-2\"\n    }, \"Save\", 8\n    /* PROPS */\n    , _hoisted_10), _createElementVNode(\"button\", {\n      onClick: $event => $setup.isEdit[task.id] = false,\n      class: \"bg-slate-200 text-gray-500 hover:bg-slate-300 px-2\"\n    }, \"Cancel\", 8\n    /* PROPS */\n    , _hoisted_11)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, \"Loading...\"))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"p\", _hoisted_14, _toDisplayString(task.content), 1\n    /* TEXT */\n    ), _createElementVNode(\"i\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", {\n      class: \"text-xs text-blue-400 hover:bg-sky-200 hover:cursor-pointer pl-1 py-1\",\n      onClick: $event => $setup.isEdit[task.id] = true\n    }, \"Edit\", 8\n    /* PROPS */\n    , _hoisted_17), _createElementVNode(\"div\", {\n      class: \"text-xs text-red-500 hover:bg-red-200 hover:cursor-pointer pl-1 py-1\",\n      onClick: $event => $setup.deleteTask(task.id)\n    }, \"Delete\", 8\n    /* PROPS */\n    , _hoisted_18)])])]))]), _hoisted_19, _createElementVNode(\"ul\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.comments[task.id], comment => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: comment,\n        class: \"flex justify-between items-center px-1 pt-1 group hover:bg-gray-50\"\n      }, [_createElementVNode(\"p\", _hoisted_21, _toDisplayString(comment.content), 1\n      /* TEXT */\n      ), _createElementVNode(\"i\", {\n        onClick: $event => $setup.deleteComment(comment.id, task.id),\n        class: \"fa-solid fa-x mr-4 text-xs hidden opacity-50 hover:cursor-pointer hover:opacity-80 hover:text-red-500 group-hover:inline-block\"\n      }, null, 8\n      /* PROPS */\n      , _hoisted_22)]);\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"button\", {\n      class: _normalizeClass([[$setup.likes[task.id] === '' ? 'text-gray-400' : 'text-blue-400 bg-sky-100'], \"px-2 text-sm block border border-gray-200 hover:bg-slate-200 hover:cursor-pointer\"]),\n      onClick: $event => $setup.likeClick(task.id)\n    }, [_hoisted_25, _createTextVNode(\"Like \")], 10\n    /* CLASS, PROPS */\n    , _hoisted_24), _createElementVNode(\"span\", _hoisted_26, _toDisplayString($setup.countLikes[task.id]), 1\n    /* TEXT */\n    )]), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"input\", {\n      type: \"text\",\n      id: 'inputComment' + task.id,\n      class: \"flex-1 pl-1 border border-gray-200\",\n      placeholder: \"add comment\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_28), _createElementVNode(\"button\", {\n      onClick: $event => $setup.addComment(task.id),\n      id: 'buttonComment' + task.id,\n      class: \"px-2 border border-gray-200 bg-indigo-500 hover:bg-indigo-400 text-gray-100\"\n    }, \"Comment\", 8\n    /* PROPS */\n    , _hoisted_29)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_30])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","type","$setup","$event","placeholder","onClick","ref","_Fragment","_renderList","task","key","id","_hoisted_10","_hoisted_11","_toDisplayString","content","_hoisted_17","_hoisted_18","_hoisted_19","comment","_hoisted_25","_hoisted_29","_hoisted_30"],"sourceRoot":"","sources":["E:\\LapTrinh\\NestJS\\social-media-clone\\frontend\\src\\components\\DashBoard.vue"],"sourcesContent":["<template>\r\n    <section class=\" bg-gray-50 h-screen\">\r\n\r\n        <h3>\r\n            Loggin as \r\n        </h3>\r\n\r\n        <div class=\"\">\r\n            <input type=\"text\" v-model=\"inputTask\" class=\"border border-gray-200\" placeholder=\"create task\"> \r\n            <button @click=\"createTask()\" ref=\"createTaskBtnRef\" class=\"border border-black bg-slate-200\">Create Task</button>\r\n        </div>\r\n\r\n        <div class=\" relative mx-auto w-3/4 flex justify-around my-3 \">\r\n            <ul class=\" space-y-10 w-2/4\">\r\n                <li v-for=\"task in tasks\" :key=\"task\" class=\" border border-gray-400 rounded-md bg-white\">\r\n                    <div class=\"\">\r\n                        <div class=\"flex\" v-if=\"isEdit[task.id] === true\">\r\n                            <input type=\"text\" :id=\"'editInput' + task.id\" placeholder=\"edit task content\" class=\" flex-1 pl-1\">\r\n                            <div class=\"\" v-if=\"isEditting === false\">\r\n                                <button @click=\"editTask(task.id)\" class=\" bg-green-500 text-white hover:bg-green-400 px-2\">Save</button>\r\n                                <button @click=\"isEdit[task.id] = false\" class=\" bg-slate-200 text-gray-500 hover:bg-slate-300 px-2\">Cancel</button>\r\n                            </div>\r\n                            <div class=\"\" v-else>Loading...</div>\r\n                        </div>\r\n                        <div v-else class=\" px-2 flex justify-between items-center\">\r\n                            <p class=\" font-semibold\">{{ task.content }}</p>\r\n                            <i class=\"fa-solid fa-ellipsis pl-3 mr-3 inline-block hover:cursor-pointer group relative\">\r\n                                <div class=\" absolute -right-6 top-4 w-20 border border-gray-200 bg-white hidden group-hover:inline-block\">\r\n                                    <div class=\" text-xs text-blue-400 hover:bg-sky-200 hover:cursor-pointer pl-1 py-1\" @click=\"isEdit[task.id] = true\">Edit</div>\r\n                                    <div class=\" text-xs text-red-500 hover:bg-red-200 hover:cursor-pointer pl-1 py-1\" @click=\"deleteTask(task.id)\">Delete</div>\r\n                                </div>\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <ul class=\" overflow-auto \">\r\n                        <li v-for=\"comment in comments[task.id]\" :key=\"comment\" class=\"flex justify-between items-center px-1 pt-1 group hover:bg-gray-50\">\r\n                            <p class=\"text-sm\">{{comment.content}}</p>\r\n                            <i @click=\"deleteComment(comment.id, task.id)\" class=\"fa-solid fa-x mr-4 text-xs hidden opacity-50 \r\n                                hover:cursor-pointer hover:opacity-80 hover:text-red-500 group-hover:inline-block\"></i>\r\n                        </li>\r\n                    </ul>\r\n                    <div class=\"relative\">\r\n                        <button :class=\"[likes[task.id] === '' ?  'text-gray-400' : 'text-blue-400 bg-sky-100'  ]\" \r\n                                @click=\"likeClick(task.id)\" \r\n                                class=\" px-2 text-sm block border border-gray-200 hover:bg-slate-200 hover:cursor-pointer\">\r\n                                <i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like\r\n                        </button>\r\n                        <span class=\" flex justify-center items-center bg-white border border-blue-500\r\n                                     h-4 w-4 text-[14px] rounded-full absolute left-14 -top-2\">{{ countLikes[task.id] }}</span>\r\n                    </div>\r\n                    <div class=\" flex\">\r\n                        <input type=\"text\" :id=\"'inputComment' + task.id\" class=\" flex-1 pl-1 border border-gray-200\" placeholder=\"add comment\">\r\n                        <button @click=\"addComment(task.id)\" :id=\"'buttonComment' + task.id\" \r\n                                class=\" px-2 border border-gray-200 bg-indigo-500 hover:bg-indigo-400 text-gray-100\">Comment</button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\" bg-white border border-gray-400 w-1/4 h-96\">\r\n                <p>Suggest Friend</p>\r\n                <ul></ul>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted  } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst state = reactive({tasks: [], comments: [], likes: []});\r\nconst tasks = ref([]);\r\nconst comments = ref([]);\r\nconst likes = ref([]);\r\nconst countLikes = ref([]);\r\nconst inputTask = ref('');\r\nconst isEdit = ref([]);\r\nconst isEditting = ref(false);\r\n\r\nconst commentsOfOneTask = ref(null);\r\nconst likeStatus = ref('text-gray-400')\r\n\r\nconst createTaskBtnRef = ref(null);\r\n// const addCmtBtnRef = ref(null);\r\n// const addCmtInputRef = ref(null);\r\n\r\n// Tasks\r\nconst createTask = async() => {\r\n\r\n    createTaskBtnRef.value.disabled = true;\r\n    createTaskBtnRef.value.innerText = 'Loading...'\r\n    const data = {content: inputTask.value};\r\n    \r\n    const response = await axios\r\n    .post('http://localhost:3000/tasks', data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n    inputTask.value = '';\r\n    tasks.value.push(response.data);\r\n    const responseDataId = response.data.id; \r\n    comments.value[responseDataId] = [];\r\n    likes.value[responseDataId] = '';\r\n    isEdit.value[responseDataId] = false;\r\n\r\n    console.log(comments.value);\r\n    console.log(likes.value);\r\n    // getTasks();\r\n    createTaskBtnRef.value.disabled = false;\r\n    createTaskBtnRef.value.innerText = 'Create Task';\r\n}\r\n\r\nconst getTasks = async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n    // state.tasks = response.data;\r\n}\r\n\r\nconst deleteTask = async (taskId) => {\r\n    await axios.delete(`http://localhost:3000/tasks/${taskId}`, {withCredentials: true});\r\n    tasks.value = tasks.value.filter(item => item.id !== taskId);\r\n    console.log(tasks.value);\r\n}\r\n\r\nconst editTask = async(taskId) => {\r\n    isEditting.value = true;\r\n    const editInputElement = document.getElementById(`editInput${taskId}`);\r\n    const data = {content: editInputElement.value}\r\n    await axios.patch(`http://localhost:3000/tasks/${taskId}`, data ,{withCredentials: true});\r\n    const task = tasks.value.find(element => element.id === taskId);\r\n    task.content = editInputElement.value;\r\n    isEditting.value = false;\r\n    isEdit.value[taskId] = false;\r\n    editInputElement.value = '';\r\n}\r\n\r\n\r\n// Comments\r\nconst addComment = async(taskId) => {\r\n\r\n    const inputCommentElement  = document.getElementById(`inputComment${taskId}`);\r\n    const buttonCommentElement = document.getElementById(`buttonComment${taskId}`);\r\n    console.log(inputCommentElement.value);\r\n    buttonCommentElement.disabled = true;\r\n    buttonCommentElement.classList.toggle('hover:bg-slate-100');\r\n    buttonCommentElement.innerText = 'Loading...';\r\n\r\n    const data = {content: inputCommentElement.value};\r\n    \r\n    const response = await axios\r\n    .post(`http://localhost:3000/tasks/${taskId}/comments`, data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n\r\n    inputCommentElement.value = '';\r\n    buttonCommentElement.disabled = false;\r\n    buttonCommentElement.innerText = 'Add comment';\r\n    buttonCommentElement.classList.toggle('hover:bg-slate-100');\r\n    comments.value[taskId].push(response.data)\r\n}\r\n\r\nconst deleteComment = async(commentId, taskId) => {\r\n    comments.value[taskId] = comments.value[taskId].filter(item => item.id !== commentId);\r\n    await axios.delete(`http://localhost:3000/tasks/comments/${commentId}`, {withCredentials: true});\r\n    // arr = arr.filter(item => item !== value)\r\n    console.log(comments.value[taskId]);\r\n\r\n}\r\n\r\nconst getCmtsFromOneTask = async(taskId) => {\r\n    const response = await axios.get(\r\n        `http://localhost:3000/tasks/${taskId}/comments`, \r\n        {withCredentials: true}\r\n    );\r\n    commentsOfOneTask.value = response.data;\r\n}\r\n\r\n\r\n// Likes\r\nconst likeClick = async(taskId) => {\r\n\r\n    if(likes.value[taskId].status === false || likes.value[taskId]  === '') {\r\n        if(likes.value[taskId]  === '') {\r\n           likes.value[taskId] = {};\r\n        }\r\n\r\n        const data = {status: true};\r\n        await axios.post(`http://localhost:3000/tasks/${taskId}/likes`, data, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n            withCredentials: true,\r\n        });\r\n        likes.value[taskId].status  = true;\r\n    }\r\n    else if (likes.value[taskId].status  === true) {\r\n        // const data = {status: false};\r\n        likes.value[taskId].status  = false;\r\n        await axios.delete(`http://localhost:3000/tasks/${taskId}/likes`, {\r\n            headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n            withCredentials: true,\r\n        });\r\n    }\r\n}\r\n\r\nonMounted( async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    console.log(response.data);\r\n    tasks.value = response.data;\r\n\r\n    let count = 0;\r\n    tasks.value.forEach(async(ele) => {\r\n        // const commentsLink = `http://localhost:3000/tasks/${ele.id}/comments`;\r\n        // const likesLink = `http://localhost:3000/tasks/${ele.id}/likes`;\r\n\r\n        // const requestComments = axios.get(commentsLink, {withCredentials: true});\r\n        // const requestLikes = axios.get(likesLink, {withCredentials: true});\r\n\r\n        // await axios.all([requestComments, requestLikes]).then(\r\n        //     axios.spread((...responses) => {\r\n        //     comments.value[ele.id] = responses[0];\r\n        //     likes.value[ele.id] = responses[1];\r\n        //     })\r\n        // );\r\n\r\n        let response;\r\n        response = await axios.get(\r\n            `http://localhost:3000/tasks/${ele.id}/comments`, \r\n            {withCredentials: true}\r\n        );\r\n        comments.value[ele.id] = response.data;\r\n\r\n        response = await axios.get(\r\n            `http://localhost:3000/tasks/${ele.id}/likes`, \r\n            {withCredentials: true}\r\n        );\r\n        likes.value[ele.id] = response.data;\r\n        isEdit.value[ele.id] = false;\r\n\r\n        response = await axios.get(\r\n            `http://localhost:3000/tasks/${ele.id}/countLikesOfTask`, \r\n            {withCredentials: true}\r\n        );\r\n        countLikes.value[ele.id] = response.data;\r\n    })\r\n\r\n    console.log(tasks.value);\r\n    console.log(comments.value);\r\n    console.log(likes.value);\r\n    console.log(isEdit.value);\r\n    console.log(countLikes.value);\r\n    \r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.liked {\r\n    color: dodgerblue;\r\n}\r\n\r\n.unliked {\r\n    color: darkgray;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}