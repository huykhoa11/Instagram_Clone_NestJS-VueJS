{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\";\nimport { displayToast, dangerColor, successColor } from './../composables/DisplayToast.js';\nimport { addLike, deleteLike, spin, createComment, deleteComment, saveEditTask, deleteTask, timeAgoComment } from './../composables/Fetch.js'; // import splide\n\nimport { Splide, SplideSlide } from '@splidejs/vue-splide';\nimport '@splidejs/vue-splide/css';\nexport default {\n  __name: 'Task',\n  props: {\n    passData: Object\n  },\n  emits: ['sendFromTaskVue'],\n\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    expose();\n    const props = __props;\n    const router = useRouter();\n    const users = ref([]);\n    const currentUser = ref({});\n    const userId = ref(null);\n    const currentUserId = ref(null);\n    const isEdit = ref(false);\n    const inputEditContent = ref('');\n    const slideIndex = ref(0);\n\n    const likeClick = async task => {\n      const isLiked = props.passData.task.likes.find(ele => ele.user.id === currentUserId.value) !== undefined;\n\n      if (isLiked === false) {\n        const btnLikeElement = document.getElementById('btnLike');\n        btnLikeElement.disabled = true;\n        btnLikeElement.innerHTML = spin();\n        btnLikeElement.classList.remove('hover:bg-slate-200', 'hover:cursor-pointer');\n        const newLike = await addLike(task.id);\n        btnLikeElement.disabled = false;\n        btnLikeElement.innerHTML = `<i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like`;\n        btnLikeElement.classList.add('hover:bg-slate-200', 'hover:cursor-pointer');\n        props.passData.task.likes.unshift(newLike); // emit('sendFromTaskVue', props.passData.task);\n        // props.passData.task.user.likes.push({id: newLike.id, status: newLike.status});  //for changing color of like button\n      } else {\n        deleteLike(task.id);\n        const likeNeedRemove = props.passData.task.likes.find(ele => ele.user.id === currentUserId.value);\n        const indexOfLikeNeedRemove = task.likes.indexOf(likeNeedRemove);\n        props.passData.task.likes.splice(indexOfLikeNeedRemove, 1); // emit('sendFromTaskVue', props.passData.task);\n        // props.passData.task.user.likes.pop(); //for changing color of like button\n      }\n    };\n\n    const addComment = async task => {\n      try {\n        const inputCommentElement = document.getElementById(`inputComment${task.id}`);\n        const buttonCommentElement = document.getElementById(`buttonComment${task.id}`);\n        console.log(inputCommentElement.value);\n        const data = {\n          content: inputCommentElement.value\n        };\n        buttonCommentElement.disabled = true;\n        buttonCommentElement.classList.toggle('hover:bg-pink-400');\n        buttonCommentElement.innerHTML = spin();\n        const newCmt = await createComment(task.id, data);\n        inputCommentElement.value = '';\n        buttonCommentElement.disabled = false;\n        buttonCommentElement.innerHTML = 'Send';\n        buttonCommentElement.classList.toggle('hover:bg-pink-400');\n        props.passData.task.comments.unshift(newCmt);\n      } catch (error) {\n        displayToast('Comment must has its content!', dangerColor);\n      }\n    };\n\n    const removeComment = async commentId => {\n      props.passData.task.comments = props.passData.task.comments.filter(item => item.id !== commentId);\n      await deleteComment(commentId);\n    };\n\n    const editTask = async taskId => {\n      try {\n        const EditFeatureElement = document.getElementById('EditFeature');\n        const tmp = EditFeatureElement.innerHTML;\n        EditFeatureElement.innerHTML = spin();\n        const data = {\n          content: inputEditContent.value\n        };\n        const newUpdateTask = await saveEditTask(taskId, data);\n        console.log(newUpdateTask);\n        EditFeatureElement.innerHTML = tmp;\n        isEdit.value = false;\n        props.passData.task.content = inputEditContent.value;\n        props.passData.task.updatedAt = newUpdateTask.updatedAt;\n        displayToast('Edit task succesfully', successColor);\n      } catch (error) {\n        displayToast(\"Task must has its content !\", dangerColor);\n      }\n    };\n\n    const removeTask = async taskId => {\n      const EditOrDeleteFeatureElement = document.getElementById('EditOrDeleteFeature');\n      const tmp = EditOrDeleteFeatureElement.innerHTML;\n      EditOrDeleteFeatureElement.innerHTML = spin();\n      await deleteTask(taskId);\n      console.log('delete done');\n      EditOrDeleteFeatureElement.innerHTML = tmp;\n      emit('sendFromTaskVue', {\n        taskId: taskId,\n        open: false\n      });\n    };\n\n    onMounted(async () => {\n      console.log(props.passData);\n      inputEditContent.value = props.passData.task.content;\n      userId.value = parseInt(router.currentRoute.value.params.id);\n      currentUserId.value = parseInt(router.currentRoute.value.query.currentUserId);\n      console.log(userId.value, currentUserId.value);\n      const prev = document.getElementById('prev');\n      const next = document.getElementById('next');\n      const images = document.querySelectorAll('.image');\n      const dots = document.querySelectorAll('.dot');\n\n      (() => {\n        for (let i = 0; i < images.length; i++) {\n          images[i].style.display = \"none\";\n        }\n\n        images[0].style.display = 'block';\n\n        if (dots.length > 0) {\n          dots[0].classList.add('bg-opacity-100');\n        }\n      })();\n\n      const resetSlideIndex = () => {\n        if (slideIndex.value < 0) {\n          slideIndex.value = images.length - 1;\n        } else if (slideIndex.value > images.length - 1) {\n          slideIndex.value = 0;\n        }\n      };\n\n      const showSlide = () => {\n        for (let i = 0; i < images.length; i++) {\n          images[i].style.display = \"none\";\n        }\n\n        images[slideIndex.value].style.display = \"block\";\n\n        for (let i = 0; i < dots.length; i++) {\n          dots[i].classList.remove(\"bg-opacity-100\");\n        }\n\n        dots[slideIndex.value].classList.add(\"bg-opacity-100\");\n      };\n\n      if (prev) {\n        prev.addEventListener('click', () => {\n          slideIndex.value -= 1;\n          resetSlideIndex();\n          showSlide();\n        });\n      }\n\n      if (next) {\n        next.addEventListener('click', () => {\n          slideIndex.value += 1;\n          resetSlideIndex();\n          showSlide();\n        });\n      }\n    });\n    const __returned__ = {\n      router,\n      users,\n      currentUser,\n      userId,\n      currentUserId,\n      isEdit,\n      inputEditContent,\n      slideIndex,\n      props,\n      emit,\n      likeClick,\n      addComment,\n      removeComment,\n      editTask,\n      removeTask,\n      ref,\n      onMounted,\n      useRouter,\n      axios,\n      displayToast,\n      dangerColor,\n      successColor,\n      addLike,\n      deleteLike,\n      spin,\n      createComment,\n      deleteComment,\n      saveEditTask,\n      deleteTask,\n      timeAgoComment,\n      Splide,\n      SplideSlide\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AAkIA,SAASA,GAAT,EAAcC,SAAd,QAA+B,KAA/B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,YAApC,QAAwD,kCAAxD;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,IAA9B,EAAoCC,aAApC,EAAmDC,aAAnD,EAAkEC,YAAlE,EAAgFC,UAAhF,EAA4FC,cAA5F,QAAkH,2BAAlH,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,sBAApC;AACA,OAAO,0BAAP;;;;;;;;;;;;;;IAEA,MAAMC,MAAM,GAAGf,SAAS,EAAxB;IAEA,MAAMgB,KAAK,GAAGlB,GAAG,CAAC,EAAD,CAAjB;IACA,MAAMmB,WAAW,GAAGnB,GAAG,CAAC,EAAD,CAAvB;IAEA,MAAMoB,MAAM,GAAGpB,GAAG,CAAC,IAAD,CAAlB;IACA,MAAMqB,aAAa,GAAGrB,GAAG,CAAC,IAAD,CAAzB;IACA,MAAMsB,MAAM,GAAGtB,GAAG,CAAC,KAAD,CAAlB;IACA,MAAMuB,gBAAgB,GAAGvB,GAAG,CAAC,EAAD,CAA5B;IAEA,MAAMwB,UAAU,GAAGxB,GAAG,CAAC,CAAD,CAAtB;;IAOA,MAAMyB,SAAS,GAAG,MAAMC,IAAN,IAAe;MAE7B,MAAMC,OAAO,GAAGC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,KAApB,CAA0BC,IAA1B,CAA+BC,GAAG,IAAEA,GAAG,CAACC,IAAJ,CAASC,EAAT,KAAcb,aAAa,CAACc,KAAhE,MAA2EC,SAA3F;;MACA,IAAGT,OAAO,KAAK,KAAf,EAAsB;QAClB,MAAMU,cAAc,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAvB;QACAF,cAAc,CAACG,QAAf,GAA0B,IAA1B;QACAH,cAAc,CAACI,SAAf,GAA2BhC,IAAI,EAA/B;QACA4B,cAAc,CAACK,SAAf,CAAyBC,MAAzB,CAAgC,oBAAhC,EAAsD,sBAAtD;QAEA,MAAMC,OAAO,GAAG,MAAMrC,OAAO,CAACmB,IAAI,CAACQ,EAAN,CAA7B;QAEAG,cAAc,CAACG,QAAf,GAA0B,KAA1B;QACAH,cAAc,CAACI,SAAf,GAA4B,yDAA5B;QACAJ,cAAc,CAACK,SAAf,CAAyBG,GAAzB,CAA6B,oBAA7B,EAAmD,sBAAnD;QAEAjB,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,KAApB,CAA0BgB,OAA1B,CAAkCF,OAAlC,EAZkB,CAalB;QAEA;MACH,CAhBD,MAiBK;QAEDpC,UAAU,CAACkB,IAAI,CAACQ,EAAN,CAAV;QACA,MAAMa,cAAc,GAAGnB,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,KAApB,CAA0BC,IAA1B,CAA+BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,EAAT,KAAgBb,aAAa,CAACc,KAApE,CAAvB;QACA,MAAMa,qBAAqB,GAAGtB,IAAI,CAACI,KAAL,CAAWmB,OAAX,CAAmBF,cAAnB,CAA9B;QACAnB,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,KAApB,CAA0BoB,MAA1B,CAAiCF,qBAAjC,EAAwD,CAAxD,EALC,CAMD;QACA;MACH;IACJ,CA7BD;;IA+BA,MAAMG,UAAU,GAAG,MAAMzB,IAAN,IAAe;MAC9B,IAAI;QACA,MAAM0B,mBAAmB,GAAId,QAAQ,CAACC,cAAT,CAAyB,eAAcb,IAAI,CAACQ,EAAG,EAA/C,CAA7B;QACA,MAAMmB,oBAAoB,GAAGf,QAAQ,CAACC,cAAT,CAAyB,gBAAeb,IAAI,CAACQ,EAAG,EAAhD,CAA7B;QACAoB,OAAO,CAACC,GAAR,CAAYH,mBAAmB,CAACjB,KAAhC;QACA,MAAMqB,IAAI,GAAG;UAACC,OAAO,EAAEL,mBAAmB,CAACjB;QAA9B,CAAb;QAEAkB,oBAAoB,CAACb,QAArB,GAAgC,IAAhC;QACAa,oBAAoB,CAACX,SAArB,CAA+BgB,MAA/B,CAAsC,mBAAtC;QACAL,oBAAoB,CAACZ,SAArB,GAAiChC,IAAI,EAArC;QAEA,MAAMkD,MAAM,GAAG,MAAMjD,aAAa,CAACgB,IAAI,CAACQ,EAAN,EAAUsB,IAAV,CAAlC;QAEAJ,mBAAmB,CAACjB,KAApB,GAA4B,EAA5B;QACAkB,oBAAoB,CAACb,QAArB,GAAgC,KAAhC;QACAa,oBAAoB,CAACZ,SAArB,GAAiC,MAAjC;QACAY,oBAAoB,CAACX,SAArB,CAA+BgB,MAA/B,CAAsC,mBAAtC;QACA9B,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBkC,QAApB,CAA6Bd,OAA7B,CAAqCa,MAArC;MACH,CAjBD,CAiBE,OAAOE,KAAP,EAAc;QACZzD,YAAY,CAAC,+BAAD,EAAkCC,WAAlC,CAAZ;MACH;IACJ,CArBD;;IAuBA,MAAMyD,aAAa,GAAG,MAAMC,SAAN,IAAoB;MACtCnC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBkC,QAApB,GAA+BhC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBkC,QAApB,CAA6BI,MAA7B,CAAoCC,IAAI,IAAIA,IAAI,CAAC/B,EAAL,KAAY6B,SAAxD,CAA/B;MACA,MAAMpD,aAAa,CAACoD,SAAD,CAAnB;IACH,CAHD;;IAKA,MAAMG,QAAQ,GAAG,MAAMC,MAAN,IAAiB;MAC9B,IAAI;QACA,MAAMC,kBAAkB,GAAG9B,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAA3B;QACA,MAAM8B,GAAG,GAAGD,kBAAkB,CAAC3B,SAA/B;QACA2B,kBAAkB,CAAC3B,SAAnB,GAA+BhC,IAAI,EAAnC;QAEA,MAAM+C,IAAI,GAAG;UAACC,OAAO,EAAElC,gBAAgB,CAACY;QAA3B,CAAb;QACA,MAAMmC,aAAa,GAAG,MAAM1D,YAAY,CAACuD,MAAD,EAASX,IAAT,CAAxC;QAEAF,OAAO,CAACC,GAAR,CAAYe,aAAZ;QACAF,kBAAkB,CAAC3B,SAAnB,GAA+B4B,GAA/B;QACA/C,MAAM,CAACa,KAAP,GAAe,KAAf;QACAP,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoB+B,OAApB,GAA8BlC,gBAAgB,CAACY,KAA/C;QACAP,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoB6C,SAApB,GAAgCD,aAAa,CAACC,SAA9C;QACAnE,YAAY,CAAC,uBAAD,EAA0BE,YAA1B,CAAZ;MACH,CAdD,CAcE,OAAOuD,KAAP,EAAc;QACZzD,YAAY,CAAC,6BAAD,EAAgCC,WAAhC,CAAZ;MACH;IAEJ,CAnBD;;IAqBA,MAAMmE,UAAU,GAAG,MAAML,MAAN,IAAiB;MAChC,MAAMM,0BAA0B,GAAGnC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAAnC;MACA,MAAM8B,GAAG,GAAGI,0BAA0B,CAAChC,SAAvC;MACAgC,0BAA0B,CAAChC,SAA3B,GAAuChC,IAAI,EAA3C;MAEA,MAAMI,UAAU,CAACsD,MAAD,CAAhB;MACAb,OAAO,CAACC,GAAR,CAAY,aAAZ;MAEAkB,0BAA0B,CAAChC,SAA3B,GAAuC4B,GAAvC;MACAK,IAAI,CAAC,iBAAD,EAAoB;QAACP,MAAM,EAAEA,MAAT;QAAiBQ,IAAI,EAAE;MAAvB,CAApB,CAAJ;IAEH,CAXD;;IAaA1E,SAAS,CAAE,YAAW;MAClBqD,OAAO,CAACC,GAAR,CAAY3B,KAAK,CAACC,QAAlB;MACAN,gBAAgB,CAACY,KAAjB,GAAyBP,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoB+B,OAA7C;MAEArC,MAAM,CAACe,KAAP,GAAeyC,QAAQ,CAAC3D,MAAM,CAAC4D,YAAP,CAAoB1C,KAApB,CAA0B2C,MAA1B,CAAiC5C,EAAlC,CAAvB;MACAb,aAAa,CAACc,KAAd,GAAsByC,QAAQ,CAAC3D,MAAM,CAAC4D,YAAP,CAAoB1C,KAApB,CAA0B4C,KAA1B,CAAgC1D,aAAjC,CAA9B;MACAiC,OAAO,CAACC,GAAR,CAAYnC,MAAM,CAACe,KAAnB,EAA0Bd,aAAa,CAACc,KAAxC;MAEA,MAAM6C,IAAI,GAAG1C,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;MACA,MAAM0C,IAAI,GAAG3C,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;MACA,MAAM2C,MAAM,GAAG5C,QAAQ,CAAC6C,gBAAT,CAA0B,QAA1B,CAAf;MACA,MAAMC,IAAI,GAAG9C,QAAQ,CAAC6C,gBAAT,CAA0B,MAA1B,CAAb;;MAEA,CAAC,MAAM;QACH,KAAI,IAAIE,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,MAAM,CAACI,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;UAC/BH,MAAM,CAACG,CAAD,CAAN,CAAUE,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;QACH;;QACDN,MAAM,CAAC,CAAD,CAAN,CAAUK,KAAV,CAAgBC,OAAhB,GAA0B,OAA1B;;QACA,IAAGJ,IAAI,CAACE,MAAL,GAAc,CAAjB,EAAoB;UAChBF,IAAI,CAAC,CAAD,CAAJ,CAAQ1C,SAAR,CAAkBG,GAAlB,CAAsB,gBAAtB;QACH;MACJ,CARD;;MAUA,MAAM4C,eAAe,GAAG,MAAM;QAC1B,IAAGjE,UAAU,CAACW,KAAX,GAAmB,CAAtB,EAAyB;UACrBX,UAAU,CAACW,KAAX,GAAmB+C,MAAM,CAACI,MAAP,GAAe,CAAlC;QACH,CAFD,MAGK,IAAG9D,UAAU,CAACW,KAAX,GAAmB+C,MAAM,CAACI,MAAP,GAAc,CAApC,EAAuC;UACxC9D,UAAU,CAACW,KAAX,GAAmB,CAAnB;QACH;MACJ,CAPD;;MASA,MAAMuD,SAAS,GAAG,MAAM;QACpB,KAAI,IAAIL,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,MAAM,CAACI,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;UAC/BH,MAAM,CAACG,CAAD,CAAN,CAAUE,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;QACH;;QACDN,MAAM,CAAC1D,UAAU,CAACW,KAAZ,CAAN,CAAyBoD,KAAzB,CAA+BC,OAA/B,GAAyC,OAAzC;;QAEA,KAAI,IAAIH,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,IAAI,CAACE,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;UAC7BD,IAAI,CAACC,CAAD,CAAJ,CAAQ3C,SAAR,CAAkBC,MAAlB,CAAyB,gBAAzB;QACH;;QACDyC,IAAI,CAAC5D,UAAU,CAACW,KAAZ,CAAJ,CAAuBO,SAAvB,CAAiCG,GAAjC,CAAqC,gBAArC;MACH,CAVD;;MAYA,IAAGmC,IAAH,EAAS;QACLA,IAAI,CAACW,gBAAL,CAAsB,OAAtB,EAA+B,MAAI;UAC/BnE,UAAU,CAACW,KAAX,IAAoB,CAApB;UACAsD,eAAe;UACfC,SAAS;QACZ,CAJD;MAKH;;MAED,IAAGT,IAAH,EAAS;QACLA,IAAI,CAACU,gBAAL,CAAsB,OAAtB,EAA+B,MAAI;UAC/BnE,UAAU,CAACW,KAAX,IAAoB,CAApB;UACAsD,eAAe;UAEfC,SAAS;QACZ,CALD;MAMH;IACJ,CA5DQ,CAAT","names":["ref","onMounted","useRouter","axios","displayToast","dangerColor","successColor","addLike","deleteLike","spin","createComment","deleteComment","saveEditTask","deleteTask","timeAgoComment","Splide","SplideSlide","router","users","currentUser","userId","currentUserId","isEdit","inputEditContent","slideIndex","likeClick","task","isLiked","props","passData","likes","find","ele","user","id","value","undefined","btnLikeElement","document","getElementById","disabled","innerHTML","classList","remove","newLike","add","unshift","likeNeedRemove","indexOfLikeNeedRemove","indexOf","splice","addComment","inputCommentElement","buttonCommentElement","console","log","data","content","toggle","newCmt","comments","error","removeComment","commentId","filter","item","editTask","taskId","EditFeatureElement","tmp","newUpdateTask","updatedAt","removeTask","EditOrDeleteFeatureElement","emit","open","parseInt","currentRoute","params","query","prev","next","images","querySelectorAll","dots","i","length","style","display","resetSlideIndex","showSlide","addEventListener"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/Task.vue"],"sourcesContent":["<template>\r\n    <div class=\"fixed z-50 left-0 right-0 top-0 bottom-0 m-auto bg-white border border-gray-400 rounded-md overflow-hidden\r\n                flex flex-col w-5/6 min-w-[320px] h-3/4\r\n                md:flex-row md:w-2/3 md:h-5/6 \r\n                \">\r\n        <!-- splide images -->\r\n        <!-- <Splide :options=\"{ rewind: true }\" aria-label=\"Vue Splide Example\" class=\" w-fulll h-full\">\r\n                <SplideSlide v-for=\"image in Object.assign({}, passData.task.images)\" :key=\"image.id\" class=\" w-full h-full border-2 border-red-500\">\r\n                    <img :src=\"require(`./../assets/${image.name}`)\" alt=\"Sample 1\" class=\" w-full h-full object-cover\">\r\n                </SplideSlide>\r\n        </Splide> -->\r\n\r\n         <div class=\" relative w-full h-3/5 md:w-3/5 md:h-full \">\r\n            <div v-for=\"image in Object.assign({}, passData.task.images)\" :key=\"image.id\" class=\" image w-full h-full border border-red-500\">\r\n                <img :src=\"require(`./../assets/${image.name}`)\" alt=\"Sample 1\" class=\" w-full h-full\">\r\n            </div>\r\n\r\n            <div v-if=\"passData.task.images.length > 1\">\r\n\r\n                <div id=\"prev\" class=\" absolute top-1/2 left-2 text-black font-bold w-7 h-7 flex items-center justify-center \r\n                                        -translate-y-1/2 cursor-pointer rounded-full bg-white bg-opacity-50\">\r\n                    <i class=\"fa-solid fa-angle-left\"></i>\r\n                </div>\r\n                <div id=\"next\" class=\" absolute top-1/2 right-2 text-black font-bold w-7 h-7 flex items-center justify-center \r\n                                        -translate-y-1/2 cursor-pointer rounded-full bg-white bg-opacity-50\">\r\n                    <i class=\"fa-solid fa-angle-right\"></i>\r\n                </div>\r\n\r\n                <div class=\" absolute flex bottom-8 left-1/2 -translate-x-1/2 space-x-2\">\r\n                    <div v-for=\"image in Object.assign({}, passData.task.images)\" :key=\"image.id\" class=\" \">\r\n                        <div class=\"dot h-2 w-2 rounded-full bg-white bg-opacity-50\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div> \r\n\r\n\r\n        <div class=\" w-full h-2/5 md:w-2/5 md:h-full relative\">\r\n            <!-- {{ passData.task }} -->\r\n            <!-- Header -->\r\n            <div class=\" flex justify-between items-center h-16 border-b-2 border-gray-100\">\r\n                <div class=\" flex items-center space-x-3 ml-3\">\r\n                    <img :src=\"require('./../assets/' + passData.task.user.avatar)\" alt=\"\" class=\" w-8 h-8 rounded-full border border-gray-50\">\r\n                    <p class=\" font-semibold\">\r\n                        <router-link :to=\"'/user/' +passData.task.user.id+ '?currentUserId=' +currentUserId\" \r\n                                    class=\" hover:underline hover:decoration-solid\">\r\n                            {{ passData.task.user.username }}\r\n                        </router-link>\r\n                    </p>\r\n                </div>\r\n\r\n                <div v-if=\"userId === currentUserId\" class=\" flex items-center space-x-2 mr-2\" id=\"EditOrDeleteFeature\">\r\n                    <div class=\" hover:text-blue-500 hover:cursor-pointer\" @click=\"isEdit = true\" v-if=\"isEdit === false\"><i class=\"fa-solid fa-pen-to-square\"></i></div>\r\n                    <div class=\" hover:text-red-500 hover:cursor-pointer\" @click=\"removeTask(passData.task.id)\"><i class=\"fa-solid fa-trash\"></i></div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Main content -->\r\n            <div class=\" mt-2 pl-3 h-4/5 border-b-2 border-gray-100\">\r\n                <!-- Task content -->\r\n                <div v-if=\"isEdit === false\" class=\" flex items-center space-x-3\">\r\n                    <img :src=\"require('./../assets/' + passData.task.user.avatar)\" alt=\"\" class=\" w-8 h-8 rounded-full border border-gray-50\">\r\n                    <p class=\"\">\r\n                        <router-link :to=\"'/user/' +passData.task.user.id+ '?currentUserId=' +currentUserId\" \r\n                                    class=\" font-semibold hover:underline hover:decoration-solid\">\r\n                            {{ passData.task.user.username }}\r\n                        </router-link>\r\n                        {{ passData.task.content }}\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"flex h-20 relative\" v-else>\r\n                    <textarea type=\"text\" v-model=\"inputEditContent\" \r\n                            class=\" flex-1 pl-1 border border-gray-500 outline-none border-none\" maxlength=\"140\"></textarea>\r\n                    <div id=\"EditFeature\" class=\" block\">\r\n                        <p class=\"absolute bottom-1 right-36 min-w-[50px] text-sm text-gray-200\"> {{ inputEditContent.length }} /140</p>\r\n                        <button @click=\"editTask(passData.task.id)\" class=\" absolute bottom-1 right-20 min-w-[50px] rounded-md hover:bg-green-500 text-green-500 hover:text-white px-2\">Save</button>\r\n                        <button @click=\"isEdit = false\" class=\" absolute bottom-1 right-4 min-w-[50px] rounded-md hover:bg-slate-200 text-gray-500 px-2\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- Task comments -->\r\n                <ul v-if=\"isEdit === false\" class=\" overflow-scroll mt-2 h-28\">\r\n                    <li v-for=\"comment in passData.task.comments\" :key=\"comment\" class=\"flex justify-between items-center px-1 pt-1 group hover:bg-gray-50\">\r\n                        <div class=\"text-sm flex items-center space-x-2\">\r\n                            <img :src=\"require('./../assets/' + comment.user.avatar)\" alt=\"\" class=\" w-5 h-5 rounded-full\">\r\n                            <div>\r\n                                <router-link :to=\"'/user/' +comment.user.id+ '?currentUserId=' +currentUser.id\" \r\n                                                class=\" font-semibold hover:underline hover:decoration-solid\">\r\n                                    {{ comment.user.username }}:\r\n                                </router-link>\r\n                                {{comment.content}}  \r\n                                <span class=\" text-[9px]\">{{ timeAgoComment(comment) }}</span>\r\n                            </div>\r\n                        </div>\r\n                        <i v-if=\"currentUserId === comment.user.id\" @click=\"removeComment(comment.id)\" class=\"fa-solid fa-x mr-4 text-xs hidden opacity-50 \r\n                            hover:cursor-pointer hover:opacity-80 hover:text-red-500 group-hover:inline-block\"></i>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <!-- Like button -->\r\n            <div class=\" relative flex justify-between px-3\">\r\n                <div class=\"\">\r\n                    <button id=\"btnLike\"\r\n                        :class=\"[passData.task.likes.find(ele=>ele.user.id===currentUserId) === undefined ?  'text-gray-400' : 'text-pink-400 bg-pink-100'  ]\" \r\n                            @click=\"likeClick(passData.task)\" \r\n                            class=\" px-2 text-sm  hover:bg-slate-200 hover:cursor-pointer\">\r\n                            <i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like\r\n                    </button>\r\n                    <span class=\" flex justify-center items-center text-white bg-pink-500\r\n                                        h-4 w-4 text-[13px] rounded-full absolute left-16 -top-1\">{{ passData.task.likes.length }}</span>\r\n                </div>\r\n                <p class=\" text-xs text-gray-400\">{{ passData.task.updatedAt.split('T')[0] }}</p>\r\n            </div>\r\n\r\n            <!-- Comment section -->\r\n            <div class=\" w-full flex absolute bottom-0 border-t-2 border-gray-200\">\r\n                <input type=\"text\" :id=\"'inputComment' + passData.task.id\"  placeholder=\"leave a comment\" maxlength=\"50\"\r\n                        class=\" h-9 outline-none flex-1 pl-3\">\r\n                <button @click=\"addComment(passData.task)\" :id=\"'buttonComment' + passData.task.id\"\r\n                        class=\" px-2 border border-gray-200 bg-pink-500 hover:bg-pink-400 text-gray-100\">Send</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from \"vue-router\"\r\nimport axios from \"axios\";\r\nimport { displayToast, dangerColor, successColor } from './../composables/DisplayToast.js';\r\nimport { addLike, deleteLike, spin, createComment, deleteComment, saveEditTask, deleteTask, timeAgoComment } from './../composables/Fetch.js';\r\n\r\n// import splide\r\nimport { Splide, SplideSlide } from '@splidejs/vue-splide';\r\nimport '@splidejs/vue-splide/css';\r\n\r\nconst router = useRouter();\r\n\r\nconst users = ref([]);\r\nconst currentUser = ref({});\r\n\r\nconst userId = ref(null);\r\nconst currentUserId = ref(null);\r\nconst isEdit = ref(false);\r\nconst inputEditContent = ref('');\r\n\r\nconst slideIndex = ref(0);\r\n\r\nconst props = defineProps({\r\n    passData: Object\r\n});\r\nconst emit = defineEmits(['sendFromTaskVue']);\r\n\r\nconst likeClick = async(task) => {\r\n\r\n    const isLiked = props.passData.task.likes.find(ele=>ele.user.id===currentUserId.value) !== undefined;\r\n    if(isLiked === false) {\r\n        const btnLikeElement = document.getElementById('btnLike');\r\n        btnLikeElement.disabled = true;\r\n        btnLikeElement.innerHTML = spin();\r\n        btnLikeElement.classList.remove('hover:bg-slate-200', 'hover:cursor-pointer');\r\n        \r\n        const newLike = await addLike(task.id);\r\n\r\n        btnLikeElement.disabled = false;\r\n        btnLikeElement.innerHTML = `<i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like`;\r\n        btnLikeElement.classList.add('hover:bg-slate-200', 'hover:cursor-pointer');\r\n\r\n        props.passData.task.likes.unshift(newLike);\r\n        // emit('sendFromTaskVue', props.passData.task);\r\n\r\n        // props.passData.task.user.likes.push({id: newLike.id, status: newLike.status});  //for changing color of like button\r\n    }\r\n    else {\r\n\r\n        deleteLike(task.id);\r\n        const likeNeedRemove = props.passData.task.likes.find(ele => ele.user.id === currentUserId.value);\r\n        const indexOfLikeNeedRemove = task.likes.indexOf(likeNeedRemove);\r\n        props.passData.task.likes.splice(indexOfLikeNeedRemove, 1);\r\n        // emit('sendFromTaskVue', props.passData.task);\r\n        // props.passData.task.user.likes.pop(); //for changing color of like button\r\n    }\r\n}\r\n\r\nconst addComment = async(task) => {\r\n    try {\r\n        const inputCommentElement  = document.getElementById(`inputComment${task.id}`);\r\n        const buttonCommentElement = document.getElementById(`buttonComment${task.id}`);\r\n        console.log(inputCommentElement.value);\r\n        const data = {content: inputCommentElement.value};\r\n        \r\n        buttonCommentElement.disabled = true;\r\n        buttonCommentElement.classList.toggle('hover:bg-pink-400');\r\n        buttonCommentElement.innerHTML = spin();\r\n\r\n        const newCmt = await createComment(task.id, data); \r\n    \r\n        inputCommentElement.value = '';\r\n        buttonCommentElement.disabled = false;\r\n        buttonCommentElement.innerHTML = 'Send';\r\n        buttonCommentElement.classList.toggle('hover:bg-pink-400');\r\n        props.passData.task.comments.unshift(newCmt)\r\n    } catch (error) {\r\n        displayToast('Comment must has its content!', dangerColor);\r\n    }\r\n}\r\n\r\nconst removeComment = async(commentId) => {\r\n    props.passData.task.comments = props.passData.task.comments.filter(item => item.id !== commentId);\r\n    await deleteComment(commentId);\r\n}\r\n\r\nconst editTask = async(taskId) => {\r\n    try {\r\n        const EditFeatureElement = document.getElementById('EditFeature');\r\n        const tmp = EditFeatureElement.innerHTML;\r\n        EditFeatureElement.innerHTML = spin();\r\n\r\n        const data = {content: inputEditContent.value};\r\n        const newUpdateTask = await saveEditTask(taskId, data);\r\n        \r\n        console.log(newUpdateTask);\r\n        EditFeatureElement.innerHTML = tmp;\r\n        isEdit.value = false;\r\n        props.passData.task.content = inputEditContent.value;\r\n        props.passData.task.updatedAt = newUpdateTask.updatedAt;\r\n        displayToast('Edit task succesfully', successColor);\r\n    } catch (error) {\r\n        displayToast(\"Task must has its content !\", dangerColor);\r\n    }\r\n    \r\n}\r\n\r\nconst removeTask = async(taskId) => {\r\n    const EditOrDeleteFeatureElement = document.getElementById('EditOrDeleteFeature');\r\n    const tmp = EditOrDeleteFeatureElement.innerHTML;\r\n    EditOrDeleteFeatureElement.innerHTML = spin();\r\n\r\n    await deleteTask(taskId);\r\n    console.log('delete done')\r\n\r\n    EditOrDeleteFeatureElement.innerHTML = tmp;\r\n    emit('sendFromTaskVue', {taskId: taskId, open: false});\r\n\r\n}\r\n\r\nonMounted( async() => {\r\n    console.log(props.passData);\r\n    inputEditContent.value = props.passData.task.content;\r\n\r\n    userId.value = parseInt(router.currentRoute.value.params.id);\r\n    currentUserId.value = parseInt(router.currentRoute.value.query.currentUserId);\r\n    console.log(userId.value, currentUserId.value);\r\n\r\n    const prev = document.getElementById('prev');\r\n    const next = document.getElementById('next');\r\n    const images = document.querySelectorAll('.image');\r\n    const dots = document.querySelectorAll('.dot');\r\n\r\n    (() => {\r\n        for(let i=0; i<images.length; i++) {\r\n            images[i].style.display = \"none\";\r\n        }\r\n        images[0].style.display = 'block';\r\n        if(dots.length > 0) {\r\n            dots[0].classList.add('bg-opacity-100');\r\n        }\r\n    })();\r\n\r\n    const resetSlideIndex = () => {\r\n        if(slideIndex.value < 0) {\r\n            slideIndex.value = images.length -1;\r\n        }\r\n        else if(slideIndex.value > images.length-1) {\r\n            slideIndex.value = 0;\r\n        }\r\n    }\r\n\r\n    const showSlide = () => {\r\n        for(let i=0; i<images.length; i++) {\r\n            images[i].style.display = \"none\";\r\n        }\r\n        images[slideIndex.value].style.display = \"block\";\r\n\r\n        for(let i=0; i<dots.length; i++) {\r\n            dots[i].classList.remove(\"bg-opacity-100\");\r\n        }\r\n        dots[slideIndex.value].classList.add(\"bg-opacity-100\");\r\n    }\r\n    \r\n    if(prev) {\r\n        prev.addEventListener('click', ()=>{\r\n            slideIndex.value -= 1;\r\n            resetSlideIndex();\r\n            showSlide();\r\n        })\r\n    }\r\n\r\n    if(next) {\r\n        next.addEventListener('click', ()=>{\r\n            slideIndex.value += 1;\r\n            resetSlideIndex();\r\n\r\n            showSlide();\r\n        })\r\n    }\r\n})\r\n\r\n\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}