{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref, onMounted } from \"vue\";\nimport axios from \"axios\";\nexport default {\n  __name: 'DashBoard',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const state = reactive({\n      tasks: [],\n      comments: [],\n      likes: []\n    });\n    const tasks = ref([]);\n    const comments = ref([]);\n    const likes = ref([]);\n    const inputTask = ref('');\n    const isEdit = ref([]);\n    const isEditting = ref(false);\n    const commentsOfOneTask = ref(null);\n    const likeStatus = ref('text-gray-400');\n    const createTaskBtnRef = ref(null); // const addCmtBtnRef = ref(null);\n    // const addCmtInputRef = ref(null);\n    // Tasks\n\n    const createTask = async () => {\n      createTaskBtnRef.value.disabled = true;\n      createTaskBtnRef.value.innerText = 'Loading...';\n      const data = {\n        content: inputTask.value\n      };\n      const response = await axios.post('http://localhost:3000/tasks', data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        withCredentials: true\n      });\n      inputTask.value = '';\n      tasks.value.push(response.data);\n      const responseDataId = response.data.id;\n      comments.value[responseDataId] = [];\n      likes.value[responseDataId] = '';\n      isEdit.value[responseDataId] = false;\n      console.log(comments.value);\n      console.log(likes.value); // getTasks();\n\n      createTaskBtnRef.value.disabled = false;\n      createTaskBtnRef.value.innerText = 'Create Task';\n    };\n\n    const getTasks = async () => {\n      const response = await axios.get('http://localhost:3000/tasks', {\n        withCredentials: true\n      });\n      tasks.value = response.data; // state.tasks = response.data;\n    };\n\n    const deleteTask = async taskId => {\n      await axios.delete(`http://localhost:3000/tasks/${taskId}`, {\n        withCredentials: true\n      });\n      tasks.value = tasks.value.filter(item => item.id !== taskId);\n      console.log(tasks.value);\n    };\n\n    const editTask = async taskId => {\n      isEditting.value = true;\n      const editInputElement = document.getElementById(`editInput${taskId}`);\n      const data = {\n        content: editInputElement.value\n      };\n      await axios.patch(`http://localhost:3000/tasks/${taskId}`, data, {\n        withCredentials: true\n      });\n      const task = tasks.value.find(element => element.id === taskId);\n      task.content = editInputElement.value;\n      isEditting.value = false;\n      isEdit.value[taskId] = false;\n      editInputElement.value = '';\n    }; // Comments\n\n\n    const addComment = async taskId => {\n      const inputCommentElement = document.getElementById(`inputComment${taskId}`);\n      const buttonCommentElement = document.getElementById(`buttonComment${taskId}`);\n      console.log(inputCommentElement.value);\n      buttonCommentElement.disabled = true;\n      buttonCommentElement.classList.toggle('hover:bg-slate-100');\n      buttonCommentElement.innerText = 'Loading...';\n      const data = {\n        content: inputCommentElement.value\n      };\n      const response = await axios.post(`http://localhost:3000/tasks/${taskId}/comments`, data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        withCredentials: true\n      });\n      inputCommentElement.value = '';\n      buttonCommentElement.disabled = false;\n      buttonCommentElement.innerText = 'Add comment';\n      buttonCommentElement.classList.toggle('hover:bg-slate-100');\n      comments.value[taskId].push(response.data);\n    };\n\n    const deleteComment = async (commentId, taskId) => {\n      comments.value[taskId] = comments.value[taskId].filter(item => item.id !== commentId);\n      await axios.delete(`http://localhost:3000/tasks/comments/${commentId}`, {\n        withCredentials: true\n      }); // arr = arr.filter(item => item !== value)\n\n      console.log(comments.value[taskId]);\n    };\n\n    const getCmtsFromOneTask = async taskId => {\n      const response = await axios.get(`http://localhost:3000/tasks/${taskId}/comments`, {\n        withCredentials: true\n      });\n      commentsOfOneTask.value = response.data;\n    }; // Likes\n\n\n    const likeClick = async taskId => {\n      if (likes.value[taskId].status === false || likes.value[taskId] === '') {\n        if (likes.value[taskId] === '') {\n          likes.value[taskId] = {};\n        }\n\n        const data = {\n          status: true\n        };\n        await axios.post(`http://localhost:3000/tasks/${taskId}/likes`, data, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\"\n          },\n          withCredentials: true\n        });\n        likes.value[taskId].status = true;\n      } else if (likes.value[taskId].status === true) {\n        // const data = {status: false};\n        likes.value[taskId].status = false;\n        await axios.delete(`http://localhost:3000/tasks/${taskId}/likes`, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\"\n          },\n          withCredentials: true\n        });\n      }\n    };\n\n    onMounted(async () => {\n      const response = await axios.get('http://localhost:3000/tasks', {\n        withCredentials: true\n      });\n      console.log(response.data);\n      tasks.value = response.data;\n      let count = 0;\n      tasks.value.forEach(async ele => {\n        // const commentsLink = `http://localhost:3000/tasks/${ele.id}/comments`;\n        // const likesLink = `http://localhost:3000/tasks/${ele.id}/likes`;\n        // const requestComments = axios.get(commentsLink, {withCredentials: true});\n        // const requestLikes = axios.get(likesLink, {withCredentials: true});\n        // await axios.all([requestComments, requestLikes]).then(\n        //     axios.spread((...responses) => {\n        //     comments.value[ele.id] = responses[0];\n        //     likes.value[ele.id] = responses[1];\n        //     })\n        // );\n        let response;\n        response = await axios.get(`http://localhost:3000/tasks/${ele.id}/comments`, {\n          withCredentials: true\n        });\n        comments.value[ele.id] = response.data;\n        response = await axios.get(`http://localhost:3000/tasks/${ele.id}/likes`, {\n          withCredentials: true\n        });\n        likes.value[ele.id] = response.data;\n        isEdit.value[ele.id] = false;\n      });\n      console.log(tasks.value);\n      console.log(comments.value);\n      console.log(likes.value);\n      console.log(isEdit.value);\n    });\n    const __returned__ = {\n      state,\n      tasks,\n      comments,\n      likes,\n      inputTask,\n      isEdit,\n      isEditting,\n      commentsOfOneTask,\n      likeStatus,\n      createTaskBtnRef,\n      createTask,\n      getTasks,\n      deleteTask,\n      editTask,\n      addComment,\n      deleteComment,\n      getCmtsFromOneTask,\n      likeClick,\n      reactive,\n      ref,\n      onMounted,\n      axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["reactive","ref","onMounted","axios","state","tasks","comments","likes","inputTask","isEdit","isEditting","commentsOfOneTask","likeStatus","createTaskBtnRef","createTask","value","disabled","innerText","data","content","response","post","headers","Accept","withCredentials","push","responseDataId","id","console","log","getTasks","get","deleteTask","taskId","delete","filter","item","editTask","editInputElement","document","getElementById","patch","task","find","element","addComment","inputCommentElement","buttonCommentElement","classList","toggle","deleteComment","commentId","getCmtsFromOneTask","likeClick","status","count","forEach","ele"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/DashBoard.vue"],"sourcesContent":["<template>\r\n    <section class=\" bg-gray-50 h-screen\">\r\n\r\n        <h3>\r\n            Loggin as \r\n        </h3>\r\n\r\n        <div class=\"\">\r\n            <input type=\"text\" v-model=\"inputTask\" class=\"border border-gray-200\" placeholder=\"create task\"> \r\n            <button @click=\"createTask()\" ref=\"createTaskBtnRef\" class=\"border border-black bg-slate-200\">Create Task</button>\r\n        </div>\r\n\r\n        <div class=\" relative mx-auto w-3/4 flex justify-around my-3 \">\r\n            <ul class=\" space-y-10 w-2/4\">\r\n                <li v-for=\"task in tasks\" :key=\"task\" class=\" border border-gray-400 rounded-md bg-white\">\r\n                    <div class=\"\">\r\n                        <div class=\"flex\" v-if=\"isEdit[task.id] === true\">\r\n                            <input type=\"text\" :id=\"'editInput' + task.id\" placeholder=\"edit task content\" class=\" flex-1 pl-1\">\r\n                            <div class=\"\" v-if=\"isEditting === false\">\r\n                                <button @click=\"editTask(task.id)\" class=\" bg-green-500 text-white hover:bg-green-400 px-2\">Save</button>\r\n                                <button @click=\"isEdit[task.id] = false\" class=\" bg-slate-200 text-gray-500 hover:bg-slate-300 px-2\">Cancel</button>\r\n                            </div>\r\n                            <div class=\"\" v-else>Loading...</div>\r\n                        </div>\r\n                        <div v-else class=\" px-2 flex justify-between items-center\">\r\n                            <p class=\" font-semibold\">{{ task.content }}</p>\r\n                            <i class=\"fa-solid fa-ellipsis pl-3 mr-3 inline-block hover:cursor-pointer group relative\">\r\n                                <div class=\" absolute -right-6 top-4 w-20 border border-gray-200 bg-white hidden group-hover:inline-block\">\r\n                                    <div class=\" text-xs text-blue-400 hover:bg-sky-200 hover:cursor-pointer pl-1 py-1\" @click=\"isEdit[task.id] = true\">Edit</div>\r\n                                    <div class=\" text-xs text-red-500 hover:bg-red-200 hover:cursor-pointer pl-1 py-1\" @click=\"deleteTask(task.id)\">Delete</div>\r\n                                </div>\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n                    <hr>\r\n                    <ul class=\" px-1 py-2 overflow-auto \">\r\n                        <li v-for=\"comment in comments[task.id]\" :key=\"comment\" class=\"flex justify-between items-center group\">\r\n                            <p class=\"text-sm\">{{comment.content}}</p>\r\n                            <i @click=\"deleteComment(comment.id, task.id)\" class=\"fa-solid fa-x mr-4 text-xs hidden opacity-50 \r\n                                hover:cursor-pointer hover:opacity-80 hover:text-red-500 group-hover:inline-block\"></i>\r\n                        </li>\r\n                    </ul>\r\n                    <button :class=\"[likes[task.id] === '' ?  'text-gray-400' : 'text-blue-400 bg-sky-100'  ]\" \r\n                            @click=\"likeClick(task.id)\" \r\n                            class=\" px-2 text-sm block border border-gray-200 hover:bg-slate-200 hover:cursor-pointer\">\r\n                            <i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like\r\n                    </button>\r\n                    <div class=\" flex\">\r\n                        <input type=\"text\" :id=\"'inputComment' + task.id\" class=\" flex-1 pl-1 border border-gray-200\" placeholder=\"add comment\">\r\n                        <button @click=\"addComment(task.id)\" :id=\"'buttonComment' + task.id\" \r\n                                class=\" px-2 border border-gray-200 bg-indigo-500 hover:bg-indigo-400 text-gray-100\">Comment</button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n\r\n            <div class=\" bg-white border border-gray-400 w-1/4 h-96\">\r\n                <p>Suggest Friend</p>\r\n                <ul></ul>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref, onMounted  } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\nconst state = reactive({tasks: [], comments: [], likes: []});\r\nconst tasks = ref([]);\r\nconst comments = ref([]);\r\nconst likes = ref([]);\r\nconst inputTask = ref('');\r\nconst isEdit = ref([]);\r\nconst isEditting = ref(false);\r\n\r\nconst commentsOfOneTask = ref(null);\r\nconst likeStatus = ref('text-gray-400')\r\n\r\nconst createTaskBtnRef = ref(null);\r\n// const addCmtBtnRef = ref(null);\r\n// const addCmtInputRef = ref(null);\r\n\r\n// Tasks\r\nconst createTask = async() => {\r\n\r\n    createTaskBtnRef.value.disabled = true;\r\n    createTaskBtnRef.value.innerText = 'Loading...'\r\n    const data = {content: inputTask.value};\r\n    \r\n    const response = await axios\r\n    .post('http://localhost:3000/tasks', data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n    inputTask.value = '';\r\n    tasks.value.push(response.data);\r\n    const responseDataId = response.data.id; \r\n    comments.value[responseDataId] = [];\r\n    likes.value[responseDataId] = '';\r\n    isEdit.value[responseDataId] = false;\r\n\r\n    console.log(comments.value);\r\n    console.log(likes.value);\r\n    // getTasks();\r\n    createTaskBtnRef.value.disabled = false;\r\n    createTaskBtnRef.value.innerText = 'Create Task';\r\n}\r\n\r\nconst getTasks = async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    tasks.value = response.data;\r\n    // state.tasks = response.data;\r\n}\r\n\r\nconst deleteTask = async (taskId) => {\r\n    await axios.delete(`http://localhost:3000/tasks/${taskId}`, {withCredentials: true});\r\n    tasks.value = tasks.value.filter(item => item.id !== taskId);\r\n    console.log(tasks.value);\r\n}\r\n\r\nconst editTask = async(taskId) => {\r\n    isEditting.value = true;\r\n    const editInputElement = document.getElementById(`editInput${taskId}`);\r\n    const data = {content: editInputElement.value}\r\n    await axios.patch(`http://localhost:3000/tasks/${taskId}`, data ,{withCredentials: true});\r\n    const task = tasks.value.find(element => element.id === taskId);\r\n    task.content = editInputElement.value;\r\n    isEditting.value = false;\r\n    isEdit.value[taskId] = false;\r\n    editInputElement.value = '';\r\n}\r\n\r\n\r\n// Comments\r\nconst addComment = async(taskId) => {\r\n\r\n    const inputCommentElement  = document.getElementById(`inputComment${taskId}`);\r\n    const buttonCommentElement = document.getElementById(`buttonComment${taskId}`);\r\n    console.log(inputCommentElement.value);\r\n    buttonCommentElement.disabled = true;\r\n    buttonCommentElement.classList.toggle('hover:bg-slate-100');\r\n    buttonCommentElement.innerText = 'Loading...';\r\n\r\n    const data = {content: inputCommentElement.value};\r\n    \r\n    const response = await axios\r\n    .post(`http://localhost:3000/tasks/${taskId}/comments`, data, {\r\n        headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json;charset=UTF-8\",\r\n        },\r\n        withCredentials: true,\r\n    })\r\n\r\n    inputCommentElement.value = '';\r\n    buttonCommentElement.disabled = false;\r\n    buttonCommentElement.innerText = 'Add comment';\r\n    buttonCommentElement.classList.toggle('hover:bg-slate-100');\r\n    comments.value[taskId].push(response.data)\r\n}\r\n\r\nconst deleteComment = async(commentId, taskId) => {\r\n    comments.value[taskId] = comments.value[taskId].filter(item => item.id !== commentId);\r\n    await axios.delete(`http://localhost:3000/tasks/comments/${commentId}`, {withCredentials: true});\r\n    // arr = arr.filter(item => item !== value)\r\n    console.log(comments.value[taskId]);\r\n\r\n}\r\n\r\nconst getCmtsFromOneTask = async(taskId) => {\r\n    const response = await axios.get(\r\n        `http://localhost:3000/tasks/${taskId}/comments`, \r\n        {withCredentials: true}\r\n    );\r\n    commentsOfOneTask.value = response.data;\r\n}\r\n\r\n\r\n// Likes\r\nconst likeClick = async(taskId) => {\r\n\r\n    if(likes.value[taskId].status === false || likes.value[taskId]  === '') {\r\n        if(likes.value[taskId]  === '') {\r\n           likes.value[taskId] = {};\r\n        }\r\n\r\n        const data = {status: true};\r\n        await axios.post(`http://localhost:3000/tasks/${taskId}/likes`, data, {\r\n            headers: {\r\n                Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n            withCredentials: true,\r\n        });\r\n        likes.value[taskId].status  = true;\r\n    }\r\n    else if (likes.value[taskId].status  === true) {\r\n        // const data = {status: false};\r\n        likes.value[taskId].status  = false;\r\n        await axios.delete(`http://localhost:3000/tasks/${taskId}/likes`, {\r\n            headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json;charset=UTF-8\",\r\n            },\r\n            withCredentials: true,\r\n        });\r\n    }\r\n}\r\n\r\nonMounted( async() => {\r\n    const response = await axios.get('http://localhost:3000/tasks', {withCredentials: true});\r\n    console.log(response.data);\r\n    tasks.value = response.data;\r\n\r\n    let count = 0;\r\n    tasks.value.forEach(async(ele) => {\r\n        // const commentsLink = `http://localhost:3000/tasks/${ele.id}/comments`;\r\n        // const likesLink = `http://localhost:3000/tasks/${ele.id}/likes`;\r\n\r\n        // const requestComments = axios.get(commentsLink, {withCredentials: true});\r\n        // const requestLikes = axios.get(likesLink, {withCredentials: true});\r\n\r\n        // await axios.all([requestComments, requestLikes]).then(\r\n        //     axios.spread((...responses) => {\r\n        //     comments.value[ele.id] = responses[0];\r\n        //     likes.value[ele.id] = responses[1];\r\n        //     })\r\n        // );\r\n\r\n        let response;\r\n        response = await axios.get(\r\n            `http://localhost:3000/tasks/${ele.id}/comments`, \r\n            {withCredentials: true}\r\n        );\r\n        comments.value[ele.id] = response.data;\r\n\r\n        response = await axios.get(\r\n            `http://localhost:3000/tasks/${ele.id}/likes`, \r\n            {withCredentials: true}\r\n        );\r\n        likes.value[ele.id] = response.data;\r\n        isEdit.value[ele.id] = false;\r\n\r\n    })\r\n\r\n    console.log(tasks.value);\r\n    console.log(comments.value);\r\n    console.log(likes.value);\r\n    console.log(isEdit.value);\r\n    \r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.liked {\r\n    color: dodgerblue;\r\n}\r\n\r\n.unliked {\r\n    color: darkgray;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}