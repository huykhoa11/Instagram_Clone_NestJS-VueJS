{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRouter } from \"vue-router\";\nimport axios from \"axios\"; // import splide\n\nimport { Splide, SplideSlide } from '@splidejs/vue-splide';\nimport '@splidejs/vue-splide/css'; // const emit = defineEmits(['sendToDashboard'])\n\nexport default {\n  __name: 'Task',\n  props: {\n    passData: Object\n  },\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const router = useRouter();\n    const users = ref([]);\n    const currentUser = ref({});\n    const userId = ref(null);\n    const currentUserId = ref(null);\n    const slideIndex = ref(0);\n    onMounted(async () => {\n      console.log(props.passData);\n      userId.value = parseInt(router.currentRoute.value.params.id);\n      currentUserId.value = parseInt(router.currentRoute.value.query.currentUserId);\n      console.log(userId.value, currentUserId.value);\n      const prev = document.getElementById('prev');\n      const next = document.getElementById('next');\n      const images = document.querySelectorAll('.image');\n      const dots = document.querySelectorAll('.dot');\n\n      (() => {\n        for (let i = 0; i < images.length; i++) {\n          images[i].style.display = \"none\"; // console.log(images[i]);\n        }\n\n        images[0].style.display = 'block';\n        dots[0].classList.add('bg-opacity-100');\n      })();\n\n      const resetSlideIndex = () => {\n        if (slideIndex.value < 0) {\n          slideIndex.value = images.length - 1;\n        } else if (slideIndex.value > images.length - 1) {\n          slideIndex.value = 0;\n        }\n      };\n\n      const showSlide = () => {\n        for (let i = 0; i < images.length; i++) {\n          images[i].style.display = \"none\";\n        }\n\n        images[slideIndex.value].style.display = \"block\";\n\n        for (let i = 0; i < dots.length; i++) {\n          dots[i].classList.remove(\"bg-opacity-100\");\n        }\n\n        dots[slideIndex.value].classList.add(\"bg-opacity-100\");\n      };\n\n      prev.addEventListener('click', () => {\n        slideIndex.value -= 1;\n        resetSlideIndex();\n        console.log(slideIndex.value + 1);\n        showSlide();\n      });\n      next.addEventListener('click', () => {\n        slideIndex.value += 1;\n        resetSlideIndex();\n        console.log(slideIndex.value + 1);\n        showSlide();\n      });\n    });\n    const __returned__ = {\n      router,\n      users,\n      currentUser,\n      userId,\n      currentUserId,\n      slideIndex,\n      props,\n      ref,\n      onMounted,\n      useRouter,\n      axios,\n      Splide,\n      SplideSlide\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","onMounted","useRouter","axios","Splide","SplideSlide","router","users","currentUser","userId","currentUserId","slideIndex","console","log","props","passData","value","parseInt","currentRoute","params","id","query","prev","document","getElementById","next","images","querySelectorAll","dots","i","length","style","display","classList","add","resetSlideIndex","showSlide","remove","addEventListener"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/Task.vue"],"sourcesContent":["<template>\r\n    <div class=\"fixed z-50 left-0 right-0 top-0 bottom-0 m-auto w-2/3 h-5/6 bg-white border border-gray-400 flex\">\r\n\r\n        <!-- splide images -->\r\n        <!-- <Splide :options=\"{ rewind: true }\" aria-label=\"Vue Splide Example\" class=\" w-fulll h-full\">\r\n                <SplideSlide v-for=\"image in Object.assign({}, passData.task.images)\" :key=\"image.id\" class=\" w-full h-full border-2 border-red-500\">\r\n                    <img :src=\"require(`./../assets/${image.name}`)\" alt=\"Sample 1\" class=\" w-full h-full object-cover\">\r\n                </SplideSlide>\r\n        </Splide> -->\r\n\r\n         <div class=\" relative w-3/5 h-full bg-yellow-400\">\r\n            <div v-for=\"image in Object.assign({}, passData.task.images)\" :key=\"image.id\" class=\" image w-full h-full bg-blue-400\">\r\n                <img :src=\"require(`./../assets/${image.name}`)\" alt=\"Sample 1\" class=\" w-full h-full\">\r\n            </div>\r\n\r\n            <div v-if=\"passData.task.images.length > 1\">\r\n\r\n                <div id=\"prev\" class=\" absolute top-1/2 left-2 text-black font-bold w-7 h-7 flex items-center justify-center \r\n                                        -translate-y-1/2 cursor-pointer rounded-full bg-white bg-opacity-50\">\r\n                    <i class=\"fa-solid fa-angle-left\"></i>\r\n                </div>\r\n                <div id=\"next\" class=\" absolute top-1/2 right-2 text-black font-bold w-7 h-7 flex items-center justify-center \r\n                                        -translate-y-1/2 cursor-pointer rounded-full bg-white bg-opacity-50\">\r\n                    <i class=\"fa-solid fa-angle-right\"></i>\r\n                </div>\r\n\r\n                <div class=\" absolute flex bottom-8 left-1/2 -translate-x-1/2 space-x-2\">\r\n                    <div v-for=\"image in Object.assign({}, passData.task.images)\" :key=\"image.id\" class=\" \">\r\n                        <div class=\"dot h-2 w-2 rounded-full bg-white bg-opacity-50\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div> \r\n\r\n\r\n        <div class=\" w-2/5 relative\">\r\n            <div class=\" flex items-center h-16 border border-b-gray-100\">\r\n                <div class=\" flex items-center space-x-3 ml-3\">\r\n                    <img :src=\"require('./../assets/' + passData.task.user.avatar)\" alt=\"\" class=\" w-8 h-8 rounded-full border border-gray-50\">\r\n                    <p class=\" font-semibold\">\r\n                        <router-link :to=\"'/user/' +passData.task.user.id+ '?currentUserId=' +currentUserId\" \r\n                                    class=\" hover:underline hover:decoration-solid\">\r\n                            {{ passData.task.user.username }}\r\n                        </router-link>\r\n                    </p>\r\n                    <button v-if=\"userId !== currentUserId\" class=\"text-blue-400 font-semibold\">Follow</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\" mt-4 h-4/5 border border-green-400\">\r\n                <div class=\" flex items-center space-x-3 ml-3 border border-red-400\">\r\n                    <img :src=\"require('./../assets/' + passData.task.user.avatar)\" alt=\"\" class=\" w-8 h-8 rounded-full border border-gray-50\">\r\n                    <p class=\"\">\r\n                        <router-link :to=\"'/user/' +passData.task.user.id+ '?currentUserId=' +currentUserId\" \r\n                                    class=\" font-semibold hover:underline hover:decoration-solid\">\r\n                            {{ passData.task.user.username }}\r\n                        </router-link>\r\n                        {{ passData.task.content }}\r\n                    </p>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n\r\n            <div class=\" flex justify-around\">\r\n                <button :class=\"[passData.task.likes.find(ele=>ele.user.id===currentUserId) === undefined ?  'text-gray-400' : 'text-blue-400 bg-sky-100'  ]\" \r\n                        @click=\"likeClick(task)\" \r\n                        class=\" px-2 text-sm  hover:bg-slate-200 hover:cursor-pointer\">\r\n                        <i class=\"fa-sharp fa-solid fa-thumbs-up mr-2\"></i>Like\r\n                </button>\r\n                <p class=\" text-xs text-gray-200\">{{ passData.task.updatedAt.split('T')[0] }}</p>\r\n            </div>\r\n\r\n            <div class=\" flex absolute bottom-0 w-full\">\r\n                <input type=\"text\" :id=\"'inputComment' + passData.task.id\" class=\" h-9 flex-1 pl-3 border border-t-gray-200\" placeholder=\"leave a comment\" maxlength=\"50\">\r\n                <button @click=\"addComment(task)\" :id=\"'buttonComment' + passData.task.id\" \r\n                        class=\" px-2 border border-gray-200 bg-pink-500 hover:bg-pink-400 text-gray-100\">Send</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from \"vue-router\"\r\nimport axios from \"axios\";\r\n\r\n// import splide\r\nimport { Splide, SplideSlide } from '@splidejs/vue-splide';\r\nimport '@splidejs/vue-splide/css';\r\n\r\n// const emit = defineEmits(['sendToDashboard'])\r\n\r\nconst router = useRouter();\r\n\r\nconst users = ref([]);\r\nconst currentUser = ref({});\r\n\r\nconst userId = ref(null);\r\nconst currentUserId = ref(null);\r\n\r\nconst slideIndex = ref(0);\r\n\r\nconst props = defineProps({\r\n    passData: Object\r\n});\r\n\r\nonMounted( async() => {\r\n    console.log(props.passData);\r\n\r\n    userId.value = parseInt(router.currentRoute.value.params.id);\r\n    currentUserId.value = parseInt(router.currentRoute.value.query.currentUserId);\r\n    console.log(userId.value, currentUserId.value);\r\n\r\n\r\n    const prev = document.getElementById('prev');\r\n    const next = document.getElementById('next');\r\n    const images = document.querySelectorAll('.image');\r\n    const dots = document.querySelectorAll('.dot');\r\n\r\n    (() => {\r\n        for(let i=0; i<images.length; i++) {\r\n            images[i].style.display = \"none\";\r\n            // console.log(images[i]);\r\n        }\r\n        images[0].style.display = 'block';\r\n        dots[0].classList.add('bg-opacity-100');\r\n    })();\r\n\r\n    const resetSlideIndex = () => {\r\n        if(slideIndex.value < 0) {\r\n            slideIndex.value = images.length -1;\r\n        }\r\n        else if(slideIndex.value > images.length-1) {\r\n            slideIndex.value = 0;\r\n        }\r\n    }\r\n\r\n    const showSlide = () => {\r\n        for(let i=0; i<images.length; i++) {\r\n            images[i].style.display = \"none\";\r\n        }\r\n        images[slideIndex.value].style.display = \"block\";\r\n\r\n        for(let i=0; i<dots.length; i++) {\r\n            dots[i].classList.remove(\"bg-opacity-100\");\r\n        }\r\n        dots[slideIndex.value].classList.add(\"bg-opacity-100\");\r\n    }\r\n    \r\n    prev.addEventListener('click', ()=>{\r\n        slideIndex.value -= 1;\r\n        resetSlideIndex();\r\n        console.log(slideIndex.value+1);\r\n        showSlide();\r\n    })\r\n\r\n    next.addEventListener('click', ()=>{\r\n        slideIndex.value += 1;\r\n        resetSlideIndex();\r\n        console.log(slideIndex.value+1);\r\n        showSlide();\r\n    })\r\n})\r\n\r\n\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}