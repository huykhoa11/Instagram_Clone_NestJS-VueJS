{"ast":null,"code":"import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function combineLatest() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var scheduler = popScheduler(args);\n  var resultSelector = popResultSelector(args);\n\n  var _a = argsArgArrayOrObject(args),\n      observables = _a.args,\n      keys = _a.keys;\n\n  if (observables.length === 0) {\n    return from([], scheduler);\n  }\n\n  var result = new Observable(combineLatestInit(observables, scheduler, keys ? function (values) {\n    return createObject(keys, values);\n  } : identity));\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\nexport function combineLatestInit(observables, scheduler, valueTransform) {\n  if (valueTransform === void 0) {\n    valueTransform = identity;\n  }\n\n  return function (subscriber) {\n    maybeSchedule(scheduler, function () {\n      var length = observables.length;\n      var values = new Array(length);\n      var active = length;\n      var remainingFirstValues = length;\n\n      var _loop_1 = function (i) {\n        maybeSchedule(scheduler, function () {\n          var source = from(observables[i], scheduler);\n          var hasFirstValue = false;\n          source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            values[i] = value;\n\n            if (!hasFirstValue) {\n              hasFirstValue = true;\n              remainingFirstValues--;\n            }\n\n            if (!remainingFirstValues) {\n              subscriber.next(valueTransform(values.slice()));\n            }\n          }, function () {\n            if (! --active) {\n              subscriber.complete();\n            }\n          }));\n        }, subscriber);\n      };\n\n      for (var i = 0; i < length; i++) {\n        _loop_1(i);\n      }\n    }, subscriber);\n  };\n}\n\nfunction maybeSchedule(scheduler, execute, subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,SAASC,oBAAT,QAAqC,8BAArC;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,iBAAT,EAA4BC,YAA5B,QAAgD,cAAhD;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,wBAAT,QAAyC,iCAAzC;AAEA,SAASC,eAAT,QAAgC,yBAAhC;AA4LA,OAAM,SAAUC,aAAV,GAAuB;EAAoC;;OAAA,yCAAc;IAAdC;;;EAC/D,IAAMC,SAAS,GAAGN,YAAY,CAACK,IAAD,CAA9B;EACA,IAAME,cAAc,GAAGR,iBAAiB,CAACM,IAAD,CAAxC;;EAEM,SAA8BV,oBAAoB,CAACU,IAAD,CAAlD;EAAA,IAAQG,WAAW,UAAnB;EAAA,IAAqBC,IAAI,UAAzB;;EAEN,IAAID,WAAW,CAACE,MAAZ,KAAuB,CAA3B,EAA8B;IAI5B,OAAOd,IAAI,CAAC,EAAD,EAAKU,SAAL,CAAX;EACD;;EAED,IAAMK,MAAM,GAAG,IAAIjB,UAAJ,CACbkB,iBAAiB,CACfJ,WADe,EAEfF,SAFe,EAGfG,IAAI,GAEA,UAACI,MAAD,EAAO;IAAK,mBAAY,CAACJ,IAAD,EAAOI,MAAP,CAAZ;EAA0B,CAFtC,GAIAhB,QAPW,CADJ,CAAf;EAYA,OAAOU,cAAc,GAAII,MAAM,CAACG,IAAP,CAAYhB,gBAAgB,CAACS,cAAD,CAA5B,CAAJ,GAAsEI,MAA3F;AACD;AAED,OAAM,SAAUC,iBAAV,CACJJ,WADI,EAEJF,SAFI,EAGJS,cAHI,EAG6C;EAAjD;IAAAA;EAAiD;;EAEjD,OAAO,UAACC,UAAD,EAA4B;IAGjCC,aAAa,CACXX,SADW,EAEX;MACU,UAAM,GAAKE,WAAW,OAAtB;MAER,IAAMK,MAAM,GAAG,IAAIK,KAAJ,CAAUR,MAAV,CAAf;MAGA,IAAIS,MAAM,GAAGT,MAAb;MAIA,IAAIU,oBAAoB,GAAGV,MAA3B;;8BAGSW,GAAC;QACRJ,aAAa,CACXX,SADW,EAEX;UACE,IAAMgB,MAAM,GAAG1B,IAAI,CAACY,WAAW,CAACa,CAAD,CAAZ,EAAiBf,SAAjB,CAAnB;UACA,IAAIiB,aAAa,GAAG,KAApB;UACAD,MAAM,CAACE,SAAP,CACEtB,wBAAwB,CACtBc,UADsB,EAEtB,UAACS,KAAD,EAAM;YAEJZ,MAAM,CAACQ,CAAD,CAAN,GAAYI,KAAZ;;YACA,IAAI,CAACF,aAAL,EAAoB;cAElBA,aAAa,GAAG,IAAhB;cACAH,oBAAoB;YACrB;;YACD,IAAI,CAACA,oBAAL,EAA2B;cAGzBJ,UAAU,CAACU,IAAX,CAAgBX,cAAc,CAACF,MAAM,CAACc,KAAP,EAAD,CAA9B;YACD;UACF,CAfqB,EAgBtB;YACE,IAAI,CAAC,GAAER,MAAP,EAAe;cAGbH,UAAU,CAACY,QAAX;YACD;UACF,CAtBqB,CAD1B;QA0BD,CA/BU,EAgCXZ,UAhCW,CAAb;;;MADF,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,MAApB,EAA4BW,CAAC,EAA7B,EAA+B;gBAAtBA;MAmCR;IACF,CAnDU,EAoDXL,UApDW,CAAb;EAsDD,CAzDD;AA0DD;;AAMD,SAASC,aAAT,CAAuBX,SAAvB,EAA6DuB,OAA7D,EAAkFC,YAAlF,EAA4G;EAC1G,IAAIxB,SAAJ,EAAe;IACbH,eAAe,CAAC2B,YAAD,EAAexB,SAAf,EAA0BuB,OAA1B,CAAf;EACD,CAFD,MAEO;IACLA,OAAO;EACR;AACF","names":["Observable","argsArgArrayOrObject","from","identity","mapOneOrManyArgs","popResultSelector","popScheduler","createObject","createOperatorSubscriber","executeSchedule","combineLatest","args","scheduler","resultSelector","observables","keys","length","result","combineLatestInit","values","pipe","valueTransform","subscriber","maybeSchedule","Array","active","remainingFirstValues","i","source","hasFirstValue","subscribe","value","next","slice","complete","execute","subscription"],"sourceRoot":"","sources":["../../../../src/internal/observable/combineLatest.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}