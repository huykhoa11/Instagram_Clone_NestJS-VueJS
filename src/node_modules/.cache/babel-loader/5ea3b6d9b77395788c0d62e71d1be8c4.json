{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n  return operate(function (source, subscriber) {\n    var windows = [];\n\n    var handleError = function (err) {\n      while (0 < windows.length) {\n        windows.shift().error(err);\n      }\n\n      subscriber.error(err);\n    };\n\n    innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, function (openValue) {\n      var window = new Subject();\n      windows.push(window);\n      var closingSubscription = new Subscription();\n\n      var closeWindow = function () {\n        arrRemove(windows, window);\n        window.complete();\n        closingSubscription.unsubscribe();\n      };\n\n      var closingNotifier;\n\n      try {\n        closingNotifier = innerFrom(closingSelector(openValue));\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      subscriber.next(window.asObservable());\n      closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n    }, noop));\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n\n      var windowsCopy = windows.slice();\n\n      try {\n        for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n          var window_1 = windowsCopy_1_1.value;\n          window_1.next(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (0 < windows.length) {\n        windows.shift().complete();\n      }\n\n      subscriber.complete();\n    }, handleError, function () {\n      while (0 < windows.length) {\n        windows.shift().unsubscribe();\n      }\n    }));\n  });\n}","map":{"version":3,"mappings":";;AACA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAiDA,OAAM,SAAUC,YAAV,CACJC,QADI,EAEJC,eAFI,EAEmD;EAEvD,OAAOP,OAAO,CAAC,UAACQ,MAAD,EAASC,UAAT,EAAmB;IAChC,IAAMC,OAAO,GAAiB,EAA9B;;IAEA,IAAMC,WAAW,GAAG,UAACC,GAAD,EAAS;MAC3B,OAAO,IAAIF,OAAO,CAACG,MAAnB,EAA2B;QACzBH,OAAO,CAACI,KAAR,GAAiBC,KAAjB,CAAuBH,GAAvB;MACD;;MACDH,UAAU,CAACM,KAAX,CAAiBH,GAAjB;IACD,CALD;;IAOAX,SAAS,CAACK,QAAD,CAAT,CAAoBU,SAApB,CACEd,wBAAwB,CACtBO,UADsB,EAEtB,UAACQ,SAAD,EAAU;MACR,IAAMC,MAAM,GAAG,IAAIpB,OAAJ,EAAf;MACAY,OAAO,CAACS,IAAR,CAAaD,MAAb;MACA,IAAME,mBAAmB,GAAG,IAAIrB,YAAJ,EAA5B;;MACA,IAAMsB,WAAW,GAAG;QAClBjB,SAAS,CAACM,OAAD,EAAUQ,MAAV,CAAT;QACAA,MAAM,CAACI,QAAP;QACAF,mBAAmB,CAACG,WAApB;MACD,CAJD;;MAMA,IAAIC,eAAJ;;MACA,IAAI;QACFA,eAAe,GAAGvB,SAAS,CAACM,eAAe,CAACU,SAAD,CAAhB,CAA3B;MACD,CAFD,CAEE,OAAOL,GAAP,EAAY;QACZD,WAAW,CAACC,GAAD,CAAX;QACA;MACD;;MAEDH,UAAU,CAACgB,IAAX,CAAgBP,MAAM,CAACQ,YAAP,EAAhB;MAEAN,mBAAmB,CAACO,GAApB,CAAwBH,eAAe,CAACR,SAAhB,CAA0Bd,wBAAwB,CAACO,UAAD,EAAaY,WAAb,EAA0BlB,IAA1B,EAAgCQ,WAAhC,CAAlD,CAAxB;IACD,CAvBqB,EAwBtBR,IAxBsB,CAD1B;IA8BAK,MAAM,CAACQ,SAAP,CACEd,wBAAwB,CACtBO,UADsB,EAEtB,UAACmB,KAAD,EAAS;;;MAGP,IAAMC,WAAW,GAAGnB,OAAO,CAACoB,KAAR,EAApB;;;QACA,KAAqB,2CAAWC,sCAAhC,EAAgC,qBAAhC,EAAgCA,sCAAhC,EAAkC;UAA7B,IAAMC,QAAM,wBAAZ;UACHA,QAAM,CAACP,IAAP,CAAYG,KAAZ;QACD;;;;;;;;;;;;IACF,CATqB,EAUtB;MAEE,OAAO,IAAIlB,OAAO,CAACG,MAAnB,EAA2B;QACzBH,OAAO,CAACI,KAAR,GAAiBQ,QAAjB;MACD;;MACDb,UAAU,CAACa,QAAX;IACD,CAhBqB,EAiBtBX,WAjBsB,EAkBtB;MAME,OAAO,IAAID,OAAO,CAACG,MAAnB,EAA2B;QACzBH,OAAO,CAACI,KAAR,GAAiBS,WAAjB;MACD;IACF,CA3BqB,CAD1B;EA+BD,CAvEa,CAAd;AAwED","names":["Subject","Subscription","operate","innerFrom","createOperatorSubscriber","noop","arrRemove","windowToggle","openings","closingSelector","source","subscriber","windows","handleError","err","length","shift","error","subscribe","openValue","window","push","closingSubscription","closeWindow","complete","unsubscribe","closingNotifier","next","asObservable","add","value","windowsCopy","slice","windowsCopy_1_1","window_1"],"sourceRoot":"","sources":["../../../../src/internal/operators/windowToggle.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}