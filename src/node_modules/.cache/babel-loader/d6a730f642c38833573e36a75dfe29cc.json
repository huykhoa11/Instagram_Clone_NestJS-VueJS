{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from \"vue-router\";\nexport default {\n  __name: 'Auth',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const username = ref('');\n    const password = ref('');\n    const returnValue = ref('');\n    const isAuthenticated = ref(false);\n    const router = useRouter();\n\n    const signUp = async () => {\n      const data = {\n        username: username,\n        password: password\n      };\n      axios.post('http://localhost:3000/auth/signup', data, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        }\n      }).then(({\n        data\n      }) => {\n        returnValue.value = data;\n        console.log(data);\n      });\n    };\n\n    const signIn = async () => {\n      const data = {\n        username: username.value,\n        password: password.value\n      };\n      let self = this;\n\n      try {\n        const response = await axios.post('http://localhost:3000/auth/signin', data, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json;charset=UTF-8\"\n          }\n        });\n        returnValue.value = response.data;\n        isAuthenticated.value = true; // self.$router.push('/dashboard')\n\n        console.log(returnValue.value);\n      } catch (error) {\n        console.log(error);\n      }\n\n      if (isAuthenticated.value) {\n        router.push('/dashboard');\n      } // try {\n      //   const response = await fetch('http://localhost:3000/auth/signin', {\n      //     method: \"POST\",\n      //     headers: {'Content-Type': 'application/json',},\n      //     body: JSON.stringify(data),\n      //   })\n      //   returnValue.value = await response.json();\n      // } catch (error) {\n      //   console.log(error);\n      // }\n\n    };\n\n    const __returned__ = {\n      username,\n      password,\n      returnValue,\n      isAuthenticated,\n      router,\n      signUp,\n      signIn,\n      ref,\n      axios,\n      useRouter\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AA+BA,SAASA,GAAT,QAAoB,KAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,YAAxB;;;;;;;;IAEA,MAAMC,QAAQ,GAAGH,GAAG,CAAC,EAAD,CAApB;IACA,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,EAAD,CAApB;IACA,MAAMK,WAAW,GAAGL,GAAG,CAAC,EAAD,CAAvB;IACA,MAAMM,eAAe,GAAGN,GAAG,CAAC,KAAD,CAA3B;IACA,MAAMO,MAAM,GAAGL,SAAS,EAAxB;;IAEA,MAAMM,MAAM,GAAG,YAAY;MACzB,MAAMC,IAAI,GAAG;QACXN,QAAQ,EAAEA,QADC;QAEXC,QAAQ,EAAEA;MAFC,CAAb;MAKAH,KAAK,CACJS,IADD,CACM,mCADN,EAC2CD,IAD3C,EACiD;QAC/CE,OAAO,EAAE;UACPC,MAAM,EAAE,kBADD;UAEP,gBAAgB;QAFT;MADsC,CADjD,EAOCC,IAPD,CAOM,CAAC;QAACJ;MAAD,CAAD,KAAY;QAChBJ,WAAW,CAACS,KAAZ,GAAoBL,IAApB;QACAM,OAAO,CAACC,GAAR,CAAYP,IAAZ;MACD,CAVD;IAWD,CAjBD;;IAmBA,MAAMQ,MAAM,GAAG,YAAY;MACzB,MAAMR,IAAI,GAAG;QACXN,QAAQ,EAAEA,QAAQ,CAACW,KADR;QAEXV,QAAQ,EAAEA,QAAQ,CAACU;MAFR,CAAb;MAKA,IAAII,IAAI,GAAG,IAAX;;MACA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACS,IAAN,CAAW,mCAAX,EAAgDD,IAAhD,EAAsD;UAC3EE,OAAO,EAAE;YACPC,MAAM,EAAE,kBADD;YAEP,gBAAgB;UAFT;QADkE,CAAtD,CAAvB;QAMAP,WAAW,CAACS,KAAZ,GAAoBK,QAAQ,CAACV,IAA7B;QACAH,eAAe,CAACQ,KAAhB,GAAwB,IAAxB,CARE,CASF;;QACAC,OAAO,CAACC,GAAR,CAAYX,WAAW,CAACS,KAAxB;MACD,CAXD,CAWE,OAAOM,KAAP,EAAc;QACdL,OAAO,CAACC,GAAR,CAAYI,KAAZ;MACD;;MAED,IAAGd,eAAe,CAACQ,KAAnB,EAA0B;QAACP,MAAM,CAACc,IAAP,CAAY,YAAZ;MAA0B,CAtB5B,CAwBzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;IAKD,CAtCD","names":["ref","axios","useRouter","username","password","returnValue","isAuthenticated","router","signUp","data","post","headers","Accept","then","value","console","log","signIn","self","response","error","push"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/auth/Auth.vue"],"sourcesContent":["<template>\n  <section>\n    <div class=\" flex justify-around\">\n      <div class=\" w-1/3 h-96 border border-stone-700\">\n        <header class=\" w-full h-1/6 bg-sky-200 text-3xl mb-5\">Sign Up</header>\n        <label for=\"\">Username</label>\n        <input type=\"text\" class=\"border border-black\" v-model=\"username\"><br><br>\n        <label for=\"\">Password</label>\n        <input type=\"password\" class=\"border border-black\" v-model=\"password\"><br>\n        <button @click=\"signUp()\" class=\"border border-black bg-slate-300 hover:bg-slate-200\">Sign Up</button>\n      </div>\n\n      <div class=\" w-1/3 h-96 border border-stone-700\">\n        <header class=\" w-full h-1/6 bg-sky-200 text-3xl mb-5\">Sign In</header>\n        <label for=\"\">Username</label>\n        <input type=\"text\" class=\"border border-black\" v-model=\"username\"><br><br>\n        <label for=\"\">Password</label>\n        <input type=\"password\" class=\"border border-black\" v-model=\"password\"><br>\n        <button @click=\"signIn()\" class=\"border border-black bg-slate-300 hover:bg-slate-200\">Sign In</button>\n\n      </div>\n\n    </div>\n\n    <p>{{ returnValue }}</p>\n\n  </section>\n\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport {useRouter} from \"vue-router\"\n\nconst username = ref('');\nconst password = ref('');\nconst returnValue = ref('');\nconst isAuthenticated = ref(false);\nconst router = useRouter()\n\nconst signUp = async () => {\n  const data = {\n    username: username,\n    password: password,\n  };\n\n  axios\n  .post('http://localhost:3000/auth/signup', data, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json;charset=UTF-8\",\n    },\n  })\n  .then(({data}) => {\n    returnValue.value = data;\n    console.log(data);\n  });\n};\n\nconst signIn = async () => {\n  const data = {\n    username: username.value,\n    password: password.value,\n  };\n\n  let self = this;\n  try {\n    const response = await axios.post('http://localhost:3000/auth/signin', data, {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json;charset=UTF-8\",\n      },\n    });\n    returnValue.value = response.data;\n    isAuthenticated.value = true;\n    // self.$router.push('/dashboard')\n    console.log(returnValue.value);\n  } catch (error) {\n    console.log(error);\n  }\n\n  if(isAuthenticated.value) {router.push('/dashboard')}\n\n  // try {\n  //   const response = await fetch('http://localhost:3000/auth/signin', {\n  //     method: \"POST\",\n  //     headers: {'Content-Type': 'application/json',},\n  //     body: JSON.stringify(data),\n  //   })\n  //   returnValue.value = await response.json();\n  // } catch (error) {\n  //   console.log(error);\n  // }\n\n\n\n  \n};\n\n</script>\n\n\n\n<style src=\"./../../assets/style.css\"> \n</style>\n\n"]},"metadata":{},"sourceType":"module"}