{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function windowTime(windowTimeSpan) {\n  var _a, _b;\n\n  var otherArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    otherArgs[_i - 1] = arguments[_i];\n  }\n\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxWindowSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var windowRecords = [];\n    var restartOnClose = false;\n\n    var closeWindow = function (record) {\n      var window = record.window,\n          subs = record.subs;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    var startWindow = function () {\n      if (windowRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var window_1 = new Subject();\n        var record_1 = {\n          window: window_1,\n          subs: subs,\n          seen: 0\n        };\n        windowRecords.push(record_1);\n        subscriber.next(window_1.asObservable());\n        executeSchedule(subs, scheduler, function () {\n          return closeWindow(record_1);\n        }, windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    var loop = function (cb) {\n      return windowRecords.slice().forEach(cb);\n    };\n\n    var terminate = function (cb) {\n      loop(function (_a) {\n        var window = _a.window;\n        return cb(window);\n      });\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      loop(function (record) {\n        record.window.next(value);\n        maxWindowSize <= ++record.seen && closeWindow(record);\n      });\n    }, function () {\n      return terminate(function (consumer) {\n        return consumer.complete();\n      });\n    }, function (err) {\n      return terminate(function (consumer) {\n        return consumer.error(err);\n      });\n    }));\n    return function () {\n      windowRecords = null;\n    };\n  });\n}","map":{"version":3,"mappings":"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","names":["Subject","asyncScheduler","Subscription","operate","createOperatorSubscriber","arrRemove","popScheduler","executeSchedule","windowTime","windowTimeSpan","otherArgs","scheduler","_a","windowCreationInterval","_b","maxWindowSize","Infinity","source","subscriber","windowRecords","restartOnClose","closeWindow","record","subs","window","complete","unsubscribe","startWindow","add","window_1","record_1","seen","push","next","asObservable","loop","cb","slice","forEach","terminate","subscribe","value","consumer","err","error"],"sourceRoot":"","sources":["../../../../src/internal/operators/windowTime.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}