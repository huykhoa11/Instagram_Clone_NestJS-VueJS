{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\nimport { register, spin } from '/src/composables/Fetch.js';\nexport default {\n  __name: 'SignUp',\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const store = useStore();\n    const username = ref('');\n    const password = ref('');\n    const confirmPassword = ref('');\n    const usernameError = ref('');\n    const passwordError = ref('');\n    const confirmPasswordError = ref('');\n    const signUpRef = ref(null);\n    const router = useRouter();\n\n    const inputChange = () => {\n      if (username.value.length >= 4 && username.value.length <= 12) {\n        usernameError.value = '';\n      }\n\n      if (password.value.length >= 6 && password.value.length <= 12) {\n        passwordError.value = '';\n      }\n\n      if (confirmPassword.value.length > 0) {\n        confirmPasswordError.value = '';\n      }\n    };\n\n    const inputFocus = id => {\n      const inputElement = document.getElementById(id);\n      inputElement.style.border = 'solid 1px black';\n    };\n\n    const validateOnBlur = () => {\n      // const usernameInputElement = document.getElementById('usernameInput');\n      // const passwordInputElement = document.getElementById('passwordInput');\n      // const confirmPasswordInputElement = document.getElementById('confirmPasswordInput');\n      const usernameConditionBlank = username.value.length < 4 || password.value.length > 12;\n      const usernameConditionContainWhiteSpace = /\\s/.test(username.value);\n      const passwordCondition = password.value.length < 6 || password.value.length > 12;\n      const confirmCondition = confirmPassword.value === '' || confirmPassword.value !== password.value;\n\n      if (usernameConditionBlank && passwordCondition && confirmCondition) {\n        setError('username', \"Username can't be blank\");\n        setError('password', \"Password must contains 6-12 characters\");\n        setError('confirmPassword', \"Must match the previous entry\");\n        return false;\n      } else if (usernameConditionContainWhiteSpace) {\n        setError('username', \"Username can't contain white space\");\n        return false;\n      } else if (usernameConditionBlank) {\n        setError('username', \"Username can't be blank\");\n        return false;\n      }\n\n      if (passwordCondition) {\n        setError('password', \"Password must contains 6-12 characters\");\n        return false;\n      }\n\n      if (confirmCondition) {\n        setError('confirmPassword', \"Must match the previous entry\");\n        return false;\n      }\n\n      return true;\n    };\n\n    const errorElement = {\n      username: usernameError,\n      password: passwordError,\n      confirmPassword: confirmPasswordError\n    };\n\n    const setError = (ele, text) => {\n      document.getElementById(`${ele}Input`).style.border = \"solid 1px red\";\n      errorElement[ele].value = text;\n    };\n\n    const signUp = async () => {\n      const validate = validateOnBlur();\n      console.log('validateOnBlur', validate);\n\n      if (validate === true) {\n        const data = {\n          username: username.value,\n          password: password.value\n        };\n\n        try {\n          signUpRef.value.disabled = true;\n          signUpRef.value.classList.toggle('hover:bg-gray-500');\n          signUpRef.value.innerText = spin('pink');\n          const response = await register(data);\n          router.push('/auth/signin');\n        } catch (error) {\n          console.log(error);\n\n          if (error.response.status === 409) {\n            signUpRef.value.disabled = false;\n            signUpRef.value.classList.toggle('hover:bg-gray-500');\n            signUpRef.value.innerText = 'User register'; // const usernameInputElement = document.getElementById('usernameInput');\n            // usernameInputElement.style.border = \"solid 1px red\";\n            // usernameError.value = \"Sorry, username already taken\";\n\n            setError('username', \"Sorry, username already taken\");\n          }\n        }\n      }\n    };\n\n    const __returned__ = {\n      store,\n      username,\n      password,\n      confirmPassword,\n      usernameError,\n      passwordError,\n      confirmPasswordError,\n      signUpRef,\n      router,\n      inputChange,\n      inputFocus,\n      validateOnBlur,\n      errorElement,\n      setError,\n      signUp,\n      ref,\n      axios,\n      useRouter,\n      useStore,\n      register,\n      spin\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","axios","useRouter","useStore","register","spin","store","username","password","confirmPassword","usernameError","passwordError","confirmPasswordError","signUpRef","router","inputChange","value","length","inputFocus","id","inputElement","document","getElementById","style","border","validateOnBlur","usernameConditionBlank","usernameConditionContainWhiteSpace","test","passwordCondition","confirmCondition","setError","errorElement","ele","text","signUp","validate","console","log","data","disabled","classList","toggle","innerText","response","push","error","status"],"sources":["E:/LapTrinh/NestJS/social-media-clone/frontend/src/components/auth/SignUp.vue"],"sourcesContent":["<template>\r\n  <section>\r\n    <div class=\" relative w-screen h-screen bg-gray-200 \">\r\n      <div class=\" absolute left-0 right-0 top-10 mx-auto w-1/3 rounded-md border border-gray-100 bg-white\">\r\n        <header class=\" w-full h-20 flex items-center bg-gradient-to-r from-fuchsia-600 to-pink-400 font-bold text-white text-3xl\">Sign Up</header>\r\n        \r\n        <div class=\" p-10\">\r\n          <label for=\"\" class=\" text-lg block\">Username<span class=\"text-red-500\">*</span></label>\r\n          <input id=\"usernameInput\" type=\"text\" class=\"border border-gray-200 h-10 w-full pl-2\" \r\n                            v-model=\"username\" @blur=\"validateOnBlur()\" @focus=\"inputFocus('usernameInput')\" @input=\"inputChange\">\r\n          <p class=\" text-xs text-gray-400\">(*) Username can't contain white space</p>\r\n          <p class=\" h-4 text-red-500\">{{ usernameError }}</p>\r\n          <br>\r\n\r\n          <label for=\"\" class=\" text-lg block\">Password<span class=\"text-red-500\">*</span></label>\r\n          <input id=\"passwordInput\" type=\"password\" class=\"border border-gray-200 h-10 w-full pl-2\" \r\n                            v-model=\"password\" @blur=\"validateOnBlur()\" @focus=\"inputFocus('passwordInput')\" @input=\"inputChange\">\r\n          <p class=\" h-4 text-red-500\">{{ passwordError }}</p>\r\n          <br>\r\n\r\n          <label for=\"\" class=\" text-lg block\">Confirm Password<span class=\"text-red-500\">*</span></label>\r\n          <input id=\"confirmPasswordInput\" type=\"password\" class=\"border border-gray-200 h-10 w-full pl-2\" \r\n                                v-model=\"confirmPassword\" @blur=\"validateOnBlur()\" @focus=\"inputFocus('confirmPasswordInput')\" @input=\"inputChange\">\r\n          <p class=\" h-4 text-red-500\">{{ confirmPasswordError }}</p>\r\n          <br>\r\n          <div>\r\n            <router-link to=\"/auth/signin\" class=\" text-sm text-sky-500 hover:underline hover:decoration-solid\">\r\n              Already have an account? Sign in \r\n            </router-link>\r\n          </div>\r\n\r\n          <button @click=\"signUp()\" class=\" mt-7 py-1 px-3 bg-black rounded-md \r\n                                      text-xl text-white hover:bg-gray-500\" ref=\"signUpRef\">User register</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </section>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport {useRouter} from \"vue-router\"\r\nimport {useStore} from \"vuex\"\r\nimport { register, spin } from '/src/composables/Fetch.js';\r\n\r\nconst store = useStore();\r\n\r\nconst username = ref('');\r\nconst password = ref('');\r\nconst confirmPassword = ref('');\r\nconst usernameError = ref('');\r\nconst passwordError = ref('');\r\nconst confirmPasswordError = ref('');\r\n\r\nconst signUpRef = ref(null);\r\n\r\nconst router = useRouter();\r\n\r\nconst inputChange = () => {\r\n  if(username.value.length >= 4 && username.value.length <= 12) {\r\n    usernameError.value = '';\r\n  }\r\n  if(password.value.length >= 6 && password.value.length <= 12) {\r\n    passwordError.value = '';\r\n  }\r\n  if(confirmPassword.value.length > 0) {\r\n    confirmPasswordError.value = '';\r\n  }\r\n}\r\n\r\n\r\nconst inputFocus = (id) => {\r\n  const inputElement = document.getElementById(id);\r\n  inputElement.style.border = 'solid 1px black';\r\n}\r\n\r\nconst validateOnBlur = () => {\r\n  // const usernameInputElement = document.getElementById('usernameInput');\r\n  // const passwordInputElement = document.getElementById('passwordInput');\r\n  // const confirmPasswordInputElement = document.getElementById('confirmPasswordInput');\r\n\r\n  const usernameConditionBlank = username.value.length < 4 || password.value.length > 12;\r\n  const usernameConditionContainWhiteSpace = /\\s/.test(username.value);\r\n  const passwordCondition = password.value.length < 6 || password.value.length > 12;\r\n  const confirmCondition  = confirmPassword.value === '' || confirmPassword.value !== password.value;  \r\n\r\n  if (usernameConditionBlank && passwordCondition && confirmCondition) {\r\n    setError('username', \"Username can't be blank\");\r\n    setError('password', \"Password must contains 6-12 characters\");\r\n    setError('confirmPassword', \"Must match the previous entry\");\r\n    return false;\r\n  }\r\n  else if (usernameConditionContainWhiteSpace) {\r\n    setError('username', \"Username can't contain white space\");\r\n    return false;\r\n  }\r\n  else if(usernameConditionBlank) {\r\n    setError('username', \"Username can't be blank\");\r\n    return false;\r\n  }\r\n  if(passwordCondition) {\r\n    setError('password', \"Password must contains 6-12 characters\");\r\n    return false;\r\n  }\r\n  if(confirmCondition) {\r\n    setError('confirmPassword', \"Must match the previous entry\");\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst errorElement = {\r\n  username: usernameError,\r\n  password: passwordError,\r\n  confirmPassword: confirmPasswordError,\r\n}\r\n\r\nconst setError = (ele, text) => {\r\n  document.getElementById(`${ele}Input`).style.border = \"solid 1px red\";\r\n  errorElement[ele].value = text;\r\n}\r\n\r\nconst signUp = async () => {\r\n  const validate = validateOnBlur();\r\n  console.log('validateOnBlur', validate);\r\n  if(validate === true) {\r\n    const data = {\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    try {\r\n      signUpRef.value.disabled = true;\r\n      signUpRef.value.classList.toggle('hover:bg-gray-500');\r\n      signUpRef.value.innerText = spin('pink');\r\n      const response = await register(data);\r\n      \r\n      router.push('/auth/signin')\r\n    } catch (error) {\r\n      console.log(error);\r\n      if (error.response.status === 409) {\r\n        signUpRef.value.disabled = false;\r\n        signUpRef.value.classList.toggle('hover:bg-gray-500');\r\n        signUpRef.value.innerText = 'User register';\r\n\r\n        // const usernameInputElement = document.getElementById('usernameInput');\r\n        // usernameInputElement.style.border = \"solid 1px red\";\r\n        // usernameError.value = \"Sorry, username already taken\";\r\n        setError('username', \"Sorry, username already taken\")\r\n      }\r\n    } \r\n  }\r\n\r\n};\r\n\r\n</script>"]},"metadata":{},"sourceType":"module"}