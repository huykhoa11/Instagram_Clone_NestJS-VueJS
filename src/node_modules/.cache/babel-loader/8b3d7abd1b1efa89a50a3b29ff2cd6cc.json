{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = options.connector,\n      connector = _a === void 0 ? function () {\n    return new Subject();\n  } : _a,\n      _b = options.resetOnError,\n      resetOnError = _b === void 0 ? true : _b,\n      _c = options.resetOnComplete,\n      resetOnComplete = _c === void 0 ? true : _c,\n      _d = options.resetOnRefCountZero,\n      resetOnRefCountZero = _d === void 0 ? true : _d;\n  return function (wrapperSource) {\n    var connection;\n    var resetConnection;\n    var subject;\n    var refCount = 0;\n    var hasCompleted = false;\n    var hasErrored = false;\n\n    var cancelReset = function () {\n      resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n      resetConnection = undefined;\n    };\n\n    var reset = function () {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n\n    var resetAndUnsubscribe = function () {\n      var conn = connection;\n      reset();\n      conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n    };\n\n    return operate(function (source, subscriber) {\n      refCount++;\n\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n\n      var dest = subject = subject !== null && subject !== void 0 ? subject : connector();\n      subscriber.add(function () {\n        refCount--;\n\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n      dest.subscribe(subscriber);\n\n      if (!connection && refCount > 0) {\n        connection = new SafeSubscriber({\n          next: function (value) {\n            return dest.next(value);\n          },\n          error: function (err) {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: function () {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          }\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\n\nfunction handleReset(reset, on) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  if (on === true) {\n    reset();\n    return;\n  }\n\n  if (on === false) {\n    return;\n  }\n\n  var onSubscriber = new SafeSubscriber({\n    next: function () {\n      onSubscriber.unsubscribe();\n      reset();\n    }\n  });\n  return on.apply(void 0, __spreadArray([], __read(args))).subscribe(onSubscriber);\n}","map":{"version":3,"mappings":"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","names":["innerFrom","Subject","SafeSubscriber","operate","share","options","_a","_b","resetOnError","_c","resetOnComplete","_d","resetOnRefCountZero","wrapperSource","connection","resetConnection","subject","refCount","hasCompleted","hasErrored","cancelReset","unsubscribe","undefined","reset","resetAndUnsubscribe","conn","source","subscriber","dest","connector","add","handleReset","subscribe","next","value","error","err","complete","on","args","onSubscriber","__spreadArray"],"sourceRoot":"","sources":["../../../../src/internal/operators/share.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}