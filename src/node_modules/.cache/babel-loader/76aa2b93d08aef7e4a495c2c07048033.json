{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __values } from \"tslib\";\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { asyncScheduler } from '../scheduler/async';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function bufferTime(bufferTimeSpan) {\n  var _a, _b;\n\n  var otherArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    otherArgs[_i - 1] = arguments[_i];\n  }\n\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxBufferSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var bufferRecords = [];\n    var restartOnEmit = false;\n\n    var emit = function (record) {\n      var buffer = record.buffer,\n          subs = record.subs;\n      subs.unsubscribe();\n      arrRemove(bufferRecords, record);\n      subscriber.next(buffer);\n      restartOnEmit && startBuffer();\n    };\n\n    var startBuffer = function () {\n      if (bufferRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var buffer = [];\n        var record_1 = {\n          buffer: buffer,\n          subs: subs\n        };\n        bufferRecords.push(record_1);\n        executeSchedule(subs, scheduler, function () {\n          return emit(record_1);\n        }, bufferTimeSpan);\n      }\n    };\n\n    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n      executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);\n    } else {\n      restartOnEmit = true;\n    }\n\n    startBuffer();\n    var bufferTimeSubscriber = createOperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n\n      var recordsCopy = bufferRecords.slice();\n\n      try {\n        for (var recordsCopy_1 = __values(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {\n          var record = recordsCopy_1_1.value;\n          var buffer = record.buffer;\n          buffer.push(value);\n          maxBufferSize <= buffer.length && emit(record);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a = recordsCopy_1.return)) _a.call(recordsCopy_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {\n        subscriber.next(bufferRecords.shift().buffer);\n      }\n\n      bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();\n      subscriber.complete();\n      subscriber.unsubscribe();\n    }, undefined, function () {\n      return bufferRecords = null;\n    });\n    source.subscribe(bufferTimeSubscriber);\n  });\n}","map":{"version":3,"mappings":"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","names":["Subscription","operate","createOperatorSubscriber","arrRemove","asyncScheduler","popScheduler","executeSchedule","bufferTime","bufferTimeSpan","otherArgs","scheduler","_a","bufferCreationInterval","_b","maxBufferSize","Infinity","source","subscriber","bufferRecords","restartOnEmit","emit","record","subs","unsubscribe","next","buffer","startBuffer","add","record_1","push","bufferTimeSubscriber","value","recordsCopy","slice","recordsCopy_1_1","length","shift","complete","undefined","subscribe"],"sourceRoot":"","sources":["../../../../src/internal/operators/bufferTime.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}