{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function windowCount(windowSize, startWindowEvery) {\n  if (startWindowEvery === void 0) {\n    startWindowEvery = 0;\n  }\n\n  var startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n  return operate(function (source, subscriber) {\n    var windows = [new Subject()];\n    var starts = [];\n    var count = 0;\n    subscriber.next(windows[0].asObservable());\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n\n      try {\n        for (var windows_1 = __values(windows), windows_1_1 = windows_1.next(); !windows_1_1.done; windows_1_1 = windows_1.next()) {\n          var window_1 = windows_1_1.value;\n          window_1.next(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (windows_1_1 && !windows_1_1.done && (_a = windows_1.return)) _a.call(windows_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      var c = count - windowSize + 1;\n\n      if (c >= 0 && c % startEvery === 0) {\n        windows.shift().complete();\n      }\n\n      if (++count % startEvery === 0) {\n        var window_2 = new Subject();\n        windows.push(window_2);\n        subscriber.next(window_2.asObservable());\n      }\n    }, function () {\n      while (windows.length > 0) {\n        windows.shift().complete();\n      }\n\n      subscriber.complete();\n    }, function (err) {\n      while (windows.length > 0) {\n        windows.shift().error(err);\n      }\n\n      subscriber.error(err);\n    }, function () {\n      starts = null;\n      windows = null;\n    }));\n  });\n}","map":{"version":3,"mappings":";;AACA,SAASA,OAAT,QAAwB,YAAxB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AAgEA,OAAM,SAAUC,WAAV,CAAyBC,UAAzB,EAA6CC,gBAA7C,EAAyE;EAA5B;IAAAA;EAA4B;;EAC7E,IAAMC,UAAU,GAAGD,gBAAgB,GAAG,CAAnB,GAAuBA,gBAAvB,GAA0CD,UAA7D;EAEA,OAAOH,OAAO,CAAC,UAACM,MAAD,EAASC,UAAT,EAAmB;IAChC,IAAIC,OAAO,GAAG,CAAC,IAAIT,OAAJ,EAAD,CAAd;IACA,IAAIU,MAAM,GAAa,EAAvB;IACA,IAAIC,KAAK,GAAG,CAAZ;IAGAH,UAAU,CAACI,IAAX,CAAgBH,OAAO,CAAC,CAAD,CAAP,CAAWI,YAAX,EAAhB;IAEAN,MAAM,CAACO,SAAP,CACEZ,wBAAwB,CACtBM,UADsB,EAEtB,UAACO,KAAD,EAAS;;;;QAIP,KAAqB,mCAAOC,8BAA5B,EAA4B,iBAA5B,EAA4BA,8BAA5B,EAA8B;UAAzB,IAAMC,QAAM,oBAAZ;UACHA,QAAM,CAACL,IAAP,CAAYG,KAAZ;QACD;;;;;;;;;;;;;MAMD,IAAMG,CAAC,GAAGP,KAAK,GAAGP,UAAR,GAAqB,CAA/B;;MACA,IAAIc,CAAC,IAAI,CAAL,IAAUA,CAAC,GAAGZ,UAAJ,KAAmB,CAAjC,EAAoC;QAClCG,OAAO,CAACU,KAAR,GAAiBC,QAAjB;MACD;;MAOD,IAAI,EAAET,KAAF,GAAUL,UAAV,KAAyB,CAA7B,EAAgC;QAC9B,IAAMe,QAAM,GAAG,IAAIrB,OAAJ,EAAf;QACAS,OAAO,CAACa,IAAR,CAAaD,QAAb;QACAb,UAAU,CAACI,IAAX,CAAgBS,QAAM,CAACR,YAAP,EAAhB;MACD;IACF,CA7BqB,EA8BtB;MACE,OAAOJ,OAAO,CAACc,MAAR,GAAiB,CAAxB,EAA2B;QACzBd,OAAO,CAACU,KAAR,GAAiBC,QAAjB;MACD;;MACDZ,UAAU,CAACY,QAAX;IACD,CAnCqB,EAoCtB,UAACI,GAAD,EAAI;MACF,OAAOf,OAAO,CAACc,MAAR,GAAiB,CAAxB,EAA2B;QACzBd,OAAO,CAACU,KAAR,GAAiBM,KAAjB,CAAuBD,GAAvB;MACD;;MACDhB,UAAU,CAACiB,KAAX,CAAiBD,GAAjB;IACD,CAzCqB,EA0CtB;MACEd,MAAM,GAAG,IAAT;MACAD,OAAO,GAAG,IAAV;IACD,CA7CqB,CAD1B;EAiDD,CAzDa,CAAd;AA0DD","names":["Subject","operate","createOperatorSubscriber","windowCount","windowSize","startWindowEvery","startEvery","source","subscriber","windows","starts","count","next","asObservable","subscribe","value","windows_1_1","window_1","c","shift","complete","window_2","push","length","err","error"],"sourceRoot":"","sources":["../../../../src/internal/operators/windowCount.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}